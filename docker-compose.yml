version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: praevisio_db
    environment:
      POSTGRES_USER: praevisio
      POSTGRES_PASSWORD: praevisio
      POSTGRES_DB: praevisio
    volumes:
      - praevisio_db_data:/var/lib/postgresql/data
    healthcheck:
       test: ["CMD-SHELL", "PGPASSWORD=praevisio pg_isready -U praevisio -d praevisio"]
       interval: 5s
       timeout: 5s
       retries: 12
    networks:
      - praevisio_net

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: praevisio_backend
    user: "0:0"
    ports:
      - '4000:4000'
    environment:
      PRAEVISIO_BEARER_TOKEN: ${PRAEVISIO_BEARER_TOKEN:-demo-token}
      DATABASE_URL: ${DATABASE_URL:-postgresql://praevisio:praevisio@db:5432/praevisio?schema=public}
      PORT: '4000'
      OLLAMA_URL: 'http://host.docker.internal:11434/api/generate'
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4000/api/platform-status || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 30s
    networks:
      - praevisio_net

  # El servicio prisma-seed ya no es necesario, el backend se encarga de ello.
  # prisma-seed: ...


  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: praevisio_frontend
    # Ejecutar como root para evitar problemas de permisos en vol√∫menes montados
    # (por ejemplo, Vite necesita escribir en /app/node_modules/.vite-temp).
    user: "0:0"
    working_dir: /app
    ports:
      - '3002:3002'
    depends_on:
      backend:
        condition: service_healthy
    environment:
      NODE_ENV: development
    volumes:
      # Mount only the source files needed for hot-reload to avoid overwriting
      # the rest of the image filesystem (including node_modules).
      - ./src:/app/src:cached
      - ./public:/app/public:cached
      - ./index.html:/app/index.html:cached
      - ./package.json:/app/package.json:cached
      - ./package-lock.json:/app/package-lock.json:cached
      - ./vite.config.ts:/app/vite.config.ts:cached
      - ./tsconfig.json:/app/tsconfig.json:cached
      # Keep node_modules isolated in a named volume populated from the image
      - praevisio_frontend_node_modules:/app/node_modules
    # On first start, if the named volume is empty, install dependencies into it.
    # This guarantees /app/node_modules contains the project deps (including vite)
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://0.0.0.0:3002 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 30s
    networks:
      - praevisio_net

  e2e:
    build:
      context: .
      dockerfile: Dockerfile.e2e
    container_name: praevisio_e2e
    depends_on:
      frontend:
        condition: service_healthy
    volumes:
      - ./playwright.config.ts:/app/playwright.config.ts:cached
      - ./tests/e2e:/app/tests/e2e:cached
    networks:
      - praevisio_net

volumes:
  praevisio_db_data:
  praevisio_frontend_node_modules:
  backend_node_modules:

networks:
  praevisio_net:
    driver: bridge
