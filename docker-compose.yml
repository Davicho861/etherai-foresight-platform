version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: praevisio_db
    environment:
      POSTGRES_USER: praevisio
      POSTGRES_PASSWORD: praevisio
      POSTGRES_DB: praevisio
    volumes:
      - praevisio_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=praevisio pg_isready -U praevisio -d praevisio"]
      interval: 5s
      timeout: 5s
      retries: 12
    networks:
      - praevisio_net

  neo4j:
    image: neo4j:5.15
    container_name: praevisio_neo4j
    environment:
      NEO4J_AUTH: neo4j/praevisio_password
      NEO4J_PLUGINS: '["graph-data-science"]'
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    ports:
      - "7474:7474"
      - "7687:7687"
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "praevisio_password", "MATCH () RETURN count(*) limit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 30s
    networks:
      - praevisio_net

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: praevisio_backend
    ports:
      - '4000:4000'
    environment:
      PRAEVISIO_BEARER_TOKEN: ${PRAEVISIO_BEARER_TOKEN:-demo-token}
      DATABASE_URL: ${DATABASE_URL:-postgresql://praevisio:praevisio@db:5432/praevisio?schema=public}
      NEO4J_HOST: praevisio_neo4j
      PORT: '4000'
      OLLAMA_URL: 'http://host.docker.internal:11434/api/generate'
      TEST_MODE: '${TEST_MODE:-false}'
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4000/api/platform-status || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 30s
    networks:
      - praevisio_net

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: praevisio_frontend
    ports:
      - '3002:3002'
    depends_on:
      - backend
    environment:
      - NODE_ENV=development
    command: npm run dev:container
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3002/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - praevisio_net

  e2e-tester:
    image: mcr.microsoft.com/playwright:v1.56.0-jammy
    container_name: praevisio_e2e
    depends_on:
      - frontend
    environment:
      # Point Playwright and tests to the compose service hostnames/ports
      FRONTEND_URL: 'http://praevisio_frontend:3002'
      API_BASE: 'http://praevisio_backend:4000'
      TEST_MODE: '${TEST_MODE:-false}'
    volumes:
      - .:/app
    working_dir: /app
    user: root
    command: npx playwright test
    networks:
      - praevisio_net

  mock-api-server:
    build:
      context: ./server/mocks/mock-api-server
      dockerfile: Dockerfile
    container_name: praevisio_mock_api
    ports:
      - '3001:3001'
    environment:
      MOCK_API_PORT: '3001'
    volumes:
      - ./server/mocks:/app/mocks:ro
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 12
      start_period: 10s
    networks:
      - praevisio_net

volumes:
  praevisio_db_data:
  neo4j_data:
  neo4j_logs:

networks:
  praevisio_net:
    driver: bridge
