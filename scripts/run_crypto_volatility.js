import MetatronAgent from '../server/src/agents.js';

async function runCryptoVolatilityAnalysis() {
  try {
    const cryptoAgent = new MetatronAgent('CryptoVolatilityAgent');
    const result = await cryptoAgent.run({
      cryptoIds: ['bitcoin', 'ethereum', 'cardano', 'solana'],
      days: 30
    });

    console.log('Crypto Volatility Analysis Result:');
    console.log(JSON.stringify(result, null, 2));

    // Generate a report
    const fs = await import('fs');
    const report = `# CRYPTO VOLATILITY REPORT

## Global Risk Assessment
${result.globalRiskAssessment.assessment}

## Average Volatility
${(result.globalRiskAssessment.averageVolatility * 100).toFixed(2)}%

## High Risk Cryptocurrencies
${result.globalRiskAssessment.highRiskCryptos}

## Recommendations
${result.globalRiskAssessment.recommendations.map(r => `- ${r}`).join('\n')}

## Detailed Analysis
${Object.entries(result.volatilityAnalysis).map(([id, data]) => `
### ${id.toUpperCase()}
- Current Price: $${data.currentPrice.toFixed(2)}
- 24h Change: ${data.priceChange24h.toFixed(2)}%
- Volatility: ${(data.volatility * 100).toFixed(2)}%
- Trend: ${data.trend}
- Risk Level: ${data.riskLevel}
- Market Cap: $${data.marketCap.toLocaleString()}
`).join('\n')}

Generated by Praevisio AI - CryptoVolatilityAgent - ${new Date().toISOString()}
`;

    fs.writeFileSync('CRYPTO_VOLATILITY_REPORT.md', report);
    console.log('Report saved to CRYPTO_VOLATILITY_REPORT.md');

  } catch (error) {
    console.error('Error running crypto volatility analysis:', error);
  }
}

runCryptoVolatilityAnalysis();