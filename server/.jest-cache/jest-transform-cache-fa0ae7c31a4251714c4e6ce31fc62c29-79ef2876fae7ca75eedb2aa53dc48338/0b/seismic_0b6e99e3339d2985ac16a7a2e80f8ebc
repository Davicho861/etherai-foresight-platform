c0d0d98624f99d56db7e85e7be240e97
/* istanbul ignore next */
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var
/* istanbul ignore next */
_express = _interopRequireDefault(require("express"));
var
/* istanbul ignore next */
_SeismicIntegration = require("../services/SeismicIntegration.js");
var
/* istanbul ignore next */
_GeophysicalRiskAgent = require("../agents/GeophysicalRiskAgent.js");
/* istanbul ignore next */ function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function cov_29onkg4l79() {
  var path = "/home/davicho/etherai-foresight-platform-main/server/src/routes/seismic.js";
  var hash = "4067fd1fbf5821b5077983687f3a2ac2e8b577fc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/davicho/etherai-foresight-platform-main/server/src/routes/seismic.js",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 31
        }
      },
      "1": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "2": {
        start: {
          line: 13,
          column: 2
        },
        end: {
          line: 20,
          column: 3
        }
      },
      "3": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "4": {
        start: {
          line: 15,
          column: 26
        },
        end: {
          line: 15,
          column: 57
        }
      },
      "5": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 28
        }
      },
      "6": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 61
        }
      },
      "7": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 76
        }
      },
      "8": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 47,
          column: 3
        }
      },
      "9": {
        start: {
          line: 29,
          column: 2
        },
        end: {
          line: 46,
          column: 3
        }
      },
      "10": {
        start: {
          line: 30,
          column: 20
        },
        end: {
          line: 30,
          column: 42
        }
      },
      "11": {
        start: {
          line: 31,
          column: 19
        },
        end: {
          line: 31,
          column: 50
        }
      },
      "12": {
        start: {
          line: 32,
          column: 23
        },
        end: {
          line: 32,
          column: 36
        }
      },
      "13": {
        start: {
          line: 33,
          column: 25
        },
        end: {
          line: 33,
          column: 87
        }
      },
      "14": {
        start: {
          line: 33,
          column: 70
        },
        end: {
          line: 33,
          column: 81
        }
      },
      "15": {
        start: {
          line: 34,
          column: 24
        },
        end: {
          line: 34,
          column: 77
        }
      },
      "16": {
        start: {
          line: 35,
          column: 26
        },
        end: {
          line: 35,
          column: 82
        }
      },
      "17": {
        start: {
          line: 35,
          column: 45
        },
        end: {
          line: 35,
          column: 63
        }
      },
      "18": {
        start: {
          line: 35,
          column: 74
        },
        end: {
          line: 35,
          column: 81
        }
      },
      "19": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 42,
          column: 7
        }
      },
      "20": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 57
        }
      },
      "21": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 83
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 12,
            column: 25
          }
        },
        loc: {
          start: {
            line: 12,
            column: 44
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 28,
            column: 20
          },
          end: {
            line: 28,
            column: 21
          }
        },
        loc: {
          start: {
            line: 28,
            column: 40
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 28
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 33,
            column: 65
          },
          end: {
            line: 33,
            column: 66
          }
        },
        loc: {
          start: {
            line: 33,
            column: 70
          },
          end: {
            line: 33,
            column: 81
          }
        },
        line: 33
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 35,
            column: 40
          },
          end: {
            line: 35,
            column: 41
          }
        },
        loc: {
          start: {
            line: 35,
            column: 45
          },
          end: {
            line: 35,
            column: 63
          }
        },
        line: 35
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 35,
            column: 69
          },
          end: {
            line: 35,
            column: 70
          }
        },
        loc: {
          start: {
            line: 35,
            column: 74
          },
          end: {
            line: 35,
            column: 81
          }
        },
        line: 35
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 33,
            column: 25
          },
          end: {
            line: 33,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 33,
            column: 42
          },
          end: {
            line: 33,
            column: 83
          }
        }, {
          start: {
            line: 33,
            column: 86
          },
          end: {
            line: 33,
            column: 87
          }
        }],
        line: 33
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 41
          },
          end: {
            line: 34,
            column: 73
          }
        }, {
          start: {
            line: 34,
            column: 76
          },
          end: {
            line: 34,
            column: 77
          }
        }],
        line: 34
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4067fd1fbf5821b5077983687f3a2ac2e8b577fc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29onkg4l79 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29onkg4l79();
const router =
/* istanbul ignore next */
(cov_29onkg4l79().s[0]++,
/* istanbul ignore next */
_express.
/* istanbul ignore next */
default.Router());

/**
 * @route GET /api/seismic/activity
 * @description Provides a stream of processed real-time seismic activity.
 * @access Protected
 */
/* istanbul ignore next */
cov_29onkg4l79().s[1]++;
router.get('/activity', async (req, res) => {
  /* istanbul ignore next */
  cov_29onkg4l79().f[0]++;
  cov_29onkg4l79().s[2]++;
  try {
    const rawData =
    /* istanbul ignore next */
    (cov_29onkg4l79().s[3]++, await
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _SeismicIntegration.
    /* istanbul ignore next */
    getSeismicData)());
    const processedData =
    /* istanbul ignore next */
    (cov_29onkg4l79().s[4]++,
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _GeophysicalRiskAgent.
    /* istanbul ignore next */
    analyzeSeismicActivity)(rawData));
    /* istanbul ignore next */
    cov_29onkg4l79().s[5]++;
    res.json(processedData);
  } catch (error) {
    /* istanbul ignore next */
    cov_29onkg4l79().s[6]++;
    console.error('Error in seismic activity route:', error);
    /* istanbul ignore next */
    cov_29onkg4l79().s[7]++;
    res.status(500).json({
      error: 'Failed to retrieve seismic activity.'
    });
  }
});

/**
 * @route GET /api/seismic/risk
 * @description Provides geophysical risk assessment based on seismic activity.
 * @access Protected
 */
/* istanbul ignore next */
cov_29onkg4l79().s[8]++;
router.get('/risk', async (req, res) => {
  /* istanbul ignore next */
  cov_29onkg4l79().f[1]++;
  cov_29onkg4l79().s[9]++;
  try {
    const rawData =
    /* istanbul ignore next */
    (cov_29onkg4l79().s[10]++, await
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _SeismicIntegration.
    /* istanbul ignore next */
    getSeismicData)());
    const events =
    /* istanbul ignore next */
    (cov_29onkg4l79().s[11]++,
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _GeophysicalRiskAgent.
    /* istanbul ignore next */
    analyzeSeismicActivity)(rawData));
    const eventCount =
    /* istanbul ignore next */
    (cov_29onkg4l79().s[12]++, events.length);
    const maxMagnitude =
    /* istanbul ignore next */
    (cov_29onkg4l79().s[13]++, eventCount > 0 ?
    /* istanbul ignore next */
    (cov_29onkg4l79().b[0][0]++, Math.max(...events.map(e => {
      /* istanbul ignore next */
      cov_29onkg4l79().f[2]++;
      cov_29onkg4l79().s[14]++;
      return e.magnitude;
    }))) :
    /* istanbul ignore next */
    (cov_29onkg4l79().b[0][1]++, 0));
    const overallRisk =
    /* istanbul ignore next */
    (cov_29onkg4l79().s[15]++, eventCount > 0 ?
    /* istanbul ignore next */
    (cov_29onkg4l79().b[1][0]++, maxMagnitude * eventCount / 10) :
    /* istanbul ignore next */
    (cov_29onkg4l79().b[1][1]++, 0)); // Simple risk calculation
    const highRiskZones =
    /* istanbul ignore next */
    (cov_29onkg4l79().s[16]++, events.filter(e => {
      /* istanbul ignore next */
      cov_29onkg4l79().f[3]++;
      cov_29onkg4l79().s[17]++;
      return e.magnitude >= 5.0;
    }).map(e => {
      /* istanbul ignore next */
      cov_29onkg4l79().f[4]++;
      cov_29onkg4l79().s[18]++;
      return e.place;
    }));
    /* istanbul ignore next */
    cov_29onkg4l79().s[19]++;
    res.json({
      overallRisk,
      eventCount,
      maxMagnitude,
      highRiskZones
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_29onkg4l79().s[20]++;
    console.error('Error in seismic risk route:', error);
    /* istanbul ignore next */
    cov_29onkg4l79().s[21]++;
    res.status(500).json({
      error: 'Failed to retrieve seismic risk assessment.'
    });
  }
});
/* istanbul ignore next */
var _default = exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,