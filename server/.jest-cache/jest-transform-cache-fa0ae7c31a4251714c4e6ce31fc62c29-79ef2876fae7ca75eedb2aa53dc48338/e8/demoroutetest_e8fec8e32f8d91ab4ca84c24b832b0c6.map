{"version":3,"names":["_server","require","request","express","describe","beforeAll","server","listen","onUnhandledRequest","afterAll","close","afterEach","resetHandlers","jest","resetModules","restoreAllMocks","process","env","FORCE_MOCKS","test","isolateModulesAsync","doMock","moduleData","findMany","fn","mockResolvedValue","timestamp","Date","value","demoRouter","router","default","app","use","res","get","set","expect","statusCode","toBe","body","kpis","toBeDefined","Array","isArray","countries","length","toBeGreaterThan","chartData","getChromaClient","access","readFile","JSON","stringify","id","taskReplays","toBeGreaterThanOrEqual"],"sources":["demo.route.test.js"],"sourcesContent":["import { server } from '../mocks/server.js';\nconst request = require('supertest');\nconst express = require('express');\n\ndescribe('/api/demo routes', () => {\n  beforeAll(() => {\n    server.listen({ onUnhandledRequest: 'bypass' });\n  });\n\n  afterAll(() => {\n    server.close();\n  });\n\n  afterEach(() => {\n    server.resetHandlers();\n    jest.resetModules();\n    jest.restoreAllMocks();\n    delete process.env.FORCE_MOCKS;\n  });\n\n  test('GET /full-state returns aggregated structure', async () => {\n    await jest.isolateModulesAsync(async () => {\n      // Mock prisma.moduleData.findMany to return some historical entries\n      jest.doMock('../../src/prisma.js', () => ({\n        moduleData: {\n          findMany: jest.fn().mockResolvedValue([\n            { timestamp: new Date('2025-04-01'), value: 90 },\n            { timestamp: new Date('2025-05-01'), value: 92 },\n            { timestamp: new Date('2025-06-01'), value: 91 }\n          ])\n        }\n      }));\n\n      const demoRouter = require('../../src/routes/demo.js');\n      let router = demoRouter;\n      if (router && router.default) router = router.default;\n\n      const app = express();\n      app.use('/api/demo', router);\n\n      const res = await request(app).get('/api/demo/full-state').set('Host', 'localhost');\n      expect(res.statusCode).toBe(200);\n      expect(res.body.kpis).toBeDefined();\n      expect(Array.isArray(res.body.countries)).toBe(true);\n      expect(res.body.countries.length).toBeGreaterThan(0);\n      expect(Array.isArray(res.body.chartData)).toBe(true);\n    });\n  });\n\n  test('GET /mission-replays returns items from fallback when no chroma client', async () => {\n    await jest.isolateModulesAsync(async () => {\n      // Mock getChromaClient to return null so code reads local file\n      jest.doMock('../../src/database.js', () => ({ getChromaClient: jest.fn(() => null) }));\n\n      // Mock fs/promises access and readFile\n      jest.doMock('fs/promises', () => ({\n        access: jest.fn().mockResolvedValue(true),\n        readFile: jest.fn().mockResolvedValue(JSON.stringify({ id: 'x' }) + '\\n')\n      }));\n\n      const demoRouter = require('../../src/routes/demo.js');\n      let router = demoRouter;\n      if (router && router.default) router = router.default;\n\n      const app = express();\n      app.use('/api/demo', router);\n\n      const res = await request(app).get('/api/demo/mission-replays').set('Host', 'localhost');\n      expect(res.statusCode).toBe(200);\n      expect(Array.isArray(res.body.taskReplays)).toBe(true);\n      expect(res.body.taskReplays.length).toBeGreaterThanOrEqual(1);\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}