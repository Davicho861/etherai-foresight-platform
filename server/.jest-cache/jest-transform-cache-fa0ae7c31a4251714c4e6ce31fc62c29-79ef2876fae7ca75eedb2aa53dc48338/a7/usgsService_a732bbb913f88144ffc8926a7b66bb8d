a5b45669eda547097c6a874ae9fe1fc4
/* istanbul ignore next */
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSeismicActivity = void 0;
var
/* istanbul ignore next */
_SeismicIntegration = require("./SeismicIntegration.js");
/* istanbul ignore next */
function cov_47pjnniy8() {
  var path = "/home/davicho/etherai-foresight-platform-main/server/src/services/usgsService.js";
  var hash = "147a91166dca42d3794bb984b23fb363c37f2aac";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/davicho/etherai-foresight-platform-main/server/src/services/usgsService.js",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 34
        },
        end: {
          line: 49,
          column: 1
        }
      },
      "1": {
        start: {
          line: 14,
          column: 2
        },
        end: {
          line: 48,
          column: 3
        }
      },
      "2": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "3": {
        start: {
          line: 18,
          column: 24
        },
        end: {
          line: 18,
          column: 58
        }
      },
      "4": {
        start: {
          line: 19,
          column: 6
        },
        end: {
          line: 30,
          column: 7
        }
      },
      "5": {
        start: {
          line: 20,
          column: 21
        },
        end: {
          line: 20,
          column: 94
        }
      },
      "6": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "7": {
        start: {
          line: 22,
          column: 23
        },
        end: {
          line: 22,
          column: 40
        }
      },
      "8": {
        start: {
          line: 23,
          column: 10
        },
        end: {
          line: 23,
          column: 44
        }
      },
      "9": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 87
        }
      },
      "10": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 114
        }
      },
      "11": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "12": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 35,
          column: 44
        }
      },
      "13": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 36,
          column: 43
        }
      },
      "14": {
        start: {
          line: 38,
          column: 22
        },
        end: {
          line: 38,
          column: 84
        }
      },
      "15": {
        start: {
          line: 39,
          column: 6
        },
        end: {
          line: 39,
          column: 56
        }
      },
      "16": {
        start: {
          line: 42,
          column: 6
        },
        end: {
          line: 42,
          column: 34
        }
      },
      "17": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 68
        }
      },
      "18": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 32
        }
      },
      "19": {
        start: {
          line: 61,
          column: 21
        },
        end: {
          line: 82,
          column: 3
        }
      },
      "20": {
        start: {
          line: 84,
          column: 2
        },
        end: {
          line: 94,
          column: 4
        }
      },
      "21": {
        start: {
          line: 88,
          column: 52
        },
        end: {
          line: 88,
          column: 63
        }
      },
      "22": {
        start: {
          line: 98,
          column: 2
        },
        end: {
          line: 108,
          column: 3
        }
      },
      "23": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 107,
          column: 6
        }
      },
      "24": {
        start: {
          line: 110,
          column: 17
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "25": {
        start: {
          line: 110,
          column: 50
        },
        end: {
          line: 119,
          column: 3
        }
      },
      "26": {
        start: {
          line: 121,
          column: 23
        },
        end: {
          line: 121,
          column: 88
        }
      },
      "27": {
        start: {
          line: 121,
          column: 71
        },
        end: {
          line: 121,
          column: 82
        }
      },
      "28": {
        start: {
          line: 123,
          column: 2
        },
        end: {
          line: 131,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 35
          }
        },
        loc: {
          start: {
            line: 13,
            column: 46
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "getMockSeismicData",
        decl: {
          start: {
            line: 60,
            column: 9
          },
          end: {
            line: 60,
            column: 27
          }
        },
        loc: {
          start: {
            line: 60,
            column: 30
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 60
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 88,
            column: 47
          },
          end: {
            line: 88,
            column: 48
          }
        },
        loc: {
          start: {
            line: 88,
            column: 52
          },
          end: {
            line: 88,
            column: 63
          }
        },
        line: 88
      },
      "3": {
        name: "transformSeismicData",
        decl: {
          start: {
            line: 97,
            column: 9
          },
          end: {
            line: 97,
            column: 29
          }
        },
        loc: {
          start: {
            line: 97,
            column: 39
          },
          end: {
            line: 132,
            column: 1
          }
        },
        line: 97
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 110,
            column: 38
          },
          end: {
            line: 110,
            column: 39
          }
        },
        loc: {
          start: {
            line: 110,
            column: 50
          },
          end: {
            line: 119,
            column: 3
          }
        },
        line: 110
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 121,
            column: 66
          },
          end: {
            line: 121,
            column: 67
          }
        },
        loc: {
          start: {
            line: 121,
            column: 71
          },
          end: {
            line: 121,
            column: 82
          }
        },
        line: 121
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 24
          },
          end: {
            line: 18,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 24
          },
          end: {
            line: 18,
            column: 50
          }
        }, {
          start: {
            line: 18,
            column: 54
          },
          end: {
            line: 18,
            column: 58
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 28,
            column: 74
          },
          end: {
            line: 28,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 95
          },
          end: {
            line: 28,
            column: 106
          }
        }, {
          start: {
            line: 28,
            column: 109
          },
          end: {
            line: 28,
            column: 112
          }
        }],
        line: 28
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 74
          },
          end: {
            line: 28,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 74
          },
          end: {
            line: 28,
            column: 77
          }
        }, {
          start: {
            line: 28,
            column: 81
          },
          end: {
            line: 28,
            column: 92
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 38,
            column: 22
          },
          end: {
            line: 38,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 51
          },
          end: {
            line: 38,
            column: 66
          }
        }, {
          start: {
            line: 38,
            column: 69
          },
          end: {
            line: 38,
            column: 84
          }
        }],
        line: 38
      },
      "6": {
        loc: {
          start: {
            line: 38,
            column: 22
          },
          end: {
            line: 38,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 22
          },
          end: {
            line: 38,
            column: 29
          }
        }, {
          start: {
            line: 38,
            column: 33
          },
          end: {
            line: 38,
            column: 48
          }
        }],
        line: 38
      },
      "7": {
        loc: {
          start: {
            line: 98,
            column: 2
          },
          end: {
            line: 108,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 2
          },
          end: {
            line: 108,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "8": {
        loc: {
          start: {
            line: 98,
            column: 6
          },
          end: {
            line: 98,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 6
          },
          end: {
            line: 98,
            column: 14
          }
        }, {
          start: {
            line: 98,
            column: 18
          },
          end: {
            line: 98,
            column: 35
          }
        }],
        line: 98
      },
      "9": {
        loc: {
          start: {
            line: 121,
            column: 23
          },
          end: {
            line: 121,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 121,
            column: 43
          },
          end: {
            line: 121,
            column: 84
          }
        }, {
          start: {
            line: 121,
            column: 87
          },
          end: {
            line: 121,
            column: 88
          }
        }],
        line: 121
      },
      "10": {
        loc: {
          start: {
            line: 128,
            column: 19
          },
          end: {
            line: 128,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 19
          },
          end: {
            line: 128,
            column: 46
          }
        }, {
          start: {
            line: 128,
            column: 50
          },
          end: {
            line: 128,
            column: 74
          }
        }],
        line: 128
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "147a91166dca42d3794bb984b23fb363c37f2aac"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_47pjnniy8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_47pjnniy8();
/**
 * @fileoverview Service for fetching USGS seismic data, integrated with real API.
 * Fetches seismic activity data from USGS API for global monitoring.
 */
/**
 * Fetches the global seismic activity data.
 * Uses the SeismicIntegration for real-time data from USGS.
 * @returns {Promise<object>} A promise that resolves to the seismic activity data.
 */
cov_47pjnniy8().s[0]++;
const getSeismicActivity = async () => {
  /* istanbul ignore next */
  cov_47pjnniy8().f[0]++;
  cov_47pjnniy8().s[1]++;
  try {
    /* istanbul ignore next */
    cov_47pjnniy8().s[2]++;
    // 2) If running in native dev mode, try to use a local mock server but fail gracefully
    if (process.env.NATIVE_DEV_MODE === 'true') {
      /* istanbul ignore next */
      cov_47pjnniy8().b[0][0]++;
      const MOCK_PORT =
      /* istanbul ignore next */
      (cov_47pjnniy8().s[3]++,
      /* istanbul ignore next */
      (cov_47pjnniy8().b[1][0]++, process.env.USGS_MOCK_PORT) ||
      /* istanbul ignore next */
      (cov_47pjnniy8().b[1][1]++, 4011));
      /* istanbul ignore next */
      cov_47pjnniy8().s[4]++;
      try {
        const resp =
        /* istanbul ignore next */
        (cov_47pjnniy8().s[5]++, await fetch(`http://localhost:${MOCK_PORT}/usgs/significant_day.geojson`));
        /* istanbul ignore next */
        cov_47pjnniy8().s[6]++;
        if (resp.ok) {
          /* istanbul ignore next */
          cov_47pjnniy8().b[2][0]++;
          const body =
          /* istanbul ignore next */
          (cov_47pjnniy8().s[7]++, await resp.json());
          /* istanbul ignore next */
          cov_47pjnniy8().s[8]++;
          return transformSeismicData(body);
        } else
        /* istanbul ignore next */
        {
          cov_47pjnniy8().b[2][1]++;
        }
        cov_47pjnniy8().s[9]++;
        console.warn(`USGS mock returned non-ok status ${resp.status} - falling back`);
      } catch (err) {
        /* istanbul ignore next */
        cov_47pjnniy8().s[10]++;
        // Common in developer machines if the local mock isn't running (ECONNREFUSED)
        console.warn(`Local USGS mock fetch failed (port ${MOCK_PORT}):`,
        /* istanbul ignore next */
        (cov_47pjnniy8().b[4][0]++, err) &&
        /* istanbul ignore next */
        (cov_47pjnniy8().b[4][1]++, err.message) ?
        /* istanbul ignore next */
        (cov_47pjnniy8().b[3][0]++, err.message) :
        /* istanbul ignore next */
        (cov_47pjnniy8().b[3][1]++, err));
        // continue to attempt live fetch below
      }
    } else
    /* istanbul ignore next */
    {
      cov_47pjnniy8().b[0][1]++;
    }

    // 3) Try the live USGS integration (may fail in networks with no egress)
    cov_47pjnniy8().s[11]++;
    try {
      const rawData =
      /* istanbul ignore next */
      (cov_47pjnniy8().s[12]++, await
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _SeismicIntegration.
      /* istanbul ignore next */
      getSeismicData)());
      /* istanbul ignore next */
      cov_47pjnniy8().s[13]++;
      return transformSeismicData(rawData);
    } catch (liveErr) {
      const message =
      /* istanbul ignore next */
      (cov_47pjnniy8().s[14]++,
      /* istanbul ignore next */
      (cov_47pjnniy8().b[6][0]++, liveErr) &&
      /* istanbul ignore next */
      (cov_47pjnniy8().b[6][1]++, liveErr.message) ?
      /* istanbul ignore next */
      (cov_47pjnniy8().b[5][0]++, liveErr.message) :
      /* istanbul ignore next */
      (cov_47pjnniy8().b[5][1]++, String(liveErr)));
      /* istanbul ignore next */
      cov_47pjnniy8().s[15]++;
      console.error('Live USGS fetch failed:', message);

      // Fallback to high-fidelity mock data
      /* istanbul ignore next */
      cov_47pjnniy8().s[16]++;
      return getMockSeismicData();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_47pjnniy8().s[17]++;
    console.error('Unexpected error in getSeismicActivity:', error);
    // Fallback to high-fidelity mock data
    /* istanbul ignore next */
    cov_47pjnniy8().s[18]++;
    return getMockSeismicData();
  }
};

/**
 * Transforms raw USGS GeoJSON data into our standardized format.
 * @param {object} rawData - Raw GeoJSON data from USGS
 * @returns {object} Transformed seismic data
 */
/**
 * Returns high-fidelity mock seismic data when API is unavailable
 * @returns {object} Mock seismic data in the same format as real data
 */
/* istanbul ignore next */
exports.getSeismicActivity = getSeismicActivity;
function getMockSeismicData() {
  /* istanbul ignore next */
  cov_47pjnniy8().f[1]++;
  const mockEvents =
  /* istanbul ignore next */
  (cov_47pjnniy8().s[19]++, [{
    id: 'mock-1',
    magnitude: 4.5,
    place: 'Mock Seismic Region - Test Location',
    time: Date.now(),
    coordinates: [-74.2973, 4.5709, 10],
    tsunami: 0,
    significance: 50,
    url: 'https://example.com/mock-earthquake-1'
  }, {
    id: 'mock-2',
    magnitude: 3.2,
    place: 'Another Mock Location',
    time: Date.now() - 3600000,
    // 1 hour ago
    coordinates: [-75.0, -10.0, 15],
    tsunami: 0,
    significance: 25,
    url: 'https://example.com/mock-earthquake-2'
  }]);
  /* istanbul ignore next */
  cov_47pjnniy8().s[20]++;
  return {
    events: mockEvents,
    summary: {
      totalEvents: mockEvents.length,
      maxMagnitude: Math.max(...mockEvents.map(e => {
        /* istanbul ignore next */
        cov_47pjnniy8().f[2]++;
        cov_47pjnniy8().s[21]++;
        return e.magnitude;
      })),
      lastUpdated: new Date().toISOString(),
      source: 'High-Fidelity Mock Data - USGS API Unavailable'
    },
    isMock: true,
    note: 'Real-time seismic data simulation - API unavailable'
  };
}
function transformSeismicData(rawData) {
  /* istanbul ignore next */
  cov_47pjnniy8().f[3]++;
  cov_47pjnniy8().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_47pjnniy8().b[8][0]++, !rawData) ||
  /* istanbul ignore next */
  (cov_47pjnniy8().b[8][1]++, !rawData.features)) {
    /* istanbul ignore next */
    cov_47pjnniy8().b[7][0]++;
    cov_47pjnniy8().s[23]++;
    return {
      events: [],
      summary: {
        totalEvents: 0,
        maxMagnitude: 0,
        lastUpdated: new Date().toISOString(),
        source: "USGS API"
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_47pjnniy8().b[7][1]++;
  }
  const events =
  /* istanbul ignore next */
  (cov_47pjnniy8().s[24]++, rawData.features.map(feature => {
    /* istanbul ignore next */
    cov_47pjnniy8().f[4]++;
    cov_47pjnniy8().s[25]++;
    return {
      id: feature.id,
      magnitude: feature.properties.mag,
      place: feature.properties.place,
      time: feature.properties.time,
      coordinates: feature.geometry.coordinates,
      tsunami: feature.properties.tsunami,
      significance: feature.properties.sig,
      url: feature.properties.url
    };
  }));
  const maxMagnitude =
  /* istanbul ignore next */
  (cov_47pjnniy8().s[26]++, events.length > 0 ?
  /* istanbul ignore next */
  (cov_47pjnniy8().b[9][0]++, Math.max(...events.map(e => {
    /* istanbul ignore next */
    cov_47pjnniy8().f[5]++;
    cov_47pjnniy8().s[27]++;
    return e.magnitude;
  }))) :
  /* istanbul ignore next */
  (cov_47pjnniy8().b[9][1]++, 0));
  /* istanbul ignore next */
  cov_47pjnniy8().s[28]++;
  return {
    events,
    summary: {
      totalEvents: events.length,
      maxMagnitude,
      lastUpdated:
      /* istanbul ignore next */
      (cov_47pjnniy8().b[10][0]++, rawData.metadata?.generated) ||
      /* istanbul ignore next */
      (cov_47pjnniy8().b[10][1]++, new Date().toISOString()),
      source: "USGS Earthquake Hazards Program"
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,