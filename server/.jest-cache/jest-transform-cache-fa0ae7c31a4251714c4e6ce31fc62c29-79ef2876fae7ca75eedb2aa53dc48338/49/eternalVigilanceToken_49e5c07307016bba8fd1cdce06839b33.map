{"version":3,"names":["_express","data","_interopRequireDefault","require","_expressRateLimit","e","__esModule","default","router","express","Router","tokenLimiter","rateLimit","windowMs","max","message","error","post","req","res","sseTokenService","ttl","Number","body","token","expiresAt","generateToken","cookieOptions","httpOnly","secure","process","env","NODE_ENV","maxAge","Math","Date","now","sameSite","path","cookie","String","json","console","status","_default","exports"],"sources":["eternalVigilanceToken.js"],"sourcesContent":["import express from 'express';\nimport rateLimit from 'express-rate-limit';\n// require sseTokenService at request time so tests can mock it\n\nconst router = express.Router();\n\nconst tokenLimiter = rateLimit({ windowMs: 60 * 1000, max: 5, message: { error: 'Too many token requests, try later' } });\n\n// POST /token -> returns { token, expiresAt }\nrouter.post('/token', tokenLimiter, async (req, res) => {\n  try {\n    const sseTokenService = require('../sseTokenService.js').default || require('../sseTokenService.js');\n    const ttl = Number(req.body && req.body.ttl) || 60; // seconds\n    const { token, expiresAt } = await sseTokenService.generateToken(ttl);\n  // Ensure cookie contains the exact token string returned by the service\n  const cookieOptions = { httpOnly: false, secure: process.env.NODE_ENV === 'production', maxAge: Math.max(1000, expiresAt - Date.now()), sameSite: 'lax', path: '/' };\n  res.cookie('praevisio_sse_token', String(token), cookieOptions);\n    res.json({ token, expiresAt });\n  } catch (e) {\n    console.error('Error generating token:', e);\n    res.status(500).json({ error: 'Could not generate token' });\n  }\n});\n\nexport default router;\n"],"mappings":";;;;;;AAAA,SAAAA,SAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,QAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAG,kBAAA;EAAA,MAAAH,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAC,iBAAA,YAAAA,CAAA;IAAA,OAAAH,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAA2C,SAAAC,uBAAAG,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAC3C;;AAEA,MAAMG,MAAM,GAAGC,kBAAO,CAACC,MAAM,CAAC,CAAC;AAE/B,MAAMC,YAAY,GAAG,IAAAC,2BAAS,EAAC;EAAEC,QAAQ,EAAE,EAAE,GAAG,IAAI;EAAEC,GAAG,EAAE,CAAC;EAAEC,OAAO,EAAE;IAAEC,KAAK,EAAE;EAAqC;AAAE,CAAC,CAAC;;AAEzH;AACAR,MAAM,CAACS,IAAI,CAAC,QAAQ,EAAEN,YAAY,EAAE,OAAOO,GAAG,EAAEC,GAAG,KAAK;EACtD,IAAI;IACF,MAAMC,eAAe,GAAGjB,OAAO,CAAC,uBAAuB,CAAC,CAACI,OAAO,IAAIJ,OAAO,CAAC,uBAAuB,CAAC;IACpG,MAAMkB,GAAG,GAAGC,MAAM,CAACJ,GAAG,CAACK,IAAI,IAAIL,GAAG,CAACK,IAAI,CAACF,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;IACpD,MAAM;MAAEG,KAAK;MAAEC;IAAU,CAAC,GAAG,MAAML,eAAe,CAACM,aAAa,CAACL,GAAG,CAAC;IACvE;IACA,MAAMM,aAAa,GAAG;MAAEC,QAAQ,EAAE,KAAK;MAAEC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;MAAEC,MAAM,EAAEC,IAAI,CAACpB,GAAG,CAAC,IAAI,EAAEW,SAAS,GAAGU,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;MAAEC,QAAQ,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAI,CAAC;IACpKnB,GAAG,CAACoB,MAAM,CAAC,qBAAqB,EAAEC,MAAM,CAAChB,KAAK,CAAC,EAAEG,aAAa,CAAC;IAC7DR,GAAG,CAACsB,IAAI,CAAC;MAAEjB,KAAK;MAAEC;IAAU,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOpB,CAAC,EAAE;IACVqC,OAAO,CAAC1B,KAAK,CAAC,yBAAyB,EAAEX,CAAC,CAAC;IAC3Cc,GAAG,CAACwB,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC;MAAEzB,KAAK,EAAE;IAA2B,CAAC,CAAC;EAC7D;AACF,CAAC,CAAC;AAAC,IAAA4B,QAAA,GAAAC,OAAA,CAAAtC,OAAA,GAEYC,MAAM","ignoreList":[]}