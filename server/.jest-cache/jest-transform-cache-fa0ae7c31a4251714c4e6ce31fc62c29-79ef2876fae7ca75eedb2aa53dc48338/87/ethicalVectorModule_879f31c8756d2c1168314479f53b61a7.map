{"version":3,"names":["calculateHumanImpact","riskIndices","famineRisk","supplyChainRisk","famineImpact","value","supplyChainImpact","humanImpact","Math","min","calculateEnvironmentalSustainability","geophysicalRisk","geoImpact","calculateSocialEquity","famineCountries","countries","length","famineEquity","affectedRegions","supplyEquity","socialEquity","calculatePrivacyRisk","communityResilienceRisk","climateExtremesRisk","communityDataExposure","climateDataExposure","privacyRisk","calculateAlgorithmicJustice","famineConcentration","geoConcentration","algorithmicJustice","calculateEthicalVector","environmentalSustainability","overallScore","vector","components","assessment","timestamp","Date","toISOString"],"sources":["ethicalVectorModule.js"],"sourcesContent":["/**\n * @fileoverview Ethical Vector Module for Praevisio AI.\n * This module implements the Quantum Ethics framework for evaluating predictions\n * against human impact, environmental sustainability, social equity, privacy, and algorithmic justice.\n */\n\n/**\n * Calculates the human impact component of the ethical vector.\n * Higher values indicate greater potential harm to human populations.\n * @param {object} riskIndices - The current risk indices from prediction engine.\n * @returns {number} Human impact score (0-1).\n */\nfunction calculateHumanImpact(riskIndices) {\n  const { famineRisk, supplyChainRisk } = riskIndices;\n\n  // Human impact primarily from famine and supply chain disruptions\n  const famineImpact = (famineRisk.value || 0) / 100; // Normalize to 0-1\n  const supplyChainImpact = (supplyChainRisk.value || 0) / 100;\n\n  // Weighted combination: famine has higher human impact weight\n  const humanImpact = (famineImpact * 0.7) + (supplyChainImpact * 0.3);\n\n  return Math.min(1, humanImpact);\n}\n\n/**\n * Calculates the environmental sustainability component of the ethical vector.\n * Higher values indicate greater environmental risk.\n * @param {object} riskIndices - The current risk indices from prediction engine.\n * @returns {number} Environmental sustainability score (0-1).\n */\nfunction calculateEnvironmentalSustainability(riskIndices) {\n  const { geophysicalRisk } = riskIndices;\n\n  // Environmental impact primarily from geophysical events\n  const geoImpact = (geophysicalRisk.value || 0) / 100;\n\n  // Additional factors could include climate data when available\n  // For now, focus on seismic activity as proxy for environmental disruption\n\n  return Math.min(1, geoImpact);\n}\n\n/**\n * Calculates the social equity component of the ethical vector.\n * Higher values indicate greater inequity in risk distribution.\n * @param {object} riskIndices - The current risk indices from prediction engine.\n * @returns {number} Social equity score (0-1).\n */\nfunction calculateSocialEquity(riskIndices) {\n  const { famineRisk, supplyChainRisk } = riskIndices;\n\n  // Social equity considers how risks are distributed across populations\n  // Higher famine risk in multiple countries indicates inequity\n  const famineCountries = famineRisk.countries ? famineRisk.countries.length : 0;\n  const famineEquity = Math.min(1, famineCountries / 50); // Normalize by global regions\n\n  // Supply chain disruptions affecting multiple regions\n  const affectedRegions = supplyChainRisk.affectedRegions ? supplyChainRisk.affectedRegions.length : 0;\n  const supplyEquity = Math.min(1, affectedRegions / 20);\n\n  // Combined equity score\n  const socialEquity = (famineEquity * 0.6) + (supplyEquity * 0.4);\n\n  return Math.min(1, socialEquity);\n}\n\n/**\n * Calculates the privacy risk component of the ethical vector.\n * Higher values indicate greater potential privacy violations in data handling.\n * @param {object} riskIndices - The current risk indices from prediction engine.\n * @returns {number} Privacy risk score (0-1).\n */\nfunction calculatePrivacyRisk(riskIndices) {\n  const { communityResilienceRisk, climateExtremesRisk } = riskIndices;\n\n  // Privacy risk increases with detailed community data exposure\n  const communityDataExposure = (communityResilienceRisk.value || 0) / 100;\n  const climateDataExposure = (climateExtremesRisk.value || 0) / 100;\n\n  // Weighted combination: community data has higher privacy sensitivity\n  const privacyRisk = (communityDataExposure * 0.6) + (climateDataExposure * 0.4);\n\n  return Math.min(1, privacyRisk);\n}\n\n/**\n * Calculates the algorithmic justice component of the ethical vector.\n * Higher values indicate greater potential for algorithmic bias or unfair outcomes.\n * @param {object} riskIndices - The current risk indices from prediction engine.\n * @returns {number} Algorithmic justice score (0-1).\n */\nfunction calculateAlgorithmicJustice(riskIndices) {\n  const { famineRisk, geophysicalRisk } = riskIndices;\n\n  // Algorithmic justice considers potential biases in risk predictions\n  // Higher concentration of risk in specific regions may indicate bias\n  const famineConcentration = famineRisk.countries ? Math.min(1, famineRisk.countries.length / 10) : 0;\n  const geoConcentration = (geophysicalRisk.value || 0) / 100;\n\n  // Combined justice score: concentration indicates potential bias\n  const algorithmicJustice = (famineConcentration * 0.5) + (geoConcentration * 0.5);\n\n  return Math.min(1, algorithmicJustice);\n}\n\n/**\n * Calculates the complete ethical vector for the current risk assessment.\n * The vector represents [humanImpact, environmentalSustainability, socialEquity, privacyRisk, algorithmicJustice]\n * where each component is normalized 0-1.\n * @param {object} riskIndices - The current risk indices from prediction engine.\n * @returns {object} Ethical vector with components and overall assessment.\n */\nfunction calculateEthicalVector(riskIndices) {\n  const humanImpact = calculateHumanImpact(riskIndices);\n  const environmentalSustainability = calculateEnvironmentalSustainability(riskIndices);\n  const socialEquity = calculateSocialEquity(riskIndices);\n  const privacyRisk = calculatePrivacyRisk(riskIndices);\n  const algorithmicJustice = calculateAlgorithmicJustice(riskIndices);\n\n  // Overall ethical score: weighted average\n  // Human impact has highest weight, followed by environmental and social concerns\n  // Privacy and algorithmic justice are emerging ethical dimensions\n  const overallScore = (humanImpact * 0.35) + (environmentalSustainability * 0.25) +\n                      (socialEquity * 0.2) + (privacyRisk * 0.1) + (algorithmicJustice * 0.1);\n\n  return {\n    vector: [humanImpact, environmentalSustainability, socialEquity, privacyRisk, algorithmicJustice],\n    components: {\n      humanImpact,\n      environmentalSustainability,\n      socialEquity,\n      privacyRisk,\n      algorithmicJustice,\n    },\n    overallScore,\n    assessment: overallScore > 0.7 ? 'High Ethical Concern' :\n                overallScore > 0.4 ? 'Medium Ethical Concern' : 'Low Ethical Concern',\n    timestamp: new Date().toISOString(),\n  };\n}\n\nexport {\n  calculateHumanImpact,\n  calculateEnvironmentalSustainability,\n  calculateSocialEquity,\n  calculatePrivacyRisk,\n  calculateAlgorithmicJustice,\n  calculateEthicalVector,\n};"],"mappings":"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","ignoreList":[]}