{"version":3,"names":["_agents","_interopRequireDefault","require","e","__esModule","default","cov_k6eth6nt","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","CybersecurityService","constructor","agent","MetatronAgent","getCybersecurityRiskIndex","sectors","cyberData","run","analysisType","riskAssessment","console","warn","totalRisk","factors","threatLevel","vulnerabilityIndex","incidentFrequency","riskIndex","Math","min","max","error","getCybersecurityAnalysis","timestamp","Date","toISOString","analysis","riskLevel","_assessRiskLevel","keyFactors","recommendations","_generateRecommendations","source","message","push","_default","exports"],"sources":["cybersecurityService.js"],"sourcesContent":["import MetatronAgent from '../agents.js';\n\n/**\n * Service for calculating global cybersecurity risk index\n * Analyzes cyber threats and vulnerabilities to determine risk levels\n */\nclass CybersecurityService {\n  constructor() {\n    this.agent = new MetatronAgent('CybersecurityAgent');\n  }\n\n  /**\n   * Calculates cybersecurity risk index based on global cyber threat indicators\n   * @param {Array<string>} sectors - Array of sectors to analyze\n   * @returns {Promise<number>} Risk index between 0-100 (0 = low risk, 100 = high risk)\n   */\n  async getCybersecurityRiskIndex(sectors = ['global']) {\n    try {\n      const cyberData = await this.agent.run({\n        sectors,\n        analysisType: 'cybersecurity'\n      });\n\n      if (!cyberData || !cyberData.riskAssessment) {\n        console.warn('No cybersecurity data available, returning default risk index');\n        return 35; // Default moderate risk\n      }\n\n      // Calculate risk based on various cyber indicators\n      let totalRisk = 0;\n      let factors = 0;\n\n      if (cyberData.riskAssessment.threatLevel) {\n        totalRisk += cyberData.riskAssessment.threatLevel * 0.4;\n        factors++;\n      }\n\n      if (cyberData.riskAssessment.vulnerabilityIndex) {\n        totalRisk += cyberData.riskAssessment.vulnerabilityIndex * 0.3;\n        factors++;\n      }\n\n      if (cyberData.riskAssessment.incidentFrequency) {\n        totalRisk += cyberData.riskAssessment.incidentFrequency * 0.3;\n        factors++;\n      }\n\n      const riskIndex = factors > 0 ? totalRisk / factors : 35;\n\n      // Cap at 100\n      return Math.min(Math.max(riskIndex, 0), 100);\n\n    } catch (error) {\n      console.error('Error calculating cybersecurity risk index:', error);\n      return 35; // Return moderate risk as fallback\n    }\n  }\n\n  /**\n   * Gets detailed cybersecurity risk analysis\n   * @param {Array<string>} sectors - Array of sectors to analyze\n   * @returns {Promise<object>} Detailed cybersecurity analysis\n   */\n  async getCybersecurityAnalysis(sectors = ['global']) {\n    try {\n      const riskIndex = await this.getCybersecurityRiskIndex(sectors);\n\n      return {\n        timestamp: new Date().toISOString(),\n        riskIndex: riskIndex,\n        sectors: sectors,\n        analysis: {\n          riskLevel: this._assessRiskLevel(riskIndex),\n          keyFactors: ['Threat level', 'Vulnerability index', 'Incident frequency'],\n          recommendations: this._generateRecommendations(riskIndex)\n        },\n        source: 'CybersecurityService'\n      };\n    } catch (error) {\n      console.error('Error in cybersecurity analysis:', error);\n      return {\n        timestamp: new Date().toISOString(),\n        riskIndex: 35,\n        sectors: sectors,\n        analysis: {\n          riskLevel: 'Moderate',\n          keyFactors: ['Threat level', 'Vulnerability index', 'Incident frequency'],\n          recommendations: ['Implement multi-factor authentication', 'Regular security audits', 'Employee training programs']\n        },\n        source: 'CybersecurityService - Error Fallback',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Assesses risk level based on cybersecurity risk index\n   * @param {number} riskIndex - The calculated risk index\n   * @returns {string} Risk level description\n   */\n  _assessRiskLevel(riskIndex) {\n    if (riskIndex >= 80) return 'Critical';\n    if (riskIndex >= 60) return 'High';\n    if (riskIndex >= 30) return 'Moderate';\n    if (riskIndex >= 15) return 'Low';\n    return 'Minimal';\n  }\n\n  /**\n   * Generates recommendations based on risk level\n   * @param {number} riskIndex - The calculated risk index\n   * @returns {Array<string>} Array of recommendations\n   */\n  _generateRecommendations(riskIndex) {\n    const recommendations = [];\n\n    if (riskIndex >= 80) {\n      recommendations.push('Implement emergency cybersecurity protocols');\n      recommendations.push('Isolate critical systems');\n      recommendations.push('Activate incident response teams');\n      recommendations.push('Notify authorities and stakeholders');\n    } else if (riskIndex >= 60) {\n      recommendations.push('Enhance monitoring and detection systems');\n      recommendations.push('Conduct immediate security assessments');\n      recommendations.push('Update security patches urgently');\n      recommendations.push('Strengthen access controls');\n    } else if (riskIndex >= 30) {\n      recommendations.push('Regular security training for employees');\n      recommendations.push('Implement advanced threat detection');\n      recommendations.push('Regular vulnerability assessments');\n      recommendations.push('Backup critical data');\n    } else if (riskIndex >= 15) {\n      recommendations.push('Basic security hygiene practices');\n      recommendations.push('Regular software updates');\n      recommendations.push('Use strong authentication');\n    } else {\n      recommendations.push('Maintain basic security measures');\n      recommendations.push('Monitor emerging threats');\n    }\n\n    return recommendations;\n  }\n}\n\nexport default CybersecurityService;"],"mappings":";;;;;;;AAAA;AAAA;AAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AAAyC,oCAAAD,uBAAAE,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAAA,SAAAG,aAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAA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","ignoreList":[]}