{"version":3,"names":["_agents","_interopRequireDefault","require","e","__esModule","default","EconomicInstabilityService","constructor","agent","MetatronAgent","getEconomicInstabilityRiskIndex","regions","getEconomicInstabilityIndex","economicData","run","analysisType","riskAssessment","console","warn","totalRisk","factors","inflationRate","Math","min","unemploymentRate","debtToGDPRatio","currencyVolatility","riskIndex","max","error","getEconomicInstabilityAnalysis","timestamp","Date","toISOString","analysis","riskLevel","_assessRiskLevel","keyFactors","recommendations","_generateRecommendations","source","message","push","_default","exports"],"sources":["economicInstabilityService.js"],"sourcesContent":["import MetatronAgent from '../agents.js';\n\n/**\n * Service for calculating global economic instability risk index\n * Analyzes economic indicators to determine financial risk levels\n */\nclass EconomicInstabilityService {\n  constructor() {\n    this.agent = new MetatronAgent('EconomicInstabilityAgent');\n  }\n\n  /**\n   * Gets economic instability risk index (alias for getEconomicInstabilityIndex)\n   * @param {Array<string>} regions - Array of regions to analyze\n   * @returns {Promise<number>} Risk index between 0-100 (0 = low risk, 100 = high risk)\n   */\n  async getEconomicInstabilityRiskIndex(regions = ['global']) {\n    return this.getEconomicInstabilityIndex(regions);\n  }\n\n  /**\n   * Calculates economic instability risk index based on global economic indicators\n   * @param {Array<string>} regions - Array of regions to analyze\n   * @returns {Promise<number>} Risk index between 0-100 (0 = low risk, 100 = high risk)\n   */\n  async getEconomicInstabilityIndex(regions = ['global']) {\n    try {\n      const economicData = await this.agent.run({\n        regions,\n        analysisType: 'economic-instability'\n      });\n\n      if (!economicData || !economicData.riskAssessment) {\n        console.warn('No economic instability data available, returning default risk index');\n        return 40; // Default moderate-high risk\n      }\n\n      // Calculate risk based on various economic indicators\n      let totalRisk = 0;\n      let factors = 0;\n\n      if (economicData.riskAssessment.inflationRate) {\n        // High inflation = higher risk\n        totalRisk += Math.min(economicData.riskAssessment.inflationRate * 2, 100) * 0.25;\n        factors++;\n      }\n\n      if (economicData.riskAssessment.unemploymentRate) {\n        totalRisk += economicData.riskAssessment.unemploymentRate * 0.3;\n        factors++;\n      }\n\n      if (economicData.riskAssessment.debtToGDPRatio) {\n        // High debt = higher risk\n        totalRisk += Math.min(economicData.riskAssessment.debtToGDPRatio / 2, 100) * 0.25;\n        factors++;\n      }\n\n      if (economicData.riskAssessment.currencyVolatility) {\n        totalRisk += economicData.riskAssessment.currencyVolatility * 0.2;\n        factors++;\n      }\n\n      const riskIndex = factors > 0 ? totalRisk / factors : 40;\n\n      // Cap at 100\n      return Math.min(Math.max(riskIndex, 0), 100);\n\n    } catch (error) {\n      console.error('Error calculating economic instability index:', error);\n      return 40; // Return moderate-high risk as fallback\n    }\n  }\n\n  /**\n   * Gets detailed economic instability risk analysis\n   * @param {Array<string>} regions - Array of regions to analyze\n   * @returns {Promise<object>} Detailed economic instability analysis\n   */\n  async getEconomicInstabilityAnalysis(regions = ['global']) {\n    try {\n      const riskIndex = await this.getEconomicInstabilityIndex(regions);\n\n      return {\n        timestamp: new Date().toISOString(),\n        riskIndex: riskIndex,\n        regions: regions,\n        analysis: {\n          riskLevel: this._assessRiskLevel(riskIndex),\n          keyFactors: ['Inflation rate', 'Unemployment rate', 'Debt-to-GDP ratio', 'Currency volatility'],\n          recommendations: this._generateRecommendations(riskIndex)\n        },\n        source: 'EconomicInstabilityService'\n      };\n    } catch (error) {\n      console.error('Error in economic instability analysis:', error);\n      return {\n        timestamp: new Date().toISOString(),\n        riskIndex: 40,\n        regions: regions,\n        analysis: {\n          riskLevel: 'Moderate',\n          keyFactors: ['Inflation rate', 'Unemployment rate', 'Debt-to-GDP ratio', 'Currency volatility'],\n          recommendations: ['Diversify investments', 'Monitor inflation trends', 'Strengthen fiscal policies']\n        },\n        source: 'EconomicInstabilityService - Error Fallback',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Assesses risk level based on economic instability risk index\n   * @param {number} riskIndex - The calculated risk index\n   * @returns {string} Risk level description\n   */\n  _assessRiskLevel(riskIndex) {\n    if (riskIndex >= 75) return 'Critical';\n    if (riskIndex >= 50) return 'High';\n    if (riskIndex >= 25) return 'Moderate';\n    return 'Low';\n  }\n\n  /**\n   * Generates recommendations based on risk level\n   * @param {number} riskIndex - The calculated risk index\n   * @returns {Array<string>} Array of recommendations\n   */\n  _generateRecommendations(riskIndex) {\n    const recommendations = [];\n\n    if (riskIndex >= 75) {\n      recommendations.push('Implement emergency economic measures');\n      recommendations.push('Activate international financial aid');\n      recommendations.push('Restructure national debt');\n      recommendations.push('Implement capital controls if necessary');\n    } else if (riskIndex >= 50) {\n      recommendations.push('Strengthen monetary policy');\n      recommendations.push('Implement fiscal stimulus');\n      recommendations.push('Monitor currency stability');\n      recommendations.push('Diversify trade partners');\n    } else if (riskIndex >= 25) {\n      recommendations.push('Monitor economic indicators closely');\n      recommendations.push('Build foreign exchange reserves');\n      recommendations.push('Implement structural reforms');\n      recommendations.push('Strengthen financial regulations');\n    } else {\n      recommendations.push('Maintain stable economic policies');\n      recommendations.push('Monitor global economic trends');\n      recommendations.push('Build economic resilience');\n    }\n\n    return recommendations;\n  }\n}\n\nexport default EconomicInstabilityService;"],"mappings":"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","ignoreList":[]}