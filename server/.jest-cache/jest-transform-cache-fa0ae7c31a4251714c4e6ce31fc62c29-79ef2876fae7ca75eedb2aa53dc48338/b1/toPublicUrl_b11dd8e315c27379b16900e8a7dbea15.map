{"version":3,"names":["toPublicUrl_exports","__export","toPublicUrl","module","exports","__toCommonJS","url","location","toString","urlInstance","URL","origin","pathname"],"sources":["../../../../src/core/utils/request/toPublicUrl.ts"],"sourcesContent":["/**\n * Returns a relative URL if the given request URL is relative\n * to the current origin. Otherwise returns an absolute URL.\n */\nexport function toPublicUrl(url: string | URL): string {\n  if (typeof location === 'undefined') {\n    return url.toString()\n  }\n\n  const urlInstance = url instanceof URL ? url : new URL(url)\n\n  return urlInstance.origin === location.origin\n    ? urlInstance.pathname\n    : urlInstance.origin + urlInstance.pathname\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,mBAAA;AAAAC,QAAA,CAAAD,mBAAA;EAAAE,WAAA,EAAAA,CAAA,KAAAA;AAAA;AAAAC,MAAA,CAAAC,OAAA,GAAAC,YAAA,CAAAL,mBAAA;AAIO,SAASE,YAAYI,GAAA,EAA2B;EACrD,IAAI,OAAOC,QAAA,KAAa,aAAa;IACnC,OAAOD,GAAA,CAAIE,QAAA,CAAS;EACtB;EAEA,MAAMC,WAAA,GAAcH,GAAA,YAAeI,GAAA,GAAMJ,GAAA,GAAM,IAAII,GAAA,CAAIJ,GAAG;EAE1D,OAAOG,WAAA,CAAYE,MAAA,KAAWJ,QAAA,CAASI,MAAA,GACnCF,WAAA,CAAYG,QAAA,GACZH,WAAA,CAAYE,MAAA,GAASF,WAAA,CAAYG,QAAA;AACvC","ignoreList":[]}