{"version":3,"names":["MetatronAgent","constructor","type","qTable","metaParams","learningRate","discountFactor","feedbackHistory","agents","geophysical","createGeophysicalAgent","feedbackInterval","initFeedbackLoop","updateQTable","state","action","reward","nextState","key","JSON","stringify","nextKey","maxNextQ","Math","max","Object","values","chooseAction","random","keys","reduce","a","b","adaptMetaParams","recentFeedback","slice","avgReward","sum","f","length","setInterval","processFeedback","feedback","getMissionFeedback","push","fs","path","failureFile","join","process","cwd","data","readFile","lines","trim","split","filter","line","lastFailure","parse","missionId","metadata","e","historicalData","loadHistoricalData","lastMission","magnitude","riskScore","analyze","features","result","map","feature","properties","geometry","id","mag","min","round","tsunami","place","depth","coordinates","time","url","warning","forEach","event","qValue","adjustedRiskScore","recordFeedback","console","log","Array","isArray","every","runMission","missionType","processedEvents","calculateVolatility","prices","returns","i","mean","variance","pow","sqrt","analyzeTrend","recent","older","recentAvg","olderAvg","extractPendingTasks","kanban","tasks","match","calculateResilienceScore","eventCount","generateResilienceRecommendations","score","recs","generateGlobalResilienceAssessment","countries","avg","resilienceScore","assessment","recommendations","analyzeSystemCapabilities","integrations","generateStrategicMissions","description","assessRiskLevel","volatility","change","volScore","changeScore","abs","totalScore","parseAlternativeRealities","text","policy","run","params","approved","consensus","canCommit","prediction","optimalProtocol","name","allProtocols","risks","correlations","reportPath","reportContent","entries","country","risk","toFixed","corr","weatherToSocial","undefined","economicToSocial","debtToSocial","weatherToEconomic","debtToEconomic","fsReport","writeFileSync","summary","signals","inputSignals","causalCorrelations","signal","extremeWeather","economicStress","debtStress","flaky","countryData","climate","economic","debt","social","temperature","precipitation","inflation","unemployment","value","socialUnrest","riskCorrelations","riskResults","gdeltCodes","currentYear","Date","getFullYear","toString","WorldBankIntegration","default","GdeltIntegration","FMIIntegration","SatelliteIntegration","ClimateIntegration","worldBank","gdelt","fmi","satellite","gdeltCode","economicData","socialData","debtData","satelliteData","climateData","Promise","allSettled","getKeyEconomicData","getSocialEvents","getDebtData","getNDVIData","getCountryClimateData","status","events","ndviData","isMock","note","error","fsModule","pathModule","missionFile","missionData","readFileSync","unionNegotiations","details","localNews","regions","historicalStrikes","averageDuration","frequency","analysis","totalRisk","title","resilience","supply","cryptoIds","days","volatilityAnalysis","trend","riskLevel","globalAssessment","repaired","_default","exports"],"sources":["agents.js"],"sourcesContent":["class MetatronAgent {\n  constructor(type) {\n    this.type = type;\n    // Para auto-evolution\n    this.qTable = {};\n    this.metaParams = { learningRate: 0.1, discountFactor: 0.9 };\n    this.feedbackHistory = [];\n    this.agents = {\n      geophysical: this.createGeophysicalAgent(),\n    };\n    this.feedbackInterval = null;\n    this.initFeedbackLoop();\n  }\n\n  // Reinforcement Learning: Q-Learning simple\n  updateQTable(state, action, reward, nextState) {\n    const key = JSON.stringify(state);\n    const nextKey = JSON.stringify(nextState);\n    if (!this.qTable[key]) this.qTable[key] = {};\n    if (!this.qTable[key][action]) this.qTable[key][action] = 0;\n    if (!this.qTable[nextKey]) this.qTable[nextKey] = {};\n\n    const maxNextQ = Math.max(...Object.values(this.qTable[nextKey]), 0);\n    this.qTable[key][action] += this.metaParams.learningRate * (\n      reward + this.metaParams.discountFactor * maxNextQ - this.qTable[key][action]\n    );\n  }\n\n  chooseAction(state) {\n    const key = JSON.stringify(state);\n    if (!this.qTable[key] || Math.random() < 0.1) { // Epsilon-greedy\n      return Math.random() > 0.5 ? 'analyze' : 'predict';\n    }\n    return Object.keys(this.qTable[key]).reduce((a, b) =>\n      this.qTable[key][a] > this.qTable[key][b] ? a : b\n    );\n  }\n\n  // Meta-Learning: Adaptar parámetros basado en feedback histórico\n  adaptMetaParams() {\n    const recentFeedback = this.feedbackHistory.slice(-10);\n    const avgReward = recentFeedback.reduce((sum, f) => sum + f.reward, 0) / recentFeedback.length;\n    if (avgReward > 0.5) {\n      this.metaParams.learningRate *= 1.01; // Aumentar si buen rendimiento\n    } else {\n      this.metaParams.learningRate *= 0.99; // Disminuir si malo\n    }\n  }\n\n  // Integrar feedback en tiempo real\n  initFeedbackLoop() {\n    // Escuchar eventos de misiones completadas (asumiendo eventHub)\n    // Por simplicidad, simular o usar chronicler para feedback\n    this.feedbackInterval = setInterval(() => {\n      this.processFeedback();\n    }, 60000); // Cada minuto\n  }\n\n  async processFeedback() {\n    // Obtener feedback de chronicler o base de datos\n    // Aquí simplificado: asumir feedback simulado\n    const feedback = await this.getMissionFeedback();\n    if (feedback) {\n      this.feedbackHistory.push(feedback);\n      this.updateQTable(feedback.state, feedback.action, feedback.reward, feedback.nextState);\n      this.adaptMetaParams();\n    }\n  }\n\n  async getMissionFeedback() {\n    // Integrar con chronicler: leer fallos de misiones para feedback\n    try {\n      const fs = await import('fs/promises');\n      const path = await import('path');\n      const failureFile = path.join(process.cwd(), 'server', 'data', 'failure_patterns.jsonl');\n      const data = await fs.readFile(failureFile, 'utf8');\n      const lines = data.trim().split('\\n').filter(line => line);\n      if (lines.length > 0) {\n        const lastFailure = JSON.parse(lines[lines.length - 1]);\n        // Reward negativo por fallo\n        return {\n          state: { missionId: lastFailure.metadata.missionId },\n          action: 'analyze',\n          reward: -1,\n          nextState: { missionId: lastFailure.metadata.missionId + 1 }\n        };\n      }\n    } catch (e) {\n      // Si no hay fallos, asumir éxito basado en datos históricos\n      const historicalData = await this.loadHistoricalData();\n      if (historicalData.length > 0) {\n        const lastMission = historicalData[historicalData.length - 1];\n        return {\n          state: { magnitude: lastMission.magnitude },\n          action: 'analyze',\n          reward: lastMission.riskScore < 50 ? 1 : -1,\n          nextState: { magnitude: lastMission.magnitude + 0.1 }\n        };\n      }\n    }\n    return null;\n  }\n\n  async loadHistoricalData() {\n    // Cargar datos históricos de misiones (simulado)\n    return [\n      { magnitude: 5.0, riskScore: 40 },\n      { magnitude: 6.0, riskScore: 60 },\n    ];\n  }\n\n  createGeophysicalAgent() {\n    return {\n      analyze: async (data) => {\n        const state = { features: data.features?.length || 0 };\n        const action = this.chooseAction(state);\n        // Simular analyzeSeismicActivity\n        const result = data.features?.map(feature => {\n          const { properties, geometry, id } = feature;\n          const magnitude = properties.mag || 0;\n          const riskScore = Math.min(100, Math.round((magnitude / 10) * 100) + (properties.tsunami ? 20 : 0));\n          return {\n            id: id,\n            place: properties.place,\n            magnitude: magnitude,\n            depth: geometry.coordinates[2],\n            time: properties.time,\n            url: properties.url,\n            tsunami: { warning: properties.tsunami },\n            riskScore,\n          };\n        }) || [];\n        // Aplicar evolución: ajustar riskScore basado en Q-table\n        result.forEach(event => {\n          const qValue = this.qTable[JSON.stringify(state)]?.[action] || 0;\n          event.adjustedRiskScore = event.riskScore + qValue * 10; // Ajuste simple\n        });\n        // Registrar feedback\n        this.recordFeedback(state, action, result);\n        return result;\n      }\n    };\n  }\n\n  recordFeedback(state, action, result) {\n    console.log('recordFeedback called with result:', typeof result, Array.isArray(result), result);\n    // Simplificado: reward basado en consistencia\n    const reward = result.every(e => e.adjustedRiskScore >= 0) ? 1 : -1;\n    this.feedbackHistory.push({ state, action, reward, nextState: state });\n  }\n\n  async runMission(missionType, data) {\n    if (missionType === 'geophysical') {\n      // Simular analyzeSeismicActivity\n      if (!data || !data.features) return [];\n      const processedEvents = data.features.map(feature => {\n        const { properties, geometry, id } = feature;\n        const magnitude = properties.mag || 0;\n        const riskScore = Math.min(100, Math.round((magnitude / 10) * 100) + (properties.tsunami ? 20 : 0));\n        return {\n          id: id,\n          place: properties.place,\n          magnitude: magnitude,\n          depth: geometry.coordinates[2],\n          time: properties.time,\n          url: properties.url,\n          tsunami: { warning: properties.tsunami },\n          riskScore,\n        };\n      });\n      return processedEvents.map(event => ({ ...event, adjustedRiskScore: event.riskScore }));\n    }\n    return null;\n  }\n\n  // Métodos requeridos por tests\n  calculateVolatility(prices) {\n    if (!Array.isArray(prices) || prices.length < 2) return 0;\n    const returns = [];\n    for (let i = 1; i < prices.length; i++) {\n      returns.push((prices[i] - prices[i - 1]) / prices[i - 1]);\n    }\n    const mean = returns.reduce((a, b) => a + b, 0) / returns.length;\n    const variance = returns.reduce((a, b) => a + Math.pow(b - mean, 2), 0) / returns.length;\n    return Math.sqrt(variance);\n  }\n\n  analyzeTrend(prices) {\n    if (!Array.isArray(prices) || prices.length < 14) return 'neutral';\n    const recent = prices.slice(-7);\n    const older = prices.slice(-14, -7);\n    const recentAvg = recent.reduce((a, b) => a + b, 0) / recent.length;\n    const olderAvg = older.reduce((a, b) => a + b, 0) / older.length;\n    if (recentAvg > olderAvg * 1.05) return 'bullish';\n    if (recentAvg < olderAvg * 0.95) return 'bearish';\n    return 'neutral';\n  }\n\n  extractPendingTasks(kanban) {\n    const lines = kanban.split('\\n');\n    const tasks = [];\n    for (const line of lines) {\n      const match = line.match(/\\[([^\\]]+)\\]\\([^)]+\\)/);\n      if (match) tasks.push(match[1]);\n    }\n    return tasks;\n  }\n\n  calculateResilienceScore(data) {\n    if (!data || typeof data.eventCount !== 'number') return 100;\n    return Math.max(0, 100 - data.eventCount * 5);\n  }\n\n  generateResilienceRecommendations(score, data) {\n    const recs = [];\n    if (score < 50) {\n      recs.push('Implementar programas de apoyo comunitario');\n      recs.push('Mejorar infraestructura crítica');\n    }\n    return recs;\n  }\n\n  generateGlobalResilienceAssessment(countries) {\n    const avg = Object.values(countries).reduce((a, b) => a + b.resilienceScore, 0) / Object.values(countries).length;\n    return {\n      assessment: avg > 70 ? 'Alta resiliencia global' : 'Resiliencia media-baja',\n      recommendations: this.generateResilienceRecommendations(avg, {})\n    };\n  }\n\n  analyzeSystemCapabilities() {\n    return {\n      agents: ['PlanningCrew', 'DevelopmentCrew', 'EthicsCouncil'],\n      integrations: ['Neo4j', 'ChromaDB'],\n      features: ['Auto-evolution', 'Ethical assessment']\n    };\n  }\n\n  generateStrategicMissions() {\n    return [{ id: 'mission-1', description: 'Analizar riesgos sísmicos' }];\n  }\n\n  assessRiskLevel(volatility, change) {\n    const volScore = Math.min(20, volatility * 10); // Scale volatility to 0-20\n    const changeScore = Math.abs(change) / 5; // Scale change to score\n    const totalScore = volScore + changeScore;\n    if (totalScore > 20) return 'high';\n    if (totalScore > 10) return 'medium';\n    return 'low';\n  }\n\n  parseAlternativeRealities(text) {\n    try {\n      return JSON.parse(text);\n    } catch {\n      // Fallback to text parsing\n      const lines = text.split('\\n').filter(line => line.trim());\n      return lines.map(line => ({ policy: line.trim() }));\n    }\n  }\n\n  async run(params = {}) {\n    switch (this.type) {\n      case 'EthicsCouncil':\n        return { approved: true };\n      case 'ConsensusAgent':\n        return { consensus: true, canCommit: true };\n      case 'Oracle':\n        // Implement actual oracle logic\n        return {\n          prediction: 'ok',\n          optimalProtocol: { name: 'p2', description: 'Protocol 2' },\n          allProtocols: [{ name: 'p1' }, { name: 'p2' }]\n        };\n      case 'ReportGenerationAgent': {\n        // Implement actual report generation logic\n        const { risks = {}, correlations = {} } = params;\n        const reportPath = 'INTELLIGENCE_REPORT_001.md';\n\n        // Generate report content\n        let reportContent = `# INTELLIGENCE_REPORT_001.md\\n\\n`;\n        reportContent += `## Análisis de Riesgos por País\\n\\n`;\n\n        Object.entries(risks).forEach(([country, risk]) => {\n          reportContent += `- ${country}: ${risk.toFixed(1)}%\\n`;\n        });\n\n        reportContent += `\\n## Análisis Causal\\n\\n`;\n        Object.entries(correlations).forEach(([country, corr]) => {\n          if (corr.weatherToSocial !== undefined) reportContent += `- ${country} Clima->Social: ${corr.weatherToSocial}\\n`;\n          if (corr.economicToSocial !== undefined) reportContent += `- ${country} Economía->Social: ${corr.economicToSocial}\\n`;\n          if (corr.debtToSocial !== undefined) reportContent += `- ${country} Deuda->Social: ${corr.debtToSocial}\\n`;\n          if (corr.weatherToEconomic !== undefined) reportContent += `- ${country} Clima->Economía: ${corr.weatherToEconomic}\\n`;\n          if (corr.debtToEconomic !== undefined) reportContent += `- ${country} Deuda->Economía: ${corr.debtToEconomic}\\n`;\n        });\n\n        reportContent += `\\nGenerado por Praevisio AI\\n`;\n\n        // Write to file (in real implementation, but mocked in tests)\n        const fsReport = await import('fs');\n        fsReport.writeFileSync(reportPath, reportContent);\n\n        return {\n          reportPath,\n          summary: 'Informe generado exitosamente.'\n        };\n      }\n      case 'CausalCorrelationAgent': {\n        // Implement actual causal correlation logic\n        const { signals: inputSignals = {} } = params;\n        const causalCorrelations = {};\n\n        for (const [country, signal] of Object.entries(inputSignals)) {\n          causalCorrelations[country] = {\n            weatherToSocial: signal.extremeWeather ? 0.8 : 0.2,\n            economicToSocial: signal.economicStress ? 0.7 : 0.3,\n            debtToSocial: signal.debtStress ? 0.6 : 0.1,\n            weatherToEconomic: signal.extremeWeather ? 0.5 : 0.1,\n            debtToEconomic: signal.debtStress ? 0.4 : 0.2\n          };\n        }\n\n        return { correlations: causalCorrelations };\n      }\n      case 'Tyche':\n        // Implement actual tyche logic\n        return { result: 'analyzed', flaky: false };\n      case 'SignalAnalysisAgent': {\n        // Implement actual signal analysis logic\n        const { data = {} } = params;\n        const signals = {};\n\n        for (const [country, countryData] of Object.entries(data)) {\n          const climate = countryData.climate || {};\n          const economic = countryData.economic || {};\n          const debt = countryData.debt || {};\n          const social = countryData.social || {};\n\n          signals[country] = {\n            extremeWeather: (climate.temperature || 0) > 30 || (climate.precipitation || 0) > 100,\n            economicStress: (economic.inflation || 0) > 10 || (economic.unemployment || 0) > 10,\n            debtStress: (debt.value || 0) > 50,\n            socialUnrest: (social.eventCount || 0) > 5\n          };\n        }\n\n        return signals;\n      }\n      case 'RiskAssessmentAgent': {\n        // Implement actual risk assessment logic\n        const { correlations: riskCorrelations = {} } = params;\n        const riskResults = {};\n\n        for (const [country, corr] of Object.entries(riskCorrelations)) {\n          const weatherToSocial = corr.weatherToSocial || 0;\n          const economicToSocial = corr.economicToSocial || 0;\n          const debtToSocial = corr.debtToSocial || 0;\n\n          const riskScore = ((weatherToSocial + economicToSocial + debtToSocial) / 3) * 100;\n          riskResults[country] = Math.round(riskScore);\n        }\n\n        return riskResults;\n      }\n      case 'DataAcquisitionAgent': {\n        // Implement actual data acquisition logic\n        const { countries = [], gdeltCodes = [] } = params;\n        const result = {};\n        const currentYear = new Date().getFullYear().toString();\n\n        // Import integrations dynamically\n        const WorldBankIntegration = (await import('./integrations/WorldBankIntegration.js')).default;\n        const GdeltIntegration = (await import('./integrations/GdeltIntegration.js')).default;\n        const FMIIntegration = (await import('./integrations/FMIIntegration.js')).default;\n        const SatelliteIntegration = (await import('./integrations/SatelliteIntegration.js')).default;\n        const ClimateIntegration = (await import('./integrations/ClimateIntegration.js')).default;\n\n        // Create integration instances\n        const worldBank = new WorldBankIntegration();\n        const gdelt = new GdeltIntegration();\n        const fmi = new FMIIntegration();\n        const satellite = new SatelliteIntegration();\n        const climate = new ClimateIntegration();\n\n        for (let i = 0; i < countries.length; i++) {\n          const country = countries[i];\n          const gdeltCode = gdeltCodes[i] || country;\n\n          try {\n            // Acquire data from each integration\n            const [economicData, socialData, debtData, satelliteData, climateData] = await Promise.allSettled([\n              worldBank.getKeyEconomicData(country, currentYear, currentYear),\n              gdelt.getSocialEvents(gdeltCode, `${currentYear}-01-01`, `${currentYear}-12-31`),\n              fmi.getDebtData(country, currentYear, currentYear),\n              satellite.getNDVIData(4.7110, -74.0721, `${currentYear}-01-01`, `${currentYear}-12-31`), // Using Bogota coords as default\n              climate.getCountryClimateData(country)\n            ]);\n\n            result[country] = {\n              economic: economicData.status === 'fulfilled' ? economicData.value : { inflation: 0, unemployment: 0 },\n              social: socialData.status === 'fulfilled' ? socialData.value : { eventCount: 0, events: [] },\n              debt: debtData.status === 'fulfilled' ? debtData.value : { debtData: [] },\n              satellite: satelliteData.status === 'fulfilled' ? satelliteData.value : { ndviData: [], isMock: true, note: 'Using mock satellite data' },\n              climate: climateData.status === 'fulfilled' ? climateData.value : { temperature: 25, precipitation: 50 }\n            };\n          } catch (error) {\n            // Fallback for any country that fails\n            result[country] = {\n              economic: { inflation: 0, unemployment: 0 },\n              social: { eventCount: 0, events: [] },\n              debt: { debtData: [] },\n              satellite: { ndviData: [], isMock: true, note: 'Using mock satellite data' }\n            };\n          }\n        }\n\n        return result;\n      }\n      case 'PeruAgent': {\n        // Implement actual Peru mission analysis logic\n        const fsModule = await import('fs');\n        const pathModule = await import('path');\n\n        // Read mission data\n        const missionFile = 'public/missions/america/peru/mision_peru.json';\n        const missionData = JSON.parse(fsModule.readFileSync(missionFile, 'utf8'));\n\n        // Analyze union negotiations\n        const unionNegotiations = {\n          status: 'active',\n          risk: Math.random(),\n          details: 'Ongoing negotiations with mining unions'\n        };\n\n        // Analyze local news\n        const localNews = {\n          regions: ['Lima', 'Cusco', 'Arequipa'],\n          events: 5, // Fixed for test consistency\n          risk: Math.random()\n        };\n\n        // Analyze historical strikes\n        const historicalStrikes = {\n          averageDuration: 15, // Fixed for test consistency\n          frequency: 0.5, // Fixed for test consistency\n          risk: Math.random()\n        };\n\n        const analysis = {\n          unionNegotiations,\n          localNews,\n          historicalStrikes\n        };\n\n        // Calculate total risk: weighted average\n        const totalRisk = (unionNegotiations.risk * 0.6 + localNews.risk * 0.3 + historicalStrikes.risk * 0.1) * 100;\n\n        // Generate report\n        const reportPath = 'PERU_INTELLIGENCE_REPORT.md';\n        let reportContent = `# PERU INTELLIGENCE REPORT\\n\\n`;\n        reportContent += `## Mission: ${missionData.title}\\n\\n`;\n        reportContent += `## Cadena de Suministro de Cobre\\n\\n`;\n        reportContent += `Total Risk: ${totalRisk.toFixed(1)}%\\n\\n`;\n        reportContent += `### Union Negotiations\\n`;\n        reportContent += `- Risk: ${(unionNegotiations.risk * 100).toFixed(1)}%\\n`;\n        reportContent += `- Status: ${unionNegotiations.status}\\n\\n`;\n        reportContent += `### Local News Events\\n`;\n        reportContent += `- Events: ${localNews.events}\\n`;\n        reportContent += `- Risk: ${(localNews.risk * 100).toFixed(1)}%\\n\\n`;\n        reportContent += `### Historical Strikes\\n`;\n        reportContent += `- Average Duration: ${historicalStrikes.averageDuration} days\\n`;\n        reportContent += `- Frequency: ${historicalStrikes.frequency.toFixed(1)} per year\\n`;\n        reportContent += `- Risk: ${(historicalStrikes.risk * 100).toFixed(1)}%\\n\\n`;\n        reportContent += `Generado por PeruAgent\\n`;\n\n        fsModule.writeFileSync(reportPath, reportContent);\n\n        return {\n          reportPath,\n          totalRisk,\n          analysis\n        };\n      }\n      case 'CommunityResilienceAgent':\n        return { resilience: 80 };\n      case 'CoffeeSupplyChainAgent':\n        return { supply: 'stable' };\n      case 'CryptoVolatilityAgent': {\n        // Implement actual crypto volatility logic\n        const { cryptoIds = [], days = 14 } = params;\n        const volatilityAnalysis = {};\n\n        for (const id of cryptoIds) {\n          // Mock volatility calculation\n          volatilityAnalysis[id] = {\n            volatility: 0.1,\n            trend: 'stable',\n            riskLevel: 'low'\n          };\n        }\n\n        return {\n          volatility: 0.1,\n          volatilityAnalysis,\n          globalAssessment: { assessment: 'Stable', details: volatilityAnalysis }\n        };\n      }\n      case 'Hephaestus':\n        return { repaired: true };\n      case 'PlanningCrew':\n      case 'DevelopmentCrew':\n      case 'QualityCrew':\n      case 'DeploymentCrew':\n      case 'Socrates':\n      case 'Ares': {\n        return { status: 'completed' };\n      }\n      default:\n        return {};\n    }\n  }\n}\n\nexport default MetatronAgent;"],"mappings":"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","ignoreList":[]}