{"version":3,"names":["_express","_interopRequireDefault","require","_cache","e","__esModule","default","router","express","Router","makeId","prefix","Math","random","toString","slice","computePrediction","country","parameters","infectionRate","protestIndex","economicIndex","temperature","score","risk","confidence","max","min","abs","factors","total","push","name","weight","toFixed","value","predictionId","Number","generatedAt","Date","toISOString","round","post","req","res","body","status","json","error","cacheKey","JSON","stringify","cachedResult","cache","get","result","set","_default","exports"],"sources":["predict.js"],"sourcesContent":["import express from 'express';\nimport cache from '../cache.js';\n\nconst router = express.Router();\n\nfunction makeId(prefix = 'id') {\n  return `${prefix}_${Math.random().toString(36).slice(2,8)}`;\n}\n\nfunction computePrediction(country, parameters) {\n  // simple weighted logic for demo purposes\n  const { infectionRate = 0, protestIndex = 0, economicIndex = 0, temperature = 0 } = parameters;\n  const score = (infectionRate * 0.5) + (protestIndex * 0.3) + (economicIndex * 0.15) + (temperature * 0.05);\n  let risk = 'low';\n  if (score >= 70) risk = 'high';\n  else if (score >= 30) risk = 'medium';\n\n  const confidence = Math.max(0.5, Math.min(0.95, 1 - Math.abs(50 - score) / 100));\n\n  const factors = [];\n  const total = infectionRate + protestIndex + economicIndex + temperature || 1;\n  if (infectionRate) factors.push({ name: 'Infection rate', weight: +(infectionRate/total).toFixed(2), value: infectionRate });\n  if (protestIndex) factors.push({ name: 'Protest index', weight: +(protestIndex/total).toFixed(2), value: protestIndex });\n  if (economicIndex) factors.push({ name: 'Economic index', weight: +(economicIndex/total).toFixed(2), value: economicIndex });\n  if (temperature) factors.push({ name: 'Temperature', weight: +(temperature/total).toFixed(2), value: temperature });\n\n  return {\n    predictionId: makeId('pred'),\n    country,\n    risk,\n    confidence: Number(confidence.toFixed(2)),\n    factors,\n    generatedAt: new Date().toISOString(),\n    score: Math.round(score)\n  };\n}\n\nrouter.post('/', (req, res) => {\n  const { country, parameters } = req.body || {};\n  if (!country || !parameters) {\n    return res.status(400).json({ error: 'country and parameters are required' });\n  }\n\n  // Create cache key based on prediction parameters\n  const cacheKey = `prediction:${country}:${JSON.stringify(parameters)}`;\n\n  // Check cache first (TTL: 10 minutes for predictions)\n  const cachedResult = cache.get(cacheKey);\n  if (cachedResult) {\n    return res.status(200).json(cachedResult);\n  }\n\n  const result = computePrediction(country, parameters);\n\n  // Cache result for 10 minutes\n  cache.set(cacheKey, result, 600000);\n\n  return res.status(200).json(result);\n});\n\nexport default router;\n"],"mappings":"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","ignoreList":[]}