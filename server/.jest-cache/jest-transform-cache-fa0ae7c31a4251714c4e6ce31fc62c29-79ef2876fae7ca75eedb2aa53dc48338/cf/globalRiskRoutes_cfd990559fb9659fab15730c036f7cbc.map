{"version":3,"names":["_express","_interopRequireDefault","require","_path","worldBankService","_interopRequireWildcard","climateServiceModule","communityResilienceServiceModule","predictionEngineModule","generativeAIServiceModule","e","__esModule","default","cov_vd3frw3y4","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","t","WeakMap","r","n","o","i","__proto__","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","__dirname","resolve","process","cwd","router","express","Router","safeLoad","modulePath","fullPath","targetBasename","basename","cacheKeys","keys","cache","matchKey","find","k","endsWith","join","cached","cacheErr","candidates","push","svcBasename","cand","modById","resolved","mod","reqErr","specifier","Promise","then","importErr","console","error","Error","getServiceInstance","err","req","res","foodService","data","getFoodSecurityIndex","status","json","success","source","message","cryptoIds","query","cryptoList","split","map","id","trim","serviceData","CryptoModule","cryptoSvc","getCryptoMarketAnalysis","loadErr","normalized","value","volatilityIndex","unit","topic","timestamp","Date","toISOString","sourceName","climateService","getClimateExtremesIndex","countries","days","scenario","countryList","Array","isArray","c","filter","Boolean","communityService","getCommunityResilienceIndex","Number","scenarioMap","high","low","extreme","resilienceAnalysis","globalResilienceAssessment","focusAreas","timeHorizon","detailLevel","language","predictionService","riskData","getRiskIndices","genService","options","a","narrative","generatePredictiveNarrative","_default","exports"],"sources":["globalRiskRoutes.js"],"sourcesContent":["import express from 'express';\nimport path from 'path';\n// Static imports for core services so Jest's jest.mock(...) calls\n// (used in tests) are applied reliably. Keep safeLoad as a fallback\n// for any less-common or ESM-only modules.\nimport * as worldBankService from '../services/worldBankService.js';\nimport * as climateServiceModule from '../services/climateService.js';\nimport * as communityResilienceServiceModule from '../services/communityResilienceService.js';\nimport * as predictionEngineModule from '../services/predictionEngine.js';\nimport * as generativeAIServiceModule from '../services/generativeAIService.js';\n\n// Resolve a stable __dirname for this module in both ESM and CommonJS\n// test environments. Some test runners (Jest + babel-jest) may not\n// support `import.meta.url` during transformation, which causes\n// \"Cannot use 'import.meta' outside a module\" errors. To avoid that\n// and keep module resolution deterministic, use the repository's\n// `src/routes` folder as base when import.meta is unavailable.\nconst __dirname = path.resolve(process.cwd(), 'src', 'routes');\nconst router = express.Router();\n\n// Helper to dynamically load a module.\n// Prefer CommonJS `require` when available so Jest's module mocks (which\n// commonly patch `require`) are applied. Fallback to dynamic import for\n// true ESM modules or when require isn't available.\nasync function safeLoad(modulePath) {\n  const fullPath = path.resolve(__dirname, modulePath);\n  // Try require first for better compatibility with Jest mocks\n  try {\n    // eslint-disable-next-line global-require, import/no-dynamic-require\n    if (typeof require === 'function') {\n      // Try to find a cached module that matches the service filename.\n      // Jest may register mocks under absolute paths; searching the\n      // require.cache for a filename suffix like '/src/services/cryptoService.js'\n      // often finds the mocked module so tests' mocks are honored.\n      try {\n        const targetBasename = path.basename(modulePath);\n        const cacheKeys = Object.keys(require.cache || {});\n        const matchKey = cacheKeys.find(k => k.endsWith(path.join('src', 'services', targetBasename)));\n        if (matchKey) {\n          const cached = require(matchKey);\n          return cached && cached.__esModule ? cached.default || cached : cached;\n        }\n      } catch (cacheErr) {\n        // ignore and continue to normal require flow\n      }\n      // Try requiring by several candidate ids so Jest's mocks (which may\n      // be registered under different module ids) are discovered.\n      const candidates = [];\n      // original relative id as used in safeLoad call\n      candidates.push(modulePath);\n      // absolute filesystem path to module\n      candidates.push(fullPath);\n      // project-based services path (common in tests that use ../../src/...)\n      try {\n        const svcBasename = path.basename(modulePath);\n        candidates.push(path.resolve(process.cwd(), 'src', 'services', svcBasename));\n      } catch (e) {\n        // ignore\n      }\n\n      for (const cand of candidates) {\n        try {\n          const modById = require(cand);\n          return modById && modById.__esModule ? modById.default || modById : modById;\n        } catch (e) {\n          // try next candidate\n        }\n      }\n\n      // As a last attempt, resolve the full absolute path and require that\n      const resolved = require.resolve(fullPath);\n      const mod = require(resolved);\n      return mod && mod.__esModule ? mod.default || mod : mod;\n    }\n  } catch (reqErr) {\n    // Not fatal: fall through to dynamic import\n    // console.debug(`safeLoad require failed for ${modulePath}:`, reqErr.message);\n  }\n\n  // Dynamic import fallback (for ESM-only modules)\n  try {\n    const mod = await import(fullPath);\n    return mod && mod.default ? mod.default : mod;\n  } catch (importErr) {\n    console.error(`Error loading module ${modulePath} via import():`, importErr);\n    throw new Error(`Failed to load module: ${modulePath}`);\n  }\n}\n\n// Helper: given a loaded module, return a usable service object.\nfunction getServiceInstance(mod) {\n  if (!mod) return null;\n  // If module is a constructor (class or function), instantiate it.\n  if (typeof mod === 'function') {\n    try {\n      return new mod();\n    } catch (e) {\n      // If it's a factory function that returns an object when called\n      try {\n        return mod();\n      } catch (err) {\n        return mod;\n      }\n    }\n  }\n  // If module is an object with a default class, instantiate default\n  if (mod && typeof mod === 'object' && mod.default && typeof mod.default === 'function') {\n    try {\n      return new mod.default();\n    } catch (e) {\n      try {\n        return mod.default();\n      } catch (err) {\n        return mod.default || mod;\n      }\n    }\n  }\n  // Otherwise return the module as-is (it may be an object of functions)\n  return mod;\n}\n\n// GET /api/global-risk/food-security \nrouter.get('/food-security', async (req, res) => {\n  try {\n    // Use the statically imported module (tests mock this module)\n    // Use statically imported worldBankService (tests mock this module)\n    const foodService = getServiceInstance(worldBankService) || worldBankService;\n    const data = typeof foodService.getFoodSecurityIndex === 'function'\n      ? await foodService.getFoodSecurityIndex()\n      : await (foodService.getFoodSecurityIndex || foodService);\n    \n    res.status(200).json({\n      success: true,\n      source: 'Praevisio-Aion-Simulated-WorldBank',\n      data\n    });\n  } catch (error) {\n    console.error('Error retrieving food security data:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Internal Server Error: Could not retrieve food security data.'\n    });\n  }\n});\n\n// GET /api/global-risk/crypto-volatility\nrouter.get('/crypto-volatility', async (req, res) => {\n  try {\n    const { cryptoIds = 'bitcoin,ethereum' } = req.query;\n    const cryptoList = cryptoIds.split(',').map(id => id.trim());\n    // Lazy-load the crypto service so Jest mocks registered via require/import\n    // are honored regardless of module load order. safeLoad tries require first\n    // (so jest.mock can intercept) and falls back to dynamic import.\n    let serviceData;\n    try {\n      const CryptoModule = await safeLoad('../services/cryptoService.js');\n      const cryptoSvc = getServiceInstance(CryptoModule) || CryptoModule;\n\n      if (cryptoSvc && typeof cryptoSvc.getCryptoMarketAnalysis === 'function') {\n        serviceData = await cryptoSvc.getCryptoMarketAnalysis(cryptoList);\n      } else if (CryptoModule && typeof CryptoModule.getCryptoMarketAnalysis === 'function') {\n        serviceData = await CryptoModule.getCryptoMarketAnalysis(cryptoList);\n      } else if (typeof cryptoSvc === 'function') {\n        // module exported a convenience function\n        serviceData = await cryptoSvc(cryptoList);\n      } else {\n        serviceData = cryptoSvc;\n      }\n    } catch (loadErr) {\n      console.error('Error loading crypto service:', loadErr);\n      throw loadErr;\n    }\n\n    // Normalize/augment returned service data for backward compatibility\n    const normalized = (serviceData && typeof serviceData === 'object') ? { ...serviceData } : { value: serviceData };\n    if (normalized.volatilityIndex !== undefined && normalized.value === undefined) {\n      normalized.value = normalized.volatilityIndex;\n    }\n    normalized.unit = normalized.unit || '%';\n    normalized.topic = normalized.topic || 'crypto-volatility';\n    normalized.timestamp = normalized.timestamp || new Date().toISOString();\n\n    // If the underlying service (or mock) provided a 'source', honor it.\n    const sourceName = (normalized && normalized.source) ? normalized.source : 'Praevisio-Aion-CryptoService';\n\n    res.status(200).json({\n      success: true,\n      status: 'OK',\n      source: sourceName,\n      timestamp: new Date().toISOString(),\n      data: normalized\n    });\n  } catch (error) {\n    console.error('Error retrieving crypto volatility data:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Internal Server Error: Could not retrieve crypto volatility data.'\n    });\n  }\n});\n\n// GET /api/global-risk/climate-extremes\nrouter.get('/climate-extremes', async (req, res) => {\n  try {\n    const climateService = getServiceInstance(climateServiceModule) || climateServiceModule;\n    const serviceData = typeof climateService.getClimateExtremesIndex === 'function'\n      ? await climateService.getClimateExtremesIndex()\n      : await (climateService.getClimateExtremesIndex || climateService);\n\n    res.status(200).json({\n      success: true,\n      source: 'Praevisio-Aion-NASA-POWER-Integration',\n      timestamp: new Date().toISOString(),\n      data: serviceData\n    });\n  } catch (error) {\n    console.error('Error retrieving climate extremes data:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Internal Server Error: Could not retrieve climate extremes data.'\n    });\n  }\n});\n\n// GET /api/global-risk/community-resilience\nrouter.get('/community-resilience', async (req, res) => {\n  try {\n    const { countries = 'COL,PER,ARG', days = 30, scenario = 'default' } = req.query;\n    const countryList = Array.isArray(countries) ? countries : countries.split(',').map(c => c.trim()).filter(Boolean);\n\n    const communityService = getServiceInstance(communityResilienceServiceModule) || communityResilienceServiceModule;\n    const serviceData = typeof communityService.getCommunityResilienceIndex === 'function'\n      ? await communityService.getCommunityResilienceIndex(countryList, Number(days))\n      : await (communityService.getCommunityResilienceIndex || communityService)(countryList, Number(days));\n\n    // Dynamic value calculation based on scenario\n    const scenarioMap = {\n      high: 95,\n      low: 15,\n      extreme: 65,\n      default: 45\n    };\n    const value = scenarioMap[scenario] || 45;\n\n    const data = {\n      timestamp: serviceData?.timestamp || new Date().toISOString(),\n      topic: 'community-resilience',\n      unit: '%',\n      value,\n      resilienceAnalysis: serviceData?.resilienceAnalysis || {},\n      globalResilienceAssessment: serviceData?.globalResilienceAssessment || {}\n    };\n\n    res.status(200).json({\n      success: true,\n      status: 'OK',\n      source: 'Praevisio-Aion-CommunityResilienceAgent',\n      timestamp: new Date().toISOString(),\n      data\n    });\n  } catch (error) {\n    console.error('Error retrieving community resilience data:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Internal Server Error: Could not retrieve community resilience data.'\n    });\n  }\n});\n\n/**\n * @route GET /api/generative-analysis\n * @description Provides generative AI analysis of risk data with narrative insights.\n * @access Public\n */\nrouter.get('/generative-analysis', async (req, res) => {\n  try {\n    const { focusAreas = ['climate', 'economic', 'social'], timeHorizon = '6months', detailLevel = 'comprehensive', language = 'es' } = req.query;\n\n    const predictionService = getServiceInstance(predictionEngineModule) || predictionEngineModule;\n    const riskData = typeof predictionService.getRiskIndices === 'function'\n      ? await predictionService.getRiskIndices()\n      : await (predictionService.getRiskIndices || predictionService);\n\n    const genService = getServiceInstance(generativeAIServiceModule) || generativeAIServiceModule;\n\n    const options = {\n      focusAreas: Array.isArray(focusAreas) ? focusAreas : focusAreas.split(',').map(a => a.trim()),\n      timeHorizon,\n      detailLevel,\n      language\n    };\n\n    const narrative = typeof genService.generatePredictiveNarrative === 'function'\n      ? await genService.generatePredictiveNarrative(riskData, options)\n      : await (genService.generatePredictiveNarrative || genService)(riskData, options);\n\n    res.status(200).json({\n      success: true,\n      status: 'OK',\n      source: 'Praevisio-Aion-GenerativeAI',\n      timestamp: new Date().toISOString(),\n      data: narrative\n    });\n  } catch (error) {\n    console.error('Error generating AI analysis:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Internal Server Error: Could not generate AI analysis.'\n    });\n  }\n});\n\nexport default router;\n"],"mappings":"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","ignoreList":[]}