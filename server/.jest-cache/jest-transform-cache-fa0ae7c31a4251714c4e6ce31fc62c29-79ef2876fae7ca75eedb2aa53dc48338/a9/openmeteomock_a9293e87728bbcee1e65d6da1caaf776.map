{"version":3,"names":["_axios","_interopRequireDefault","require","e","__esModule","default","cov_eutb5c86i","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","_coverageSchema","coverage","actualCoverage","fetchRecentTemperature","lat","lon","native","process","env","NATIVE_DEV_MODE","openMeteoMockPort","OPEN_METEO_MOCK_PORT","base","TEST_MODE","url","response","axios","get","timeout","data","current","current_weather","hourly","humidityArr","relative_humidity_2m","precipitationArr","precipitation_probability","temperature","humidity","Array","isArray","length","weather_code","weathercode","wind_speed","windspeed","error","console","message","Math","random","floor","isMock","source","note","fetchClimatePrediction","days","daily","mockDaily","i","push","time","Date","now","toISOString","slice","temperature_2m_max","temperature_2m_min","precipitation_sum"],"sources":["open-meteo.mock.js"],"sourcesContent":[" \nimport axios from 'axios';\n\n// Wrapper for Open-Meteo calls that respects TEST_MODE and returns a normalized shape\nexport async function fetchRecentTemperature(lat, lon) {\n\n  try {\n    const native = process.env.NATIVE_DEV_MODE === 'true';\n    const openMeteoMockPort = process.env.OPEN_METEO_MOCK_PORT || 4030;\n    const base = native\n      ? `http://localhost:${openMeteoMockPort}/v1/forecast`\n      : (process.env.TEST_MODE === 'true' ? 'http://mock-api-server:3001/open-meteo' : 'https://api.open-meteo.com/v1/forecast');\n    const url = `${base}?latitude=${lat}&longitude=${lon}&current_weather=true&hourly=temperature_2m,relative_humidity_2m,precipitation_probability&timezone=auto`;\n    const response = await axios.get(url, { timeout: 10000 });\n    const data = response.data || {};\n\n    // Defensive access: prefer current_weather and hourly arrays when present\n    const current = data.current_weather || {};\n    const hourly = data.hourly || {};\n    const humidityArr = hourly.relative_humidity_2m || [];\n    const precipitationArr = hourly.precipitation_probability || [];\n\n    return {\n      temperature: current.temperature ?? null,\n      humidity: Array.isArray(humidityArr) && humidityArr.length ? humidityArr[0] : null,\n      precipitation_probability: Array.isArray(precipitationArr) && precipitationArr.length ? precipitationArr[0] : null,\n      weather_code: current.weathercode ?? null,\n      wind_speed: current.windspeed ?? null\n    };\n  } catch (error) {\n    console.error('Error fetching from Open Meteo:', error && error.message ? error.message : error);\n    // Return high-fidelity mock data instead of error\n    return {\n      temperature: 24.5 + Math.random() * 5, // Random temp between 24.5-29.5\n      humidity: 60 + Math.random() * 20, // Random humidity between 60-80\n      precipitation_probability: Math.random() * 30, // Random precipitation 0-30%\n      weather_code: Math.floor(Math.random() * 4), // Random weather code 0-3\n      wind_speed: 2 + Math.random() * 4, // Random wind speed 2-6\n      isMock: true,\n      source: 'high-fidelity-mock',\n      note: 'Open-Meteo API unavailable - using realistic mock data'\n    };\n  }\n}\n\nexport async function fetchClimatePrediction(lat, lon, days = 7) {\n\n  try {\n    const native = process.env.NATIVE_DEV_MODE === 'true';\n    const openMeteoMockPort = process.env.OPEN_METEO_MOCK_PORT || 4030;\n    const base = native\n      ? `http://localhost:${openMeteoMockPort}/v1/forecast`\n      : (process.env.TEST_MODE === 'true' ? 'http://mock-api-server:3001/open-meteo' : 'https://api.open-meteo.com/v1/forecast');\n    const url = `${base}?latitude=${lat}&longitude=${lon}&daily=temperature_2m_max,temperature_2m_min,precipitation_sum,weathercode&timezone=auto&forecast_days=${days}`;\n    const response = await axios.get(url, { timeout: 15000 });\n    return (response.data && response.data.daily) ? response.data.daily : null;\n  } catch (error) {\n    console.error('Error fetching climate prediction:', error && error.message ? error.message : error);\n    // Return high-fidelity mock data instead of error\n    const mockDaily = [];\n    for (let i = 0; i < days; i++) {\n      mockDaily.push({\n        time: new Date(Date.now() + i * 24 * 3600 * 1000).toISOString().slice(0, 10),\n        temperature_2m_max: 25 + Math.random() * 5, // 25-30°C\n        temperature_2m_min: 15 + Math.random() * 5, // 15-20°C\n        precipitation_sum: Math.random() * 10, // 0-10mm\n        weathercode: Math.floor(Math.random() * 4) // 0-3\n      });\n    }\n    return {\n      ...mockDaily,\n      isMock: true,\n      source: 'high-fidelity-mock',\n      note: 'Open-Meteo API unavailable - using realistic climate prediction mock data'\n    };\n  }\n}\n"],"mappings":";;;;;;;;AACA;AAAA;AAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AAA0B,oCAAAD,uBAAAE,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAAA,SAAAG,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA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","ignoreList":[]}