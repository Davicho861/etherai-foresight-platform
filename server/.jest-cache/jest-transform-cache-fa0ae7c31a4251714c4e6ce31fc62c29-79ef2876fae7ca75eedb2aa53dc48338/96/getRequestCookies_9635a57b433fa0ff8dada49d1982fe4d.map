{"version":3,"names":["getRequestCookies_exports","__export","getAllRequestCookies","module","exports","__toCommonJS","import_cookie","require","import_cookieStore","parseCookies","input","parsedCookies","parse","cookies","cookieName","getAllDocumentCookies","document","cookie","getDocumentCookies","request","location","credentials","requestUrl","URL","url","origin","requestCookieHeader","headers","get","cookiesFromHeaders","cookiesFromDocument","name","append","serialize","cookiesFromStore","cookieStore","getCookies","storedCookiesObject","Object","fromEntries","map","key","value","toString"],"sources":["../../../../src/core/utils/request/getRequestCookies.ts"],"sourcesContent":["import {\n  parse as parseCookie,\n  serialize as serializeCookie,\n} from '../../../shims/cookie'\nimport { cookieStore } from '../cookieStore'\n\nfunction parseCookies(input: string): Record<string, string> {\n  const parsedCookies = parseCookie(input)\n  const cookies: Record<string, string> = {}\n\n  for (const cookieName in parsedCookies) {\n    if (typeof parsedCookies[cookieName] !== 'undefined') {\n      cookies[cookieName] = parsedCookies[cookieName]\n    }\n  }\n\n  return cookies\n}\n\nfunction getAllDocumentCookies() {\n  return parseCookies(document.cookie)\n}\n\nfunction getDocumentCookies(request: Request): Record<string, string> {\n  if (typeof document === 'undefined' || typeof location === 'undefined') {\n    return {}\n  }\n\n  switch (request.credentials) {\n    case 'same-origin': {\n      const requestUrl = new URL(request.url)\n\n      // Return document cookies only when requested a resource\n      // from the same origin as the current document.\n      return location.origin === requestUrl.origin\n        ? getAllDocumentCookies()\n        : {}\n    }\n\n    case 'include': {\n      // Return all document cookies.\n      return getAllDocumentCookies()\n    }\n\n    default: {\n      return {}\n    }\n  }\n}\n\nexport function getAllRequestCookies(request: Request): Record<string, string> {\n  /**\n   * @note While the \"cookie\" header is a forbidden header field\n   * in the browser, you can read it in Node.js. We need to respect\n   * it for mocking in Node.js.\n   */\n  const requestCookieHeader = request.headers.get('cookie')\n  const cookiesFromHeaders = requestCookieHeader\n    ? parseCookies(requestCookieHeader)\n    : {}\n\n  const cookiesFromDocument = getDocumentCookies(request)\n\n  // Forward the document cookies to the request headers.\n  for (const name in cookiesFromDocument) {\n    request.headers.append(\n      'cookie',\n      serializeCookie(name, cookiesFromDocument[name]),\n    )\n  }\n\n  const cookiesFromStore = cookieStore.getCookies(request.url)\n  const storedCookiesObject = Object.fromEntries(\n    cookiesFromStore.map((cookie) => [cookie.key, cookie.value]),\n  )\n\n  // Forward the raw stored cookies to request headers\n  // so they contain metadata like \"expires\", \"secure\", etc.\n  for (const cookie of cookiesFromStore) {\n    request.headers.append('cookie', cookie.toString())\n  }\n\n  return {\n    ...cookiesFromDocument,\n    ...storedCookiesObject,\n    ...cookiesFromHeaders,\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,yBAAA;AAAAC,QAAA,CAAAD,yBAAA;EAAAE,oBAAA,EAAAA,CAAA,KAAAA;AAAA;AAAAC,MAAA,CAAAC,OAAA,GAAAC,YAAA,CAAAL,yBAAA;AAAA,IAAAM,aAAA,GAGOC,OAAA;AACP,IAAAC,kBAAA,GAA4BD,OAAA;AAE5B,SAASE,aAAaC,KAAA,EAAuC;EAC3D,MAAMC,aAAA,OAAgBL,aAAA,CAAAM,KAAA,EAAYF,KAAK;EACvC,MAAMG,OAAA,GAAkC,CAAC;EAEzC,WAAWC,UAAA,IAAcH,aAAA,EAAe;IACtC,IAAI,OAAOA,aAAA,CAAcG,UAAU,MAAM,aAAa;MACpDD,OAAA,CAAQC,UAAU,IAAIH,aAAA,CAAcG,UAAU;IAChD;EACF;EAEA,OAAOD,OAAA;AACT;AAEA,SAASE,sBAAA,EAAwB;EAC/B,OAAON,YAAA,CAAaO,QAAA,CAASC,MAAM;AACrC;AAEA,SAASC,mBAAmBC,OAAA,EAA0C;EACpE,IAAI,OAAOH,QAAA,KAAa,eAAe,OAAOI,QAAA,KAAa,aAAa;IACtE,OAAO,CAAC;EACV;EAEA,QAAQD,OAAA,CAAQE,WAAA;IACd,KAAK;MAAe;QAClB,MAAMC,UAAA,GAAa,IAAIC,GAAA,CAAIJ,OAAA,CAAQK,GAAG;QAItC,OAAOJ,QAAA,CAASK,MAAA,KAAWH,UAAA,CAAWG,MAAA,GAClCV,qBAAA,CAAsB,IACtB,CAAC;MACP;IAEA,KAAK;MAAW;QAEd,OAAOA,qBAAA,CAAsB;MAC/B;IAEA;MAAS;QACP,OAAO,CAAC;MACV;EACF;AACF;AAEO,SAASb,qBAAqBiB,OAAA,EAA0C;EAM7E,MAAMO,mBAAA,GAAsBP,OAAA,CAAQQ,OAAA,CAAQC,GAAA,CAAI,QAAQ;EACxD,MAAMC,kBAAA,GAAqBH,mBAAA,GACvBjB,YAAA,CAAaiB,mBAAmB,IAChC,CAAC;EAEL,MAAMI,mBAAA,GAAsBZ,kBAAA,CAAmBC,OAAO;EAGtD,WAAWY,IAAA,IAAQD,mBAAA,EAAqB;IACtCX,OAAA,CAAQQ,OAAA,CAAQK,MAAA,CACd,cACA1B,aAAA,CAAA2B,SAAA,EAAgBF,IAAA,EAAMD,mBAAA,CAAoBC,IAAI,CAAC,CACjD;EACF;EAEA,MAAMG,gBAAA,GAAmB1B,kBAAA,CAAA2B,WAAA,CAAYC,UAAA,CAAWjB,OAAA,CAAQK,GAAG;EAC3D,MAAMa,mBAAA,GAAsBC,MAAA,CAAOC,WAAA,CACjCL,gBAAA,CAAiBM,GAAA,CAAKvB,MAAA,IAAW,CAACA,MAAA,CAAOwB,GAAA,EAAKxB,MAAA,CAAOyB,KAAK,CAAC,CAC7D;EAIA,WAAWzB,MAAA,IAAUiB,gBAAA,EAAkB;IACrCf,OAAA,CAAQQ,OAAA,CAAQK,MAAA,CAAO,UAAUf,MAAA,CAAO0B,QAAA,CAAS,CAAC;EACpD;EAEA,OAAO;IACL,GAAGb,mBAAA;IACH,GAAGO,mBAAA;IACH,GAAGR;EACL;AACF","ignoreList":[]}