47f779d33380fe979189bbd425219970
/* istanbul ignore next */
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
exports.initialize = initialize;
exports.shutdown = shutdown;
function cov_v4mlsdijz() {
  var path = "/home/davicho/etherai-foresight-platform-main/server/src/cache.js";
  var hash = "1025549dd93b132b088f785fe931c1343a5df9f1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/davicho/etherai-foresight-platform-main/server/src/cache.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 27
        }
      },
      "1": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 18,
          column: 37
        }
      },
      "2": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 43
        }
      },
      "3": {
        start: {
          line: 28,
          column: 18
        },
        end: {
          line: 28,
          column: 37
        }
      },
      "4": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 28
        }
      },
      "5": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 28
        }
      },
      "6": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "7": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 31,
          column: 29
        }
      },
      "8": {
        start: {
          line: 32,
          column: 6
        },
        end: {
          line: 32,
          column: 18
        }
      },
      "9": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 23
        }
      },
      "10": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 26
        }
      },
      "11": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "12": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 45,
          column: 7
        }
      },
      "13": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 31
        }
      },
      "14": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 23
        }
      },
      "15": {
        start: {
          line: 58,
          column: 14
        },
        end: {
          line: 58,
          column: 31
        }
      },
      "16": {
        start: {
          line: 61,
          column: 26
        },
        end: {
          line: 61,
          column: 30
        }
      },
      "17": {
        start: {
          line: 63,
          column: 2
        },
        end: {
          line: 63,
          column: 97
        }
      },
      "18": {
        start: {
          line: 63,
          column: 90
        },
        end: {
          line: 63,
          column: 97
        }
      },
      "19": {
        start: {
          line: 64,
          column: 2
        },
        end: {
          line: 64,
          column: 34
        }
      },
      "20": {
        start: {
          line: 64,
          column: 27
        },
        end: {
          line: 64,
          column: 34
        }
      },
      "21": {
        start: {
          line: 65,
          column: 2
        },
        end: {
          line: 65,
          column: 74
        }
      },
      "22": {
        start: {
          line: 65,
          column: 42
        },
        end: {
          line: 65,
          column: 57
        }
      },
      "23": {
        start: {
          line: 69,
          column: 2
        },
        end: {
          line: 72,
          column: 3
        }
      },
      "24": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 39
        }
      },
      "25": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 31
        }
      },
      "26": {
        start: {
          line: 77,
          column: 2
        },
        end: {
          line: 77,
          column: 22
        }
      },
      "27": {
        start: {
          line: 81,
          column: 2
        },
        end: {
          line: 81,
          column: 21
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 2
          },
          end: {
            line: 7,
            column: 3
          }
        },
        loc: {
          start: {
            line: 7,
            column: 16
          },
          end: {
            line: 9,
            column: 3
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 17,
            column: 3
          }
        },
        loc: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 20,
            column: 3
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 2
          },
          end: {
            line: 27,
            column: 3
          }
        },
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 35,
            column: 3
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 40,
            column: 2
          },
          end: {
            line: 40,
            column: 3
          }
        },
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 47,
            column: 3
          }
        },
        line: 40
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 52,
            column: 2
          },
          end: {
            line: 52,
            column: 3
          }
        },
        loc: {
          start: {
            line: 52,
            column: 10
          },
          end: {
            line: 54,
            column: 3
          }
        },
        line: 52
      },
      "5": {
        name: "startCacheCleanup",
        decl: {
          start: {
            line: 62,
            column: 9
          },
          end: {
            line: 62,
            column: 26
          }
        },
        loc: {
          start: {
            line: 62,
            column: 29
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 62
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 65,
            column: 36
          },
          end: {
            line: 65,
            column: 37
          }
        },
        loc: {
          start: {
            line: 65,
            column: 42
          },
          end: {
            line: 65,
            column: 57
          }
        },
        line: 65
      },
      "7": {
        name: "stopCacheCleanup",
        decl: {
          start: {
            line: 68,
            column: 9
          },
          end: {
            line: 68,
            column: 25
          }
        },
        loc: {
          start: {
            line: 68,
            column: 28
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 68
      },
      "8": {
        name: "initialize",
        decl: {
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 76,
            column: 26
          }
        },
        loc: {
          start: {
            line: 76,
            column: 29
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 76
      },
      "9": {
        name: "shutdown",
        decl: {
          start: {
            line: 80,
            column: 16
          },
          end: {
            line: 80,
            column: 24
          }
        },
        loc: {
          start: {
            line: 80,
            column: 27
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 80
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 6
          },
          end: {
            line: 45,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 6
          },
          end: {
            line: 45,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 63,
            column: 2
          },
          end: {
            line: 63,
            column: 97
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 2
          },
          end: {
            line: 63,
            column: 97
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "4": {
        loc: {
          start: {
            line: 63,
            column: 6
          },
          end: {
            line: 63,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 6
          },
          end: {
            line: 63,
            column: 37
          }
        }, {
          start: {
            line: 63,
            column: 41
          },
          end: {
            line: 63,
            column: 88
          }
        }],
        line: 63
      },
      "5": {
        loc: {
          start: {
            line: 64,
            column: 2
          },
          end: {
            line: 64,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 2
          },
          end: {
            line: 64,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "6": {
        loc: {
          start: {
            line: 69,
            column: 2
          },
          end: {
            line: 72,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 2
          },
          end: {
            line: 72,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1025549dd93b132b088f785fe931c1343a5df9f1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_v4mlsdijz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_v4mlsdijz();
/**
 * Simple in-memory cache module for API responses.
 * Provides TTL-based caching to reduce external API calls.
 */

class SimpleCache {
  constructor() {
    /* istanbul ignore next */
    cov_v4mlsdijz().f[0]++;
    cov_v4mlsdijz().s[0]++;
    this.cache = new Map();
  }

  /**
   * Sets a value in the cache with TTL.
   * @param {string} key - Cache key
   * @param {any} value - Value to cache
   * @param {number} ttlMs - Time to live in milliseconds
   */
  set(key, value, ttlMs) {
    /* istanbul ignore next */
    cov_v4mlsdijz().f[1]++;
    const expiry =
    /* istanbul ignore next */
    (cov_v4mlsdijz().s[1]++, Date.now() + ttlMs);
    /* istanbul ignore next */
    cov_v4mlsdijz().s[2]++;
    this.cache.set(key, {
      value,
      expiry
    });
  }

  /**
   * Gets a value from the cache if not expired.
   * @param {string} key - Cache key
   * @returns {any|null} Cached value or null if expired/not found
   */
  get(key) {
    /* istanbul ignore next */
    cov_v4mlsdijz().f[2]++;
    const entry =
    /* istanbul ignore next */
    (cov_v4mlsdijz().s[3]++, this.cache.get(key));
    /* istanbul ignore next */
    cov_v4mlsdijz().s[4]++;
    if (!entry) {
      /* istanbul ignore next */
      cov_v4mlsdijz().b[0][0]++;
      cov_v4mlsdijz().s[5]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_v4mlsdijz().b[0][1]++;
    }
    cov_v4mlsdijz().s[6]++;
    if (Date.now() > entry.expiry) {
      /* istanbul ignore next */
      cov_v4mlsdijz().b[1][0]++;
      cov_v4mlsdijz().s[7]++;
      this.cache.delete(key);
      /* istanbul ignore next */
      cov_v4mlsdijz().s[8]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_v4mlsdijz().b[1][1]++;
    }
    cov_v4mlsdijz().s[9]++;
    return entry.value;
  }

  /**
   * Clears expired entries from the cache.
   */
  cleanup() {
    /* istanbul ignore next */
    cov_v4mlsdijz().f[3]++;
    const now =
    /* istanbul ignore next */
    (cov_v4mlsdijz().s[10]++, Date.now());
    /* istanbul ignore next */
    cov_v4mlsdijz().s[11]++;
    for (const [key, entry] of this.cache.entries()) {
      /* istanbul ignore next */
      cov_v4mlsdijz().s[12]++;
      if (now > entry.expiry) {
        /* istanbul ignore next */
        cov_v4mlsdijz().b[2][0]++;
        cov_v4mlsdijz().s[13]++;
        this.cache.delete(key);
      } else
      /* istanbul ignore next */
      {
        cov_v4mlsdijz().b[2][1]++;
      }
    }
  }

  /**
   * Clears all cache entries.
   */
  clear() {
    /* istanbul ignore next */
    cov_v4mlsdijz().f[4]++;
    cov_v4mlsdijz().s[14]++;
    this.cache.clear();
  }
}

// Export a singleton instance
const cache =
/* istanbul ignore next */
(cov_v4mlsdijz().s[15]++, new SimpleCache());

// Cleanup expired entries every 5 minutes
let _cacheCleanupHandle =
/* istanbul ignore next */
(cov_v4mlsdijz().s[16]++, null);
function startCacheCleanup() {
  /* istanbul ignore next */
  cov_v4mlsdijz().f[5]++;
  cov_v4mlsdijz().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_v4mlsdijz().b[4][0]++, process.env.NODE_ENV === 'test') ||
  /* istanbul ignore next */
  (cov_v4mlsdijz().b[4][1]++, process.env.DISABLE_BACKGROUND_TASKS === 'true')) {
    /* istanbul ignore next */
    cov_v4mlsdijz().b[3][0]++;
    cov_v4mlsdijz().s[18]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_v4mlsdijz().b[3][1]++;
  }
  cov_v4mlsdijz().s[19]++;
  if (_cacheCleanupHandle) {
    /* istanbul ignore next */
    cov_v4mlsdijz().b[5][0]++;
    cov_v4mlsdijz().s[20]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_v4mlsdijz().b[5][1]++;
  }
  cov_v4mlsdijz().s[21]++;
  _cacheCleanupHandle = setInterval(() => {
    /* istanbul ignore next */
    cov_v4mlsdijz().f[6]++;
    cov_v4mlsdijz().s[22]++;
    return cache.cleanup();
  }, 5 * 60 * 1000);
}
function stopCacheCleanup() {
  /* istanbul ignore next */
  cov_v4mlsdijz().f[7]++;
  cov_v4mlsdijz().s[23]++;
  if (_cacheCleanupHandle) {
    /* istanbul ignore next */
    cov_v4mlsdijz().b[6][0]++;
    cov_v4mlsdijz().s[24]++;
    clearInterval(_cacheCleanupHandle);
    /* istanbul ignore next */
    cov_v4mlsdijz().s[25]++;
    _cacheCleanupHandle = null;
  } else
  /* istanbul ignore next */
  {
    cov_v4mlsdijz().b[6][1]++;
  }
}

// Export functions for explicit lifecycle management
function initialize() {
  /* istanbul ignore next */
  cov_v4mlsdijz().f[8]++;
  cov_v4mlsdijz().s[26]++;
  startCacheCleanup();
}
function shutdown() {
  /* istanbul ignore next */
  cov_v4mlsdijz().f[9]++;
  cov_v4mlsdijz().s[27]++;
  stopCacheCleanup();
}
/* istanbul ignore next */
var _default = exports.default = cache;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,