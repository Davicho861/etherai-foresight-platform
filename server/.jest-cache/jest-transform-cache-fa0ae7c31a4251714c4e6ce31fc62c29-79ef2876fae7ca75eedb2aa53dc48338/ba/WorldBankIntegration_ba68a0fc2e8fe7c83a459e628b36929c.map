{"version":3,"names":["_safeFetch","_interopRequireDefault","require","_forceMocks","e","__esModule","default","cov_23mgqu741m","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","WorldBankIntegration","constructor","baseUrl","process","env","TEST_MODE","getEconomicIndicators","country","indicators","startYear","endYear","results","indicator","url","toLowerCase","data","safeFetch","headers","Accept","timeout","retries","err","console","warn","message","error","Array","isArray","length","broaderUrl","fallback","sortedData","sort","a","parseInt","date","latest","value","year","lastAvailable","anyEntry","find","d","note","Promise","resolve","setTimeout","period","forceMocksEnabled","mockData","getMockEconomicIndicators","Error","String","getKeyEconomicData","getFoodSecurityData","countries","fallbackUrl","getMockFoodSecurityData","mockIndicators","mockValues","forEach","Math","random","isMock","_default","exports"],"sources":["WorldBankIntegration.js"],"sourcesContent":["import safeFetch from '../lib/safeFetch.js';\nimport { forceMocksEnabled } from '../lib/force-mocks.js';\n\nclass WorldBankIntegration {\n  constructor() {\n    this.baseUrl = process.env.TEST_MODE === 'true'\n      ? 'http://mock-api-server:3001/world-bank'\n      : 'https://api.worldbank.org/v2';\n  }\n\n  async getEconomicIndicators(country, indicators, startYear, endYear) {\n    try {\n      const results = {};\n\n      for (const indicator of indicators) {\n        const url = `${this.baseUrl}/country/${country.toLowerCase()}/indicator/${indicator}?format=json&date=${startYear}:${endYear}&per_page=1000`;\n\n        let data;\n        try {\n          data = await safeFetch(url, { headers: { 'User-Agent': 'Praevisio/1.0 (+https://praevisio.local)', Accept: 'application/json' } }, { timeout: 10000, retries: 3 });\n        } catch (err) {\n          console.warn(`World Bank API error for ${indicator}: ${err.message}`);\n          results[indicator] = { error: `API error: ${err.message}` };\n          continue;\n        }\n        // If no data for the requested year range, retry once with a broader window (safe fallback)\n        if (!(data && Array.isArray(data) && data[1] && data[1].length > 0)) {\n          try {\n            const broaderUrl = `${this.baseUrl}/country/${country.toLowerCase()}/indicator/${indicator}?format=json&date=2010:${endYear}&per_page=1000`;\n            const fallback = await safeFetch(broaderUrl, { headers: { 'User-Agent': 'Praevisio/1.0 (+https://praevisio.local)', Accept: 'application/json' } }, { timeout: 10000, retries: 2 });\n            if (fallback && Array.isArray(fallback) && fallback[1] && fallback[1].length > 0) {\n              data = fallback;\n            }\n          } catch (err) {\n            // swallow fallback error and continue with original empty result\n            console.warn(`World Bank fallback error for ${indicator}: ${err.message}`);\n          }\n        }\n\n        if (data && data[1] && data[1].length > 0) {\n          // Get the most recent value\n          const sortedData = data[1].sort((a, b) => parseInt(b.date) - parseInt(a.date));\n          const latest = sortedData[0];\n          results[indicator] = {\n            value: latest.value,\n            year: latest.date,\n            country: latest.country.value\n          };\n        } else {\n          // No data in requested range - attempt to report last available year/value if present in data[1]\n          let lastAvailable = null;\n          try {\n            if (data && data[1] && data[1].length === 0) {\n              // nothing\n            } else if (data && data[1]) {\n              const anyEntry = data[1].find(d => d && (d.value !== null && d.value !== undefined));\n              if (anyEntry) lastAvailable = anyEntry;\n            }\n          } catch (e) {\n            // ignore\n          }\n\n          if (lastAvailable) {\n            results[indicator] = {\n              value: lastAvailable.value,\n              year: lastAvailable.date,\n              country: lastAvailable.country ? lastAvailable.country.value : country,\n              note: 'No data for requested range â€” returning last available value'\n            };\n            console.warn(`WorldBank: no data in ${startYear}:${endYear} for ${indicator} (${country}), returning last available year ${lastAvailable.date}`);\n          } else {\n            results[indicator] = { value: null, note: 'No data available' };\n            console.warn(`WorldBank: no data in ${startYear}:${endYear} for ${indicator} (${country}) and no fallback available`);\n          }\n        }\n\n        // Rate limiting: small delay between requests\n        await new Promise(resolve => setTimeout(resolve, 100));\n      }\n\n      return {\n        country,\n        period: { startYear, endYear },\n        indicators: results\n      };\n    } catch (error) {\n      console.error('Error fetching World Bank data:', error);\n      // Only return mock data when explicitly forced (tests or demo). Otherwise\n      // propagate the error so callers can handle the failure and we don't silently\n      // pretend we have real data.\n      if (forceMocksEnabled()) {\n        const mockData = this.getMockEconomicIndicators(country, indicators, startYear, endYear);\n        return mockData;\n      }\n      throw new Error(`WorldBank API failure: ${error && error.message ? error.message : String(error)}`);\n    }\n  }\n\n  // Helper method for common economic indicators relevant to social instability\n  async getKeyEconomicData(country, startYear = '2020', endYear = '2024') {\n    const indicators = [\n      'NY.GDP.PCAP.CD', // GDP per capita (current US$)\n      'FP.CPI.TOTL.ZG', // Inflation, consumer prices (annual %)\n      'SL.UEM.TOTL.ZS', // Unemployment, total (% of total labor force)\n      'PA.NUS.FCRF',    // Official exchange rate (LCU per US$, period average)\n      'DT.DOD.DECT.CD', // External debt stocks, total (DOD, current US$)\n      'FI.RES.TOTL.CD'  // Total reserves (includes gold, current US$)\n    ];\n\n    return await this.getEconomicIndicators(country, indicators, startYear, endYear);\n  }\n\n  // Method for food security data\n  async getFoodSecurityData(countries = ['COL', 'PER', 'ARG'], startYear = '2020', endYear = '2024') {\n    const indicator = 'SN.ITK.DEFC.ZS'; // Prevalence of undernourishment (% of population)\n    try {\n      const results = {};\n\n      for (const country of countries) {\n        const url = `${this.baseUrl}/country/${country.toLowerCase()}/indicator/${indicator}?format=json&date=${startYear}:${endYear}&per_page=1000`;\n\n        let data;\n        try {\n          data = await safeFetch(url, { headers: { 'User-Agent': 'Praevisio/1.0 (+https://praevisio.local)', Accept: 'application/json' } }, { timeout: 10000, retries: 3 });\n        } catch (err) {\n          console.warn(`World Bank API error for food security ${country}: ${err.message}`);\n          results[country] = { error: `API error: ${err.message}` };\n          continue;\n        }\n        // Retry with broader date range if no data found\n        if (!(data && Array.isArray(data) && data[1] && data[1].length > 0)) {\n          try {\n            const fallbackUrl = `${this.baseUrl}/country/${country.toLowerCase()}/indicator/${indicator}?format=json&date=2010:${endYear}&per_page=1000`;\n            const fallback = await safeFetch(fallbackUrl, { headers: { 'User-Agent': 'Praevisio/1.0 (+https://praevisio.local)', Accept: 'application/json' } }, { timeout: 10000, retries: 2 });\n            if (fallback && Array.isArray(fallback) && fallback[1] && fallback[1].length > 0) {\n              data = fallback;\n            }\n          } catch (err) {\n            console.warn(`World Bank fallback error for food security ${country}: ${err.message}`);\n          }\n        }\n        if (data && data[1] && data[1].length > 0) {\n          // Get the most recent value\n          const sortedData = data[1].sort((a, b) => parseInt(b.date) - parseInt(a.date));\n          const latest = sortedData[0];\n          results[country] = {\n            value: latest.value,\n            year: latest.date,\n            country: latest.country.value,\n            indicator: 'Prevalence of undernourishment (% of population)'\n          };\n        } else {\n          results[country] = { value: null, note: 'No data available' };\n        }\n\n        // Rate limiting\n        await new Promise(resolve => setTimeout(resolve, 100));\n      }\n\n      return {\n        countries,\n        period: { startYear, endYear },\n        indicator: 'SN.ITK.DEFC.ZS',\n        data: results\n      };\n    } catch (error) {\n      console.error('Error fetching food security data:', error);\n      // Fallback to high-fidelity mock data\n      const mockData = this.getMockFoodSecurityData(countries, startYear, endYear);\n      return mockData;\n    }\n  }\n\n  // High-fidelity mock data for fallback when API fails\n  getMockEconomicIndicators(country, indicators, startYear, endYear) {\n    const mockIndicators = {};\n\n    // Mock data for common indicators\n    const mockValues = {\n      'NY.GDP.PCAP.CD': { value: 6500, year: endYear, country: country },\n      'FP.CPI.TOTL.ZG': { value: 4.2, year: endYear, country: country },\n      'SL.UEM.TOTL.ZS': { value: 8.5, year: endYear, country: country },\n      'PA.NUS.FCRF': { value: 1.15, year: endYear, country: country },\n      'DT.DOD.DECT.CD': { value: 45000000000, year: endYear, country: country },\n      'FI.RES.TOTL.CD': { value: 12000000000, year: endYear, country: country }\n    };\n\n    indicators.forEach(indicator => {\n      if (mockValues[indicator]) {\n        mockIndicators[indicator] = mockValues[indicator];\n      } else {\n        // Generic mock for unknown indicators\n        mockIndicators[indicator] = {\n          value: Math.random() * 100,\n          year: endYear,\n          country: country,\n          note: 'Mock data - API unavailable'\n        };\n      }\n    });\n\n    return {\n      country,\n      period: { startYear, endYear },\n      indicators: mockIndicators,\n      isMock: true,\n      note: 'High-fidelity mock data - API unavailable'\n    };\n  }\n\n  // High-fidelity mock data for food security fallback\n  getMockFoodSecurityData(countries, startYear, endYear) {\n    const mockData = {};\n\n    countries.forEach(country => {\n      mockData[country] = {\n        value: 5.2 + Math.random() * 2, // Random value between 5.2-7.2\n        year: endYear,\n        country: country,\n        indicator: 'Prevalence of undernourishment (% of population)'\n      };\n    });\n\n    return {\n      countries,\n      period: { startYear, endYear },\n      indicator: 'SN.ITK.DEFC.ZS',\n      data: mockData,\n      isMock: true,\n      note: 'High-fidelity mock data - API unavailable'\n    };\n  }\n}\n\nexport default WorldBankIntegration;"],"mappings":"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","ignoreList":[]}