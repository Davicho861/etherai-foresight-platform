{"version":3,"names":["_agents","_interopRequireDefault","require","e","__esModule","default","CybersecurityService","constructor","agent","MetatronAgent","getCybersecurityRiskIndex","sectors","cyberData","run","analysisType","riskAssessment","console","warn","totalRisk","factors","threatLevel","vulnerabilityIndex","incidentFrequency","riskIndex","Math","min","max","error","getCybersecurityAnalysis","timestamp","Date","toISOString","analysis","riskLevel","_assessRiskLevel","keyFactors","recommendations","_generateRecommendations","source","message","push","_default","exports"],"sources":["cybersecurityService.js"],"sourcesContent":["import MetatronAgent from '../agents.js';\n\n/**\n * Service for calculating global cybersecurity risk index\n * Analyzes cyber threats and vulnerabilities to determine risk levels\n */\nclass CybersecurityService {\n  constructor() {\n    this.agent = new MetatronAgent('CybersecurityAgent');\n  }\n\n  /**\n   * Calculates cybersecurity risk index based on global cyber threat indicators\n   * @param {Array<string>} sectors - Array of sectors to analyze\n   * @returns {Promise<number>} Risk index between 0-100 (0 = low risk, 100 = high risk)\n   */\n  async getCybersecurityRiskIndex(sectors = ['global']) {\n    try {\n      const cyberData = await this.agent.run({\n        sectors,\n        analysisType: 'cybersecurity'\n      });\n\n      if (!cyberData || !cyberData.riskAssessment) {\n        console.warn('No cybersecurity data available, returning default risk index');\n        return 35; // Default moderate risk\n      }\n\n      // Calculate risk based on various cyber indicators\n      let totalRisk = 0;\n      let factors = 0;\n\n      if (cyberData.riskAssessment.threatLevel) {\n        totalRisk += cyberData.riskAssessment.threatLevel * 0.4;\n        factors++;\n      }\n\n      if (cyberData.riskAssessment.vulnerabilityIndex) {\n        totalRisk += cyberData.riskAssessment.vulnerabilityIndex * 0.3;\n        factors++;\n      }\n\n      if (cyberData.riskAssessment.incidentFrequency) {\n        totalRisk += cyberData.riskAssessment.incidentFrequency * 0.3;\n        factors++;\n      }\n\n      const riskIndex = factors > 0 ? totalRisk / factors : 35;\n\n      // Cap at 100\n      return Math.min(Math.max(riskIndex, 0), 100);\n\n    } catch (error) {\n      console.error('Error calculating cybersecurity risk index:', error);\n      return 35; // Return moderate risk as fallback\n    }\n  }\n\n  /**\n   * Gets detailed cybersecurity risk analysis\n   * @param {Array<string>} sectors - Array of sectors to analyze\n   * @returns {Promise<object>} Detailed cybersecurity analysis\n   */\n  async getCybersecurityAnalysis(sectors = ['global']) {\n    try {\n      const riskIndex = await this.getCybersecurityRiskIndex(sectors);\n\n      return {\n        timestamp: new Date().toISOString(),\n        riskIndex: riskIndex,\n        sectors: sectors,\n        analysis: {\n          riskLevel: this._assessRiskLevel(riskIndex),\n          keyFactors: ['Threat level', 'Vulnerability index', 'Incident frequency'],\n          recommendations: this._generateRecommendations(riskIndex)\n        },\n        source: 'CybersecurityService'\n      };\n    } catch (error) {\n      console.error('Error in cybersecurity analysis:', error);\n      return {\n        timestamp: new Date().toISOString(),\n        riskIndex: 35,\n        sectors: sectors,\n        analysis: {\n          riskLevel: 'Moderate',\n          keyFactors: ['Threat level', 'Vulnerability index', 'Incident frequency'],\n          recommendations: ['Implement multi-factor authentication', 'Regular security audits', 'Employee training programs']\n        },\n        source: 'CybersecurityService - Error Fallback',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Assesses risk level based on cybersecurity risk index\n   * @param {number} riskIndex - The calculated risk index\n   * @returns {string} Risk level description\n   */\n  _assessRiskLevel(riskIndex) {\n    if (riskIndex >= 80) return 'Critical';\n    if (riskIndex >= 60) return 'High';\n    if (riskIndex >= 30) return 'Moderate';\n    if (riskIndex >= 15) return 'Low';\n    return 'Minimal';\n  }\n\n  /**\n   * Generates recommendations based on risk level\n   * @param {number} riskIndex - The calculated risk index\n   * @returns {Array<string>} Array of recommendations\n   */\n  _generateRecommendations(riskIndex) {\n    const recommendations = [];\n\n    if (riskIndex >= 80) {\n      recommendations.push('Implement emergency cybersecurity protocols');\n      recommendations.push('Isolate critical systems');\n      recommendations.push('Activate incident response teams');\n      recommendations.push('Notify authorities and stakeholders');\n    } else if (riskIndex >= 60) {\n      recommendations.push('Enhance monitoring and detection systems');\n      recommendations.push('Conduct immediate security assessments');\n      recommendations.push('Update security patches urgently');\n      recommendations.push('Strengthen access controls');\n    } else if (riskIndex >= 30) {\n      recommendations.push('Regular security training for employees');\n      recommendations.push('Implement advanced threat detection');\n      recommendations.push('Regular vulnerability assessments');\n      recommendations.push('Backup critical data');\n    } else if (riskIndex >= 15) {\n      recommendations.push('Basic security hygiene practices');\n      recommendations.push('Regular software updates');\n      recommendations.push('Use strong authentication');\n    } else {\n      recommendations.push('Maintain basic security measures');\n      recommendations.push('Monitor emerging threats');\n    }\n\n    return recommendations;\n  }\n}\n\nexport default CybersecurityService;"],"mappings":"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","ignoreList":[]}