804f119775729b27c157844765c11a1b
/* istanbul ignore next */
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.calculateAlgorithmicJustice = calculateAlgorithmicJustice;
exports.calculateEnvironmentalSustainability = calculateEnvironmentalSustainability;
exports.calculateEthicalVector = calculateEthicalVector;
exports.calculateHumanImpact = calculateHumanImpact;
exports.calculatePrivacyRisk = calculatePrivacyRisk;
exports.calculateSocialEquity = calculateSocialEquity;
function cov_15q5kgs6hn() {
  var path = "/home/davicho/etherai-foresight-platform-main/server/src/services/ethicalVectorModule.js";
  var hash = "6f622bd35b72fb0f67d5e4f743b704b9071416c8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/davicho/etherai-foresight-platform-main/server/src/services/ethicalVectorModule.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 42
        },
        end: {
          line: 14,
          column: 53
        }
      },
      "1": {
        start: {
          line: 17,
          column: 23
        },
        end: {
          line: 17,
          column: 52
        }
      },
      "2": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 18,
          column: 62
        }
      },
      "3": {
        start: {
          line: 21,
          column: 22
        },
        end: {
          line: 21,
          column: 70
        }
      },
      "4": {
        start: {
          line: 23,
          column: 2
        },
        end: {
          line: 23,
          column: 34
        }
      },
      "5": {
        start: {
          line: 33,
          column: 30
        },
        end: {
          line: 33,
          column: 41
        }
      },
      "6": {
        start: {
          line: 36,
          column: 20
        },
        end: {
          line: 36,
          column: 54
        }
      },
      "7": {
        start: {
          line: 41,
          column: 2
        },
        end: {
          line: 41,
          column: 32
        }
      },
      "8": {
        start: {
          line: 51,
          column: 42
        },
        end: {
          line: 51,
          column: 53
        }
      },
      "9": {
        start: {
          line: 55,
          column: 26
        },
        end: {
          line: 55,
          column: 80
        }
      },
      "10": {
        start: {
          line: 56,
          column: 23
        },
        end: {
          line: 56,
          column: 56
        }
      },
      "11": {
        start: {
          line: 59,
          column: 26
        },
        end: {
          line: 59,
          column: 102
        }
      },
      "12": {
        start: {
          line: 60,
          column: 23
        },
        end: {
          line: 60,
          column: 56
        }
      },
      "13": {
        start: {
          line: 63,
          column: 23
        },
        end: {
          line: 63,
          column: 66
        }
      },
      "14": {
        start: {
          line: 65,
          column: 2
        },
        end: {
          line: 65,
          column: 35
        }
      },
      "15": {
        start: {
          line: 75,
          column: 59
        },
        end: {
          line: 75,
          column: 70
        }
      },
      "16": {
        start: {
          line: 78,
          column: 32
        },
        end: {
          line: 78,
          column: 74
        }
      },
      "17": {
        start: {
          line: 79,
          column: 30
        },
        end: {
          line: 79,
          column: 68
        }
      },
      "18": {
        start: {
          line: 82,
          column: 22
        },
        end: {
          line: 82,
          column: 81
        }
      },
      "19": {
        start: {
          line: 84,
          column: 2
        },
        end: {
          line: 84,
          column: 34
        }
      },
      "20": {
        start: {
          line: 94,
          column: 42
        },
        end: {
          line: 94,
          column: 53
        }
      },
      "21": {
        start: {
          line: 98,
          column: 30
        },
        end: {
          line: 98,
          column: 102
        }
      },
      "22": {
        start: {
          line: 99,
          column: 27
        },
        end: {
          line: 99,
          column: 61
        }
      },
      "23": {
        start: {
          line: 102,
          column: 29
        },
        end: {
          line: 102,
          column: 83
        }
      },
      "24": {
        start: {
          line: 104,
          column: 2
        },
        end: {
          line: 104,
          column: 41
        }
      },
      "25": {
        start: {
          line: 115,
          column: 22
        },
        end: {
          line: 115,
          column: 55
        }
      },
      "26": {
        start: {
          line: 116,
          column: 38
        },
        end: {
          line: 116,
          column: 87
        }
      },
      "27": {
        start: {
          line: 117,
          column: 23
        },
        end: {
          line: 117,
          column: 57
        }
      },
      "28": {
        start: {
          line: 118,
          column: 22
        },
        end: {
          line: 118,
          column: 55
        }
      },
      "29": {
        start: {
          line: 119,
          column: 29
        },
        end: {
          line: 119,
          column: 69
        }
      },
      "30": {
        start: {
          line: 124,
          column: 23
        },
        end: {
          line: 125,
          column: 93
        }
      },
      "31": {
        start: {
          line: 127,
          column: 2
        },
        end: {
          line: 140,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "calculateHumanImpact",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 29
          }
        },
        loc: {
          start: {
            line: 13,
            column: 43
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "calculateEnvironmentalSustainability",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 45
          }
        },
        loc: {
          start: {
            line: 32,
            column: 59
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 32
      },
      "2": {
        name: "calculateSocialEquity",
        decl: {
          start: {
            line: 50,
            column: 9
          },
          end: {
            line: 50,
            column: 30
          }
        },
        loc: {
          start: {
            line: 50,
            column: 44
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 50
      },
      "3": {
        name: "calculatePrivacyRisk",
        decl: {
          start: {
            line: 74,
            column: 9
          },
          end: {
            line: 74,
            column: 29
          }
        },
        loc: {
          start: {
            line: 74,
            column: 43
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 74
      },
      "4": {
        name: "calculateAlgorithmicJustice",
        decl: {
          start: {
            line: 93,
            column: 9
          },
          end: {
            line: 93,
            column: 36
          }
        },
        loc: {
          start: {
            line: 93,
            column: 50
          },
          end: {
            line: 105,
            column: 1
          }
        },
        line: 93
      },
      "5": {
        name: "calculateEthicalVector",
        decl: {
          start: {
            line: 114,
            column: 9
          },
          end: {
            line: 114,
            column: 31
          }
        },
        loc: {
          start: {
            line: 114,
            column: 45
          },
          end: {
            line: 141,
            column: 1
          }
        },
        line: 114
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 24
          },
          end: {
            line: 17,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 24
          },
          end: {
            line: 17,
            column: 40
          }
        }, {
          start: {
            line: 17,
            column: 44
          },
          end: {
            line: 17,
            column: 45
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 29
          },
          end: {
            line: 18,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 29
          },
          end: {
            line: 18,
            column: 50
          }
        }, {
          start: {
            line: 18,
            column: 54
          },
          end: {
            line: 18,
            column: 55
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 21
          },
          end: {
            line: 36,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 21
          },
          end: {
            line: 36,
            column: 42
          }
        }, {
          start: {
            line: 36,
            column: 46
          },
          end: {
            line: 36,
            column: 47
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 55,
            column: 26
          },
          end: {
            line: 55,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 55,
            column: 49
          },
          end: {
            line: 55,
            column: 76
          }
        }, {
          start: {
            line: 55,
            column: 79
          },
          end: {
            line: 55,
            column: 80
          }
        }],
        line: 55
      },
      "4": {
        loc: {
          start: {
            line: 59,
            column: 26
          },
          end: {
            line: 59,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 60
          },
          end: {
            line: 59,
            column: 98
          }
        }, {
          start: {
            line: 59,
            column: 101
          },
          end: {
            line: 59,
            column: 102
          }
        }],
        line: 59
      },
      "5": {
        loc: {
          start: {
            line: 78,
            column: 33
          },
          end: {
            line: 78,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 33
          },
          end: {
            line: 78,
            column: 62
          }
        }, {
          start: {
            line: 78,
            column: 66
          },
          end: {
            line: 78,
            column: 67
          }
        }],
        line: 78
      },
      "6": {
        loc: {
          start: {
            line: 79,
            column: 31
          },
          end: {
            line: 79,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 31
          },
          end: {
            line: 79,
            column: 56
          }
        }, {
          start: {
            line: 79,
            column: 60
          },
          end: {
            line: 79,
            column: 61
          }
        }],
        line: 79
      },
      "7": {
        loc: {
          start: {
            line: 98,
            column: 30
          },
          end: {
            line: 98,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 98,
            column: 53
          },
          end: {
            line: 98,
            column: 98
          }
        }, {
          start: {
            line: 98,
            column: 101
          },
          end: {
            line: 98,
            column: 102
          }
        }],
        line: 98
      },
      "8": {
        loc: {
          start: {
            line: 99,
            column: 28
          },
          end: {
            line: 99,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 28
          },
          end: {
            line: 99,
            column: 49
          }
        }, {
          start: {
            line: 99,
            column: 53
          },
          end: {
            line: 99,
            column: 54
          }
        }],
        line: 99
      },
      "9": {
        loc: {
          start: {
            line: 137,
            column: 16
          },
          end: {
            line: 138,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 37
          },
          end: {
            line: 137,
            column: 59
          }
        }, {
          start: {
            line: 138,
            column: 16
          },
          end: {
            line: 138,
            column: 85
          }
        }],
        line: 137
      },
      "10": {
        loc: {
          start: {
            line: 138,
            column: 16
          },
          end: {
            line: 138,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 37
          },
          end: {
            line: 138,
            column: 61
          }
        }, {
          start: {
            line: 138,
            column: 64
          },
          end: {
            line: 138,
            column: 85
          }
        }],
        line: 138
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6f622bd35b72fb0f67d5e4f743b704b9071416c8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_15q5kgs6hn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_15q5kgs6hn();
/**
 * @fileoverview Ethical Vector Module for Praevisio AI.
 * This module implements the Quantum Ethics framework for evaluating predictions
 * against human impact, environmental sustainability, social equity, privacy, and algorithmic justice.
 */

/**
 * Calculates the human impact component of the ethical vector.
 * Higher values indicate greater potential harm to human populations.
 * @param {object} riskIndices - The current risk indices from prediction engine.
 * @returns {number} Human impact score (0-1).
 */
function calculateHumanImpact(riskIndices) {
  /* istanbul ignore next */
  cov_15q5kgs6hn().f[0]++;
  const {
    famineRisk,
    supplyChainRisk
  } =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[0]++, riskIndices);

  // Human impact primarily from famine and supply chain disruptions
  const famineImpact =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[1]++, (
  /* istanbul ignore next */
  (cov_15q5kgs6hn().b[0][0]++, famineRisk.value) ||
  /* istanbul ignore next */
  (cov_15q5kgs6hn().b[0][1]++, 0)) / 100); // Normalize to 0-1
  const supplyChainImpact =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[2]++, (
  /* istanbul ignore next */
  (cov_15q5kgs6hn().b[1][0]++, supplyChainRisk.value) ||
  /* istanbul ignore next */
  (cov_15q5kgs6hn().b[1][1]++, 0)) / 100);

  // Weighted combination: famine has higher human impact weight
  const humanImpact =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[3]++, famineImpact * 0.7 + supplyChainImpact * 0.3);
  /* istanbul ignore next */
  cov_15q5kgs6hn().s[4]++;
  return Math.min(1, humanImpact);
}

/**
 * Calculates the environmental sustainability component of the ethical vector.
 * Higher values indicate greater environmental risk.
 * @param {object} riskIndices - The current risk indices from prediction engine.
 * @returns {number} Environmental sustainability score (0-1).
 */
function calculateEnvironmentalSustainability(riskIndices) {
  /* istanbul ignore next */
  cov_15q5kgs6hn().f[1]++;
  const {
    geophysicalRisk
  } =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[5]++, riskIndices);

  // Environmental impact primarily from geophysical events
  const geoImpact =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[6]++, (
  /* istanbul ignore next */
  (cov_15q5kgs6hn().b[2][0]++, geophysicalRisk.value) ||
  /* istanbul ignore next */
  (cov_15q5kgs6hn().b[2][1]++, 0)) / 100);

  // Additional factors could include climate data when available
  // For now, focus on seismic activity as proxy for environmental disruption
  /* istanbul ignore next */
  cov_15q5kgs6hn().s[7]++;
  return Math.min(1, geoImpact);
}

/**
 * Calculates the social equity component of the ethical vector.
 * Higher values indicate greater inequity in risk distribution.
 * @param {object} riskIndices - The current risk indices from prediction engine.
 * @returns {number} Social equity score (0-1).
 */
function calculateSocialEquity(riskIndices) {
  /* istanbul ignore next */
  cov_15q5kgs6hn().f[2]++;
  const {
    famineRisk,
    supplyChainRisk
  } =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[8]++, riskIndices);

  // Social equity considers how risks are distributed across populations
  // Higher famine risk in multiple countries indicates inequity
  const famineCountries =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[9]++, famineRisk.countries ?
  /* istanbul ignore next */
  (cov_15q5kgs6hn().b[3][0]++, famineRisk.countries.length) :
  /* istanbul ignore next */
  (cov_15q5kgs6hn().b[3][1]++, 0));
  const famineEquity =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[10]++, Math.min(1, famineCountries / 50)); // Normalize by global regions

  // Supply chain disruptions affecting multiple regions
  const affectedRegions =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[11]++, supplyChainRisk.affectedRegions ?
  /* istanbul ignore next */
  (cov_15q5kgs6hn().b[4][0]++, supplyChainRisk.affectedRegions.length) :
  /* istanbul ignore next */
  (cov_15q5kgs6hn().b[4][1]++, 0));
  const supplyEquity =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[12]++, Math.min(1, affectedRegions / 20));

  // Combined equity score
  const socialEquity =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[13]++, famineEquity * 0.6 + supplyEquity * 0.4);
  /* istanbul ignore next */
  cov_15q5kgs6hn().s[14]++;
  return Math.min(1, socialEquity);
}

/**
 * Calculates the privacy risk component of the ethical vector.
 * Higher values indicate greater potential privacy violations in data handling.
 * @param {object} riskIndices - The current risk indices from prediction engine.
 * @returns {number} Privacy risk score (0-1).
 */
function calculatePrivacyRisk(riskIndices) {
  /* istanbul ignore next */
  cov_15q5kgs6hn().f[3]++;
  const {
    communityResilienceRisk,
    climateExtremesRisk
  } =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[15]++, riskIndices);

  // Privacy risk increases with detailed community data exposure
  const communityDataExposure =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[16]++, (
  /* istanbul ignore next */
  (cov_15q5kgs6hn().b[5][0]++, communityResilienceRisk.value) ||
  /* istanbul ignore next */
  (cov_15q5kgs6hn().b[5][1]++, 0)) / 100);
  const climateDataExposure =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[17]++, (
  /* istanbul ignore next */
  (cov_15q5kgs6hn().b[6][0]++, climateExtremesRisk.value) ||
  /* istanbul ignore next */
  (cov_15q5kgs6hn().b[6][1]++, 0)) / 100);

  // Weighted combination: community data has higher privacy sensitivity
  const privacyRisk =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[18]++, communityDataExposure * 0.6 + climateDataExposure * 0.4);
  /* istanbul ignore next */
  cov_15q5kgs6hn().s[19]++;
  return Math.min(1, privacyRisk);
}

/**
 * Calculates the algorithmic justice component of the ethical vector.
 * Higher values indicate greater potential for algorithmic bias or unfair outcomes.
 * @param {object} riskIndices - The current risk indices from prediction engine.
 * @returns {number} Algorithmic justice score (0-1).
 */
function calculateAlgorithmicJustice(riskIndices) {
  /* istanbul ignore next */
  cov_15q5kgs6hn().f[4]++;
  const {
    famineRisk,
    geophysicalRisk
  } =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[20]++, riskIndices);

  // Algorithmic justice considers potential biases in risk predictions
  // Higher concentration of risk in specific regions may indicate bias
  const famineConcentration =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[21]++, famineRisk.countries ?
  /* istanbul ignore next */
  (cov_15q5kgs6hn().b[7][0]++, Math.min(1, famineRisk.countries.length / 10)) :
  /* istanbul ignore next */
  (cov_15q5kgs6hn().b[7][1]++, 0));
  const geoConcentration =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[22]++, (
  /* istanbul ignore next */
  (cov_15q5kgs6hn().b[8][0]++, geophysicalRisk.value) ||
  /* istanbul ignore next */
  (cov_15q5kgs6hn().b[8][1]++, 0)) / 100);

  // Combined justice score: concentration indicates potential bias
  const algorithmicJustice =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[23]++, famineConcentration * 0.5 + geoConcentration * 0.5);
  /* istanbul ignore next */
  cov_15q5kgs6hn().s[24]++;
  return Math.min(1, algorithmicJustice);
}

/**
 * Calculates the complete ethical vector for the current risk assessment.
 * The vector represents [humanImpact, environmentalSustainability, socialEquity, privacyRisk, algorithmicJustice]
 * where each component is normalized 0-1.
 * @param {object} riskIndices - The current risk indices from prediction engine.
 * @returns {object} Ethical vector with components and overall assessment.
 */
function calculateEthicalVector(riskIndices) {
  /* istanbul ignore next */
  cov_15q5kgs6hn().f[5]++;
  const humanImpact =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[25]++, calculateHumanImpact(riskIndices));
  const environmentalSustainability =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[26]++, calculateEnvironmentalSustainability(riskIndices));
  const socialEquity =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[27]++, calculateSocialEquity(riskIndices));
  const privacyRisk =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[28]++, calculatePrivacyRisk(riskIndices));
  const algorithmicJustice =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[29]++, calculateAlgorithmicJustice(riskIndices));

  // Overall ethical score: weighted average
  // Human impact has highest weight, followed by environmental and social concerns
  // Privacy and algorithmic justice are emerging ethical dimensions
  const overallScore =
  /* istanbul ignore next */
  (cov_15q5kgs6hn().s[30]++, humanImpact * 0.35 + environmentalSustainability * 0.25 + socialEquity * 0.2 + privacyRisk * 0.1 + algorithmicJustice * 0.1);
  /* istanbul ignore next */
  cov_15q5kgs6hn().s[31]++;
  return {
    vector: [humanImpact, environmentalSustainability, socialEquity, privacyRisk, algorithmicJustice],
    components: {
      humanImpact,
      environmentalSustainability,
      socialEquity,
      privacyRisk,
      algorithmicJustice
    },
    overallScore,
    assessment: overallScore > 0.7 ?
    /* istanbul ignore next */
    (cov_15q5kgs6hn().b[9][0]++, 'High Ethical Concern') :
    /* istanbul ignore next */
    (cov_15q5kgs6hn().b[9][1]++, overallScore > 0.4 ?
    /* istanbul ignore next */
    (cov_15q5kgs6hn().b[10][0]++, 'Medium Ethical Concern') :
    /* istanbul ignore next */
    (cov_15q5kgs6hn().b[10][1]++, 'Low Ethical Concern')),
    timestamp: new Date().toISOString()
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,