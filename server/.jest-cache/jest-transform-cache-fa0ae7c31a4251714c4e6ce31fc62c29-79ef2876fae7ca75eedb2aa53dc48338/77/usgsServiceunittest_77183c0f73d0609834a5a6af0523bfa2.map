{"version":3,"names":["describe","afterEach","jest","resetModules","process","env","FORCE_MOCKS","NATIVE_DEV_MODE","USGS_MOCK_PORT","global","fetch","test","svc","require","out","getSeismicActivity","expect","toHaveProperty","events","length","toBeGreaterThan","fakeBody","metadata","generated","Date","now","features","id","properties","mag","place","time","tsunami","sig","url","geometry","coordinates","fn","mockResolvedValue","ok","json","magnitude","toBeCloseTo","seismicPath","resolve","doMock","getSeismicData","Error","Array","isArray","toBe"],"sources":["usgsService.unit.test.js"],"sourcesContent":["describe('usgsService.getSeismicActivity', () => {\n  afterEach(() => {\n    jest.resetModules()\n    delete process.env.FORCE_MOCKS\n    delete process.env.NATIVE_DEV_MODE\n    delete process.env.USGS_MOCK_PORT\n    delete global.fetch\n  })\n\n  test('returns built-in mock when FORCE_MOCKS=true', async () => {\n    process.env.FORCE_MOCKS = 'true'\n  const svc = require('../../src/services/usgsService.js')\n    const out = await svc.getSeismicActivity()\n    expect(out).toHaveProperty('isMock', true)\n    expect(out.events.length).toBeGreaterThan(0)\n  })\n\n  test('uses local mock server when NATIVE_DEV_MODE=true and mock responds', async () => {\n    process.env.NATIVE_DEV_MODE = 'true'\n    process.env.USGS_MOCK_PORT = '4011'\n    const fakeBody = { metadata: { generated: Date.now() }, features: [{ id: 'm-1', properties: { mag: 3.2, place: 'X', time: Date.now(), tsunami: 0, sig: 10, url: 'u' }, geometry: { coordinates: [0,0,10] } }] }\n    global.fetch = jest.fn().mockResolvedValue({ ok: true, json: async () => fakeBody })\n  const svc = require('../../src/services/usgsService.js')\n    const out = await svc.getSeismicActivity()\n    expect(out.events[0].magnitude).toBeCloseTo(3.2)\n  })\n\n  test('falls back when live integration throws and FORCE_MOCKS not set', async () => {\n    // Mock getSeismicData to throw\n  const seismicPath = require.resolve('../../src/services/SeismicIntegration.js')\n  jest.doMock(seismicPath, () => ({ getSeismicData: async () => { throw new Error('live fail') } }))\n  const svc = require('../../src/services/usgsService.js')\n    const out = await svc.getSeismicActivity()\n    expect(out).toHaveProperty('events')\n    expect(Array.isArray(out.events)).toBe(true)\n  })\n})\n"],"mappings":"AAAAA,QAAQ,CAAC,gCAAgC,EAAE,MAAM;EAC/CC,SAAS,CAAC,MAAM;IACdC,IAAI,CAACC,YAAY,CAAC,CAAC;IACnB,OAAOC,OAAO,CAACC,GAAG,CAACC,WAAW;IAC9B,OAAOF,OAAO,CAACC,GAAG,CAACE,eAAe;IAClC,OAAOH,OAAO,CAACC,GAAG,CAACG,cAAc;IACjC,OAAOC,MAAM,CAACC,KAAK;EACrB,CAAC,CAAC;EAEFC,IAAI,CAAC,6CAA6C,EAAE,YAAY;IAC9DP,OAAO,CAACC,GAAG,CAACC,WAAW,GAAG,MAAM;IAClC,MAAMM,GAAG,GAAGC,OAAO,CAAC,mCAAmC,CAAC;IACtD,MAAMC,GAAG,GAAG,MAAMF,GAAG,CAACG,kBAAkB,CAAC,CAAC;IAC1CC,MAAM,CAACF,GAAG,CAAC,CAACG,cAAc,CAAC,QAAQ,EAAE,IAAI,CAAC;IAC1CD,MAAM,CAACF,GAAG,CAACI,MAAM,CAACC,MAAM,CAAC,CAACC,eAAe,CAAC,CAAC,CAAC;EAC9C,CAAC,CAAC;EAEFT,IAAI,CAAC,oEAAoE,EAAE,YAAY;IACrFP,OAAO,CAACC,GAAG,CAACE,eAAe,GAAG,MAAM;IACpCH,OAAO,CAACC,GAAG,CAACG,cAAc,GAAG,MAAM;IACnC,MAAMa,QAAQ,GAAG;MAAEC,QAAQ,EAAE;QAAEC,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;MAAE,CAAC;MAAEC,QAAQ,EAAE,CAAC;QAAEC,EAAE,EAAE,KAAK;QAAEC,UAAU,EAAE;UAAEC,GAAG,EAAE,GAAG;UAAEC,KAAK,EAAE,GAAG;UAAEC,IAAI,EAAEP,IAAI,CAACC,GAAG,CAAC,CAAC;UAAEO,OAAO,EAAE,CAAC;UAAEC,GAAG,EAAE,EAAE;UAAEC,GAAG,EAAE;QAAI,CAAC;QAAEC,QAAQ,EAAE;UAAEC,WAAW,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE;QAAE;MAAE,CAAC;IAAE,CAAC;IAC/M3B,MAAM,CAACC,KAAK,GAAGR,IAAI,CAACmC,EAAE,CAAC,CAAC,CAACC,iBAAiB,CAAC;MAAEC,EAAE,EAAE,IAAI;MAAEC,IAAI,EAAE,MAAAA,CAAA,KAAYnB;IAAS,CAAC,CAAC;IACtF,MAAMT,GAAG,GAAGC,OAAO,CAAC,mCAAmC,CAAC;IACtD,MAAMC,GAAG,GAAG,MAAMF,GAAG,CAACG,kBAAkB,CAAC,CAAC;IAC1CC,MAAM,CAACF,GAAG,CAACI,MAAM,CAAC,CAAC,CAAC,CAACuB,SAAS,CAAC,CAACC,WAAW,CAAC,GAAG,CAAC;EAClD,CAAC,CAAC;EAEF/B,IAAI,CAAC,iEAAiE,EAAE,YAAY;IAClF;IACF,MAAMgC,WAAW,GAAG9B,OAAO,CAAC+B,OAAO,CAAC,0CAA0C,CAAC;IAC/E1C,IAAI,CAAC2C,MAAM,CAACF,WAAW,EAAE,OAAO;MAAEG,cAAc,EAAE,MAAAA,CAAA,KAAY;QAAE,MAAM,IAAIC,KAAK,CAAC,WAAW,CAAC;MAAC;IAAE,CAAC,CAAC,CAAC;IAClG,MAAMnC,GAAG,GAAGC,OAAO,CAAC,mCAAmC,CAAC;IACtD,MAAMC,GAAG,GAAG,MAAMF,GAAG,CAACG,kBAAkB,CAAC,CAAC;IAC1CC,MAAM,CAACF,GAAG,CAAC,CAACG,cAAc,CAAC,QAAQ,CAAC;IACpCD,MAAM,CAACgC,KAAK,CAACC,OAAO,CAACnC,GAAG,CAACI,MAAM,CAAC,CAAC,CAACgC,IAAI,CAAC,IAAI,CAAC;EAC9C,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}