{"version":3,"names":["_agents","_interopRequireDefault","require","e","__esModule","default","GeopoliticalInstabilityService","constructor","agent","MetatronAgent","getGeopoliticalInstabilityIndex","regions","geopoliticalData","run","analysisType","riskAssessment","console","warn","totalRisk","factors","conflictIntensity","tensionLevel","sanctionsImpact","allianceInstability","riskIndex","Math","min","max","error","getGeopoliticalInstabilityAnalysis","timestamp","Date","toISOString","analysis","riskLevel","_assessRiskLevel","keyFactors","recommendations","_generateRecommendations","source","message","push","_default","exports"],"sources":["geopoliticalInstabilityService.js"],"sourcesContent":["import MetatronAgent from '../agents.js';\n\n/**\n * Service for calculating global geopolitical instability risk index\n * Analyzes geopolitical tensions and conflicts to determine risk levels\n */\nclass GeopoliticalInstabilityService {\n  constructor() {\n    this.agent = new MetatronAgent('GeopoliticalInstabilityAgent');\n  }\n\n  /**\n   * Calculates geopolitical instability risk index based on global conflict indicators\n   * @param {Array<string>} regions - Array of regions to analyze\n   * @returns {Promise<number>} Risk index between 0-100 (0 = low risk, 100 = high risk)\n   */\n  async getGeopoliticalInstabilityIndex(regions = ['global']) {\n    try {\n      const geopoliticalData = await this.agent.run({\n        regions,\n        analysisType: 'geopolitical-instability'\n      });\n\n      if (!geopoliticalData || !geopoliticalData.riskAssessment) {\n        console.warn('No geopolitical instability data available, returning default risk index');\n        return 45; // Default moderate-high risk\n      }\n\n      // Calculate risk based on various geopolitical indicators\n      let totalRisk = 0;\n      let factors = 0;\n\n      if (geopoliticalData.riskAssessment.conflictIntensity) {\n        totalRisk += geopoliticalData.riskAssessment.conflictIntensity * 0.35;\n        factors++;\n      }\n\n      if (geopoliticalData.riskAssessment.tensionLevel) {\n        totalRisk += geopoliticalData.riskAssessment.tensionLevel * 0.25;\n        factors++;\n      }\n\n      if (geopoliticalData.riskAssessment.sanctionsImpact) {\n        totalRisk += geopoliticalData.riskAssessment.sanctionsImpact * 0.2;\n        factors++;\n      }\n\n      if (geopoliticalData.riskAssessment.allianceInstability) {\n        totalRisk += geopoliticalData.riskAssessment.allianceInstability * 0.2;\n        factors++;\n      }\n\n      const riskIndex = factors > 0 ? totalRisk / factors : 45;\n\n      // Cap at 100\n      return Math.min(Math.max(riskIndex, 0), 100);\n\n    } catch (error) {\n      console.error('Error calculating geopolitical instability index:', error);\n      return 45; // Return moderate-high risk as fallback\n    }\n  }\n\n  /**\n   * Gets detailed geopolitical instability risk analysis\n   * @param {Array<string>} regions - Array of regions to analyze\n   * @returns {Promise<object>} Detailed geopolitical instability analysis\n   */\n  async getGeopoliticalInstabilityAnalysis(regions = ['global']) {\n    try {\n      const riskIndex = await this.getGeopoliticalInstabilityIndex(regions);\n\n      return {\n        timestamp: new Date().toISOString(),\n        riskIndex: riskIndex,\n        regions: regions,\n        analysis: {\n          riskLevel: this._assessRiskLevel(riskIndex),\n          keyFactors: ['Conflict intensity', 'Tension level', 'Sanctions impact', 'Alliance instability'],\n          recommendations: this._generateRecommendations(riskIndex)\n        },\n        source: 'GeopoliticalInstabilityService'\n      };\n    } catch (error) {\n      console.error('Error in geopolitical instability analysis:', error);\n      return {\n        timestamp: new Date().toISOString(),\n        riskIndex: 45,\n        regions: regions,\n        analysis: {\n          riskLevel: 'Moderate',\n          keyFactors: ['Conflict intensity', 'Tension level', 'Sanctions impact', 'Alliance instability'],\n          recommendations: ['Monitor diplomatic developments', 'Diversify trade routes', 'Strengthen international alliances']\n        },\n        source: 'GeopoliticalInstabilityService - Error Fallback',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Assesses risk level based on geopolitical instability risk index\n   * @param {number} riskIndex - The calculated risk index\n   * @returns {string} Risk level description\n   */\n  _assessRiskLevel(riskIndex) {\n    if (riskIndex >= 80) return 'Critical';\n    if (riskIndex >= 60) return 'High';\n    if (riskIndex >= 30) return 'Moderate';\n    if (riskIndex >= 15) return 'Low';\n    return 'Minimal';\n  }\n\n  /**\n   * Generates recommendations based on risk level\n   * @param {number} riskIndex - The calculated risk index\n   * @returns {Array<string>} Array of recommendations\n   */\n  _generateRecommendations(riskIndex) {\n    const recommendations = [];\n\n    if (riskIndex >= 80) {\n      recommendations.push('Activate emergency diplomatic protocols');\n      recommendations.push('Implement crisis management procedures');\n      recommendations.push('Prepare for potential sanctions');\n      recommendations.push('Strengthen military readiness');\n    } else if (riskIndex >= 60) {\n      recommendations.push('Enhance diplomatic monitoring');\n      recommendations.push('Diversify strategic partnerships');\n      recommendations.push('Build economic resilience');\n      recommendations.push('Strengthen intelligence capabilities');\n    } else if (riskIndex >= 30) {\n      recommendations.push('Monitor geopolitical developments closely');\n      recommendations.push('Strengthen international cooperation');\n      recommendations.push('Develop contingency plans');\n      recommendations.push('Enhance risk communication');\n    } else if (riskIndex >= 15) {\n      recommendations.push('Maintain diplomatic engagement');\n      recommendations.push('Monitor emerging tensions');\n      recommendations.push('Build international trust');\n    } else {\n      recommendations.push('Continue routine diplomatic activities');\n      recommendations.push('Support international institutions');\n    }\n\n    return recommendations;\n  }\n}\n\nexport default GeopoliticalInstabilityService;"],"mappings":"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","ignoreList":[]}