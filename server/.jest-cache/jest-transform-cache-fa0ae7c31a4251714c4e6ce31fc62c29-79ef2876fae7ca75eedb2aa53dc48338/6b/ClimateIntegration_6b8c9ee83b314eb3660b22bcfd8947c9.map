{"version":3,"names":["_safeFetch","_interopRequireDefault","require","e","__esModule","default","_interopRequireWildcard","t","WeakMap","r","n","o","i","f","__proto__","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ClimateIntegration","constructor","baseUrl","getClimateExtremes","countries","results","Promise","all","map","country","getCountryClimateData","error","console","_fm","resolve","then","forceMocksEnabled","getMockClimateData","Error","message","String","coords","getCountryCoordinates","endDate","Date","toISOString","slice","replace","startDate","now","params","URLSearchParams","start","end","latitude","lat","longitude","lon","community","parameters","format","url","data","safeFetch","headers","timeout","retries","properties","parameter","processClimateData","_fm2","forceMocksEnabled2","warn","mock","isMock","source","maxTemps","values","T2M_MAX","minTemps","T2M_MIN","precipitations","PRECTOTCORR","humidities","RH2M","avgMaxTemp","reduce","sum","length","avgMinTemp","totalPrecip","p","avgHumidity","h","extremeEvents","forEach","temp","precip","getCountryName","countryCode","parseFloat","toFixed","totalPrecipitation","riskLevel","calculateClimateRiskLevel","period","timestamp","score","mockData","code","names","_default","exports"],"sources":["ClimateIntegration.js"],"sourcesContent":["import safeFetch from '../lib/safeFetch.js';\n\nclass ClimateIntegration {\n  constructor() {\n    this.baseUrl = 'https://power.larc.nasa.gov/api/temporal/daily/point';\n  }\n\n  async getClimateExtremes(countries = ['COL', 'PER', 'ARG']) {\n    try {\n      const results = await Promise.all(\n        countries.map(country => this.getCountryClimateData(country))\n      );\n      return results;\n    } catch (error) {\n      console.error('Error fetching climate extremes data:', error);\n      // Only return mock data when explicitly forced (tests/demo). Otherwise\n      // propagate the error so the caller knows real data couldn't be fetched.\n      const _fm = await import('../lib/force-mocks.js');\n      const forceMocksEnabled = _fm.forceMocksEnabled || _fm.default || _fm;\n      if (forceMocksEnabled()) {\n        return countries.map(country => this.getMockClimateData(country));\n      }\n      throw new Error(`ClimateIntegration failure: ${error && error.message ? error.message : String(error)}`);\n    }\n  }\n\n  async getCountryClimateData(country) {\n    try {\n      const coords = this.getCountryCoordinates(country);\n      const endDate = new Date().toISOString().slice(0, 10).replace(/-/g, '');\n      const startDate = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().slice(0, 10).replace(/-/g, '');\n\n      const params = new URLSearchParams({\n        start: startDate,\n        end: endDate,\n        latitude: coords.lat,\n        longitude: coords.lon,\n        community: 'RE',\n        parameters: 'T2M_MAX,T2M_MIN,PRECTOTCORR,RH2M',\n        format: 'JSON'\n      });\n\n      const url = `${this.baseUrl}?${params}`;\n      const data = await safeFetch(url, { headers: { 'User-Agent': 'Praevisio/1.0 (+https://praevisio.local)' } }, { timeout: 15000, retries: 2 });\n\n      if (data && data.properties && data.properties.parameter) {\n        return this.processClimateData(data.properties.parameter, country);\n      } else {\n        return this.getMockClimateData(country);\n      }\n    } catch (error) {\n      const _fm2 = await import('../lib/force-mocks.js');\n      const forceMocksEnabled2 = _fm2.forceMocksEnabled || _fm2.default || _fm2;\n      if (forceMocksEnabled2()) {\n        console.warn(`ClimateIntegration: returning FORCE_MOCKS mock for ${country} due to error: ${error && error.message}`);\n        const mock = this.getMockClimateData(country);\n        return { ...mock, isMock: true, source: 'FORCE_MOCKS:Climate' };\n      }\n      throw new Error(`ClimateIntegration failed for ${country}: ${error && error.message ? error.message : String(error)}`);\n    }\n  }\n\n  processClimateData(parameters, country) {\n    const maxTemps = Object.values(parameters.T2M_MAX || {});\n    const minTemps = Object.values(parameters.T2M_MIN || {});\n    const precipitations = Object.values(parameters.PRECTOTCORR || {});\n    const humidities = Object.values(parameters.RH2M || {});\n\n    const avgMaxTemp = maxTemps.reduce((sum, t) => sum + t, 0) / maxTemps.length;\n    const avgMinTemp = minTemps.reduce((sum, t) => sum + t, 0) / minTemps.length;\n    const totalPrecip = precipitations.reduce((sum, p) => sum + p, 0);\n    const avgHumidity = humidities.reduce((sum, h) => sum + h, 0) / humidities.length;\n\n    // Count extreme events\n    let extremeEvents = 0;\n    maxTemps.forEach(temp => { if (temp > 35) extremeEvents++; }); // Heat waves\n    precipitations.forEach(precip => { if (precip > 50) extremeEvents++; }); // Heavy rain\n    minTemps.forEach(temp => { if (temp < 5) extremeEvents++; }); // Cold snaps\n\n    return {\n      country: this.getCountryName(country),\n      countryCode: country,\n      avgMaxTemp: parseFloat(avgMaxTemp.toFixed(1)),\n      avgMinTemp: parseFloat(avgMinTemp.toFixed(1)),\n      totalPrecipitation: parseFloat(totalPrecip.toFixed(1)),\n      avgHumidity: parseFloat(avgHumidity.toFixed(1)),\n      extremeEvents,\n      riskLevel: this.calculateClimateRiskLevel({ avgMaxTemp, totalPrecip, extremeEvents, avgHumidity }),\n      period: 'Last 30 days',\n      timestamp: new Date().toISOString()\n    };\n  }\n\n  calculateClimateRiskLevel(data) {\n    let score = 0;\n    if (data.avgMaxTemp > 35) score += 2;\n    if (data.totalPrecipitation > 200) score += 2;\n    if (data.extremeEvents > 5) score += 2;\n    if (data.avgHumidity > 80) score += 1;\n\n    if (score >= 5) return 'high';\n    if (score >= 3) return 'medium';\n    return 'low';\n  }\n\n  getMockClimateData(country) {\n    const mockData = {\n      'COL': { avgMaxTemp: 28.5, avgMinTemp: 18.2, totalPrecipitation: 150.3, avgHumidity: 75.2, extremeEvents: 3 },\n      'PER': { avgMaxTemp: 25.8, avgMinTemp: 15.6, totalPrecipitation: 85.7, avgHumidity: 68.9, extremeEvents: 2 },\n      'ARG': { avgMaxTemp: 22.1, avgMinTemp: 12.4, totalPrecipitation: 120.5, avgHumidity: 72.3, extremeEvents: 4 },\n      'BRA': { avgMaxTemp: 30.2, avgMinTemp: 20.8, totalPrecipitation: 180.9, avgHumidity: 78.6, extremeEvents: 5 },\n      'MEX': { avgMaxTemp: 26.7, avgMinTemp: 16.9, totalPrecipitation: 95.2, avgHumidity: 65.4, extremeEvents: 2 }\n    };\n\n    const data = mockData[country] || { avgMaxTemp: 25.0, avgMinTemp: 15.0, totalPrecipitation: 100.0, avgHumidity: 70.0, extremeEvents: 2 };\n\n    return {\n      country: this.getCountryName(country),\n      countryCode: country,\n      ...data,\n      riskLevel: this.calculateClimateRiskLevel(data),\n      period: 'Mock data - Last 30 days',\n      timestamp: new Date().toISOString()\n    };\n  }\n\n  getCountryCoordinates(country) {\n    const coords = {\n      'COL': { lat: 4.5709, lon: -74.2973 }, // Bogotá\n      'PER': { lat: -12.0464, lon: -77.0428 }, // Lima\n      'ARG': { lat: -34.6118, lon: -58.3966 }, // Buenos Aires\n      'BRA': { lat: -15.7942, lon: -47.8822 }, // Brasília\n      'MEX': { lat: 19.4326, lon: -99.1332 }  // Mexico City\n    };\n    return coords[country] || { lat: 0, lon: 0 };\n  }\n\n  getCountryName(code) {\n    const names = {\n      'COL': 'Colombia',\n      'PER': 'Peru',\n      'ARG': 'Argentina',\n      'BRA': 'Brazil',\n      'MEX': 'Mexico'\n    };\n    return names[code] || code;\n  }\n}\n\nexport default ClimateIntegration;"],"mappings":"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","ignoreList":[]}