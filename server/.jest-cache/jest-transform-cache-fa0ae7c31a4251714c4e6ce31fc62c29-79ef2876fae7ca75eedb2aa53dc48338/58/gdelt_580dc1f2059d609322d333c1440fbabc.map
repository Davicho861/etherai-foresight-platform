{"version":3,"names":["_express","_interopRequireDefault","require","_GdeltIntegration","e","__esModule","default","router","express","Router","get","req","res","country","startDate","endDate","query","status","json","error","gdelt","GdeltIntegration","data","getSocialEvents","err","console","_default","exports"],"sources":["gdelt.js"],"sourcesContent":["import express from 'express';\nimport GdeltIntegration from '../integrations/GdeltIntegration.js';\n\nconst router = express.Router();\n\n// GET /api/gdelt/events?country=COL&startDate=2023-01-01&endDate=2023-12-31\nrouter.get('/events', async (req, res) => {\n  try {\n    const { country, startDate, endDate } = req.query;\n    if (!country || !startDate || !endDate) {\n      return res.status(400).json({ error: 'country, startDate, and endDate are required' });\n    }\n\n    const gdelt = new GdeltIntegration();\n    const data = await gdelt.getSocialEvents(country, startDate, endDate);\n    res.json(data);\n  } catch (err) {\n    console.error('Error in /api/gdelt/events:', err);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n});\n\nexport default router;"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,iBAAA,GAAAF,sBAAA,CAAAC,OAAA;AAAmE,SAAAD,uBAAAG,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAEnE,MAAMG,MAAM,GAAGC,gBAAO,CAACC,MAAM,CAAC,CAAC;;AAE/B;AACAF,MAAM,CAACG,GAAG,CAAC,SAAS,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACxC,IAAI;IACF,MAAM;MAAEC,OAAO;MAAEC,SAAS;MAAEC;IAAQ,CAAC,GAAGJ,GAAG,CAACK,KAAK;IACjD,IAAI,CAACH,OAAO,IAAI,CAACC,SAAS,IAAI,CAACC,OAAO,EAAE;MACtC,OAAOH,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,KAAK,EAAE;MAA+C,CAAC,CAAC;IACxF;IAEA,MAAMC,KAAK,GAAG,IAAIC,yBAAgB,CAAC,CAAC;IACpC,MAAMC,IAAI,GAAG,MAAMF,KAAK,CAACG,eAAe,CAACV,OAAO,EAAEC,SAAS,EAAEC,OAAO,CAAC;IACrEH,GAAG,CAACM,IAAI,CAACI,IAAI,CAAC;EAChB,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZC,OAAO,CAACN,KAAK,CAAC,6BAA6B,EAAEK,GAAG,CAAC;IACjDZ,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,KAAK,EAAE;IAAwB,CAAC,CAAC;EAC1D;AACF,CAAC,CAAC;AAAC,IAAAO,QAAA,GAAAC,OAAA,CAAArB,OAAA,GAEYC,MAAM","ignoreList":[]}