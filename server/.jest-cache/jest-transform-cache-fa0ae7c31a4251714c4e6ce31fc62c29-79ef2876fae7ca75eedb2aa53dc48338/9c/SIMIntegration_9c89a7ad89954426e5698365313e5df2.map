{"version":3,"names":["_safeFetch","_interopRequireDefault","require","_forceMocks","e","__esModule","default","SIMIntegration","constructor","baseUrl","process","env","TEST_MODE","getFoodPrices","product","region","url","encodeURIComponent","Date","toISOString","split","data","safeFetch","timeout","retries","priceData","currentPrice","precio_actual","minPrice","precio_minimo","maxPrice","precio_maximo","averagePrice","precio_promedio","unit","unidad","date","fecha","source","isMock","error","console","log","message","forceMocksEnabled","Error","String","mockPrices","current","min","max","avg","productData","toLowerCase","getPriceHistory","days","endDate","startDate","setDate","getDate","historyData","precios","map","item","price","precio","volume","volumen","basePrice","rice","potatoes","corn","beans","i","variation","Math","random","push","round","floor","getVolatilityIndex","volatilityIndex","indice_volatilidad","riskLevel","nivel_riesgo","volatilities","volatility","_default","exports"],"sources":["SIMIntegration.js"],"sourcesContent":["import safeFetch from '../lib/safeFetch.js';\nimport { forceMocksEnabled } from '../lib/force-mocks.js';\n\nclass SIMIntegration {\n  constructor() {\n    // SIM (Sistema de Información de Mercados) MINAGRI API\n    this.baseUrl = process.env.TEST_MODE === 'true'\n      ? 'http://mock-api-server:3001/sim' // internal mock server\n      : 'https://sim.minagri.gob.pe/api/v1';\n  }\n\n  async getFoodPrices(product, region) {\n    try {\n      // Attempt to fetch real SIM food prices\n      const url = `${this.baseUrl}/precios?producto=${encodeURIComponent(product)}&region=${encodeURIComponent(region)}&fecha=${new Date().toISOString().split('T')[0]}`;\n\n      const data = await safeFetch(url, {}, { timeout: 10000, retries: 2 });\n\n      // Process price data\n      const priceData = {\n        product: product,\n        region: region || 'Lima',\n        currentPrice: data.precio_actual || 0,\n        minPrice: data.precio_minimo || 0,\n        maxPrice: data.precio_maximo || 0,\n        averagePrice: data.precio_promedio || 0,\n        unit: data.unidad || 'PEN/kg',\n        date: data.fecha || new Date().toISOString(),\n        source: 'SIM MINAGRI'\n      };\n\n      return {\n        product,\n        region,\n        priceData,\n        isMock: false\n      };\n    } catch (error) {\n      console.log(`SIMIntegration: API failed for ${product} in ${region}: ${error && error.message}`);\n      if (!forceMocksEnabled()) {\n        throw new Error(`SIMIntegration failure: ${error && error.message ? error.message : String(error)}`);\n      }\n      const mockPrices = {\n        'rice': { current: 4.50, min: 4.20, max: 4.80, avg: 4.45 },\n        'potatoes': { current: 2.20, min: 1.80, max: 2.60, avg: 2.25 },\n        'corn': { current: 3.10, min: 2.80, max: 3.40, avg: 3.15 },\n        'beans': { current: 5.80, min: 5.20, max: 6.50, avg: 5.85 }\n      };\n\n      const productData = mockPrices[product.toLowerCase()] || { current: 3.00, min: 2.50, max: 3.50, avg: 3.00 };\n\n      return {\n        product,\n        region,\n        priceData: {\n          product,\n          region: region || 'Lima',\n          currentPrice: productData.current,\n          minPrice: productData.min,\n          maxPrice: productData.max,\n          averagePrice: productData.avg,\n          unit: 'PEN/kg',\n          date: new Date().toISOString(),\n          source: 'FALLBACK_MOCK:SIM'\n        },\n        isMock: true\n      };\n    }\n  }\n\n  async getPriceHistory(product, region, days = 30) {\n    try {\n      // Attempt to fetch real SIM price history\n      const endDate = new Date();\n      const startDate = new Date();\n      startDate.setDate(endDate.getDate() - days);\n\n      const url = `${this.baseUrl}/precios/historico?producto=${encodeURIComponent(product)}&region=${encodeURIComponent(region)}&fecha_inicio=${startDate.toISOString().split('T')[0]}&fecha_fin=${endDate.toISOString().split('T')[0]}`;\n\n      const data = await safeFetch(url, {}, { timeout: 10000, retries: 2 });\n\n      // Process historical price data\n      const historyData = (data.precios || []).map(item => ({\n        date: item.fecha,\n        price: item.precio,\n        volume: item.volumen || 0\n      }));\n\n      return {\n        product,\n        region,\n        historyData,\n        isMock: false\n      };\n    } catch (error) {\n      console.log(`SIMIntegration: API failed for ${product} in ${region}: ${error && error.message}`);\n      if (!forceMocksEnabled()) {\n        throw new Error(`SIMIntegration failure: ${error && error.message ? error.message : String(error)}`);\n      }\n      // Generate mock historical data\n      const historyData = [];\n      const basePrice = { rice: 4.50, potatoes: 2.20, corn: 3.10, beans: 5.80 }[product.toLowerCase()] || 3.00;\n\n      for (let i = days; i >= 0; i--) {\n        const date = new Date();\n        date.setDate(date.getDate() - i);\n        const variation = (Math.random() - 0.5) * 0.4; // ±20% variation\n        const price = Math.max(0.1, basePrice + variation);\n\n        historyData.push({\n          date: date.toISOString().split('T')[0],\n          price: Math.round(price * 100) / 100,\n          volume: Math.floor(Math.random() * 1000) + 100\n        });\n      }\n\n      return {\n        product,\n        region,\n        historyData,\n        isMock: true,\n        source: 'FALLBACK_MOCK:SIM'\n      };\n    }\n  }\n\n  async getVolatilityIndex(product, region) {\n    try {\n      // Attempt to fetch real SIM volatility data\n      const url = `${this.baseUrl}/volatilidad?producto=${encodeURIComponent(product)}&region=${encodeURIComponent(region)}`;\n\n      const data = await safeFetch(url, {}, { timeout: 10000, retries: 2 });\n\n      return {\n        product,\n        region,\n        volatilityIndex: data.indice_volatilidad || 0,\n        riskLevel: data.nivel_riesgo || 'medium',\n        isMock: false\n      };\n    } catch (error) {\n      console.log(`SIMIntegration: API failed for ${product} in ${region}: ${error && error.message}`);\n      if (!forceMocksEnabled()) {\n        throw new Error(`SIMIntegration failure: ${error && error.message ? error.message : String(error)}`);\n      }\n      const volatilities = {\n        'rice': 0.12,\n        'potatoes': 0.18,\n        'corn': 0.15,\n        'beans': 0.09\n      };\n\n      const volatility = volatilities[product.toLowerCase()] || 0.15;\n      const riskLevel = volatility > 0.15 ? 'high' : volatility > 0.10 ? 'medium' : 'low';\n\n      return {\n        product,\n        region,\n        volatilityIndex: volatility,\n        riskLevel,\n        isMock: true,\n        source: 'FALLBACK_MOCK:SIM'\n      };\n    }\n  }\n}\n\nexport default SIMIntegration;"],"mappings":"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","ignoreList":[]}