65987779d99c4327047542b0e2f18c9a
/* istanbul ignore next */
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var
/* istanbul ignore next */
_express = _interopRequireDefault(require("express"));
var
/* istanbul ignore next */
_agents = _interopRequireDefault(require("../agents.js"));
/* istanbul ignore next */ function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function cov_ymow93z8m() {
  var path = "/home/davicho/etherai-foresight-platform-main/server/src/routes/community-resilience.js";
  var hash = "291df8e55062939268546058bb52fa068cdb2021";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/davicho/etherai-foresight-platform-main/server/src/routes/community-resilience.js",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 31
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 2
        },
        end: {
          line: 23,
          column: 3
        }
      },
      "3": {
        start: {
          line: 9,
          column: 53
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "4": {
        start: {
          line: 10,
          column: 27
        },
        end: {
          line: 10,
          column: 80
        }
      },
      "5": {
        start: {
          line: 10,
          column: 57
        },
        end: {
          line: 10,
          column: 79
        }
      },
      "6": {
        start: {
          line: 12,
          column: 18
        },
        end: {
          line: 12,
          column: 63
        }
      },
      "7": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 87
        }
      },
      "8": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 19,
          column: 7
        }
      },
      "9": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 65
        }
      },
      "10": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 61
        }
      },
      "11": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 70,
          column: 3
        }
      },
      "12": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 69,
          column: 3
        }
      },
      "13": {
        start: {
          line: 29,
          column: 53
        },
        end: {
          line: 29,
          column: 62
        }
      },
      "14": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 30,
          column: 80
        }
      },
      "15": {
        start: {
          line: 30,
          column: 57
        },
        end: {
          line: 30,
          column: 79
        }
      },
      "16": {
        start: {
          line: 32,
          column: 18
        },
        end: {
          line: 32,
          column: 63
        }
      },
      "17": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 33,
          column: 89
        }
      },
      "18": {
        start: {
          line: 36,
          column: 26
        },
        end: {
          line: 58,
          column: 1
        }
      },
      "19": {
        start: {
          line: 44,
          column: 71
        },
        end: {
          line: 49,
          column: 1
        }
      },
      "20": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 65,
          column: 7
        }
      },
      "21": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 72
        }
      },
      "22": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 61
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 16
          },
          end: {
            line: 7,
            column: 17
          }
        },
        loc: {
          start: {
            line: 7,
            column: 36
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 52
          },
          end: {
            line: 10,
            column: 53
          }
        },
        loc: {
          start: {
            line: 10,
            column: 57
          },
          end: {
            line: 10,
            column: 79
          }
        },
        line: 10
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 22
          },
          end: {
            line: 27,
            column: 23
          }
        },
        loc: {
          start: {
            line: 27,
            column: 42
          },
          end: {
            line: 70,
            column: 1
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 52
          },
          end: {
            line: 30,
            column: 53
          }
        },
        loc: {
          start: {
            line: 30,
            column: 57
          },
          end: {
            line: 30,
            column: 79
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 44,
            column: 50
          },
          end: {
            line: 44,
            column: 51
          }
        },
        loc: {
          start: {
            line: 44,
            column: 71
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 44
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 12
          },
          end: {
            line: 9,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 24
          },
          end: {
            line: 9,
            column: 37
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 46
          },
          end: {
            line: 9,
            column: 48
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 29,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 29,
            column: 37
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 39
          },
          end: {
            line: 29,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 46
          },
          end: {
            line: 29,
            column: 48
          }
        }],
        line: 29
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "291df8e55062939268546058bb52fa068cdb2021"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ymow93z8m = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ymow93z8m();
const router =
/* istanbul ignore next */
(cov_ymow93z8m().s[0]++,
/* istanbul ignore next */
_express.
/* istanbul ignore next */
default.Router());

// GET /api/community-resilience - Get community resilience analysis
/* istanbul ignore next */
cov_ymow93z8m().s[1]++;
router.get('/', async (req, res) => {
  /* istanbul ignore next */
  cov_ymow93z8m().f[0]++;
  cov_ymow93z8m().s[2]++;
  try {
    const {
      countries =
      /* istanbul ignore next */
      (cov_ymow93z8m().b[0][0]++, 'COL,PER,ARG'),
      days =
      /* istanbul ignore next */
      (cov_ymow93z8m().b[1][0]++, 30)
    } =
    /* istanbul ignore next */
    (cov_ymow93z8m().s[3]++, req.query);
    const countriesArray =
    /* istanbul ignore next */
    (cov_ymow93z8m().s[4]++, countries.split(',').map(c => {
      /* istanbul ignore next */
      cov_ymow93z8m().f[1]++;
      cov_ymow93z8m().s[5]++;
      return c.trim().toUpperCase();
    }));
    const agent =
    /* istanbul ignore next */
    (cov_ymow93z8m().s[6]++, new
    /* istanbul ignore next */
    _agents.
    /* istanbul ignore next */
    default('CommunityResilienceAgent'));
    const result =
    /* istanbul ignore next */
    (cov_ymow93z8m().s[7]++, await agent.run({
      countries: countriesArray,
      days: parseInt(days)
    }));
    /* istanbul ignore next */
    cov_ymow93z8m().s[8]++;
    res.json({
      success: true,
      data: result,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_ymow93z8m().s[9]++;
    console.error('[CommunityResilience] Error:', error.message);
    /* istanbul ignore next */
    cov_ymow93z8m().s[10]++;
    res.status(500).json({
      error: 'Internal server error'
    });
  }
});

// GET /api/community-resilience/report - Generate and return resilience report
/* istanbul ignore next */
cov_ymow93z8m().s[11]++;
router.get('/report', async (req, res) => {
  /* istanbul ignore next */
  cov_ymow93z8m().f[2]++;
  cov_ymow93z8m().s[12]++;
  try {
    const {
      countries =
      /* istanbul ignore next */
      (cov_ymow93z8m().b[2][0]++, 'COL,PER,ARG'),
      days =
      /* istanbul ignore next */
      (cov_ymow93z8m().b[3][0]++, 30)
    } =
    /* istanbul ignore next */
    (cov_ymow93z8m().s[13]++, req.query);
    const countriesArray =
    /* istanbul ignore next */
    (cov_ymow93z8m().s[14]++, countries.split(',').map(c => {
      /* istanbul ignore next */
      cov_ymow93z8m().f[3]++;
      cov_ymow93z8m().s[15]++;
      return c.trim().toUpperCase();
    }));
    const agent =
    /* istanbul ignore next */
    (cov_ymow93z8m().s[16]++, new
    /* istanbul ignore next */
    _agents.
    /* istanbul ignore next */
    default('CommunityResilienceAgent'));
    const analysis =
    /* istanbul ignore next */
    (cov_ymow93z8m().s[17]++, await agent.run({
      countries: countriesArray,
      days: parseInt(days)
    }));

    // Generate report content
    const reportContent =
    /* istanbul ignore next */
    (cov_ymow93z8m().s[18]++, `# COMMUNITY_RESILIENCE_REPORT.md

## Análisis de Resiliencia Comunitaria en LATAM

### Timestamp
${new Date().toISOString()}

### Análisis por País
${Object.entries(analysis.resilienceAnalysis).map(([country, data]) => {
      /* istanbul ignore next */
      cov_ymow93z8m().f[4]++;
      cov_ymow93z8m().s[19]++;
      return `#### ${country}
- Eventos Sociales: ${data.socialEvents}
- Puntaje de Resiliencia: ${data.resilienceScore.toFixed(1)}/100
- Recomendaciones: ${data.recommendations.join(', ')}
- Período: ${data.period.startDate} a ${data.period.endDate}
`;
    }).join('\n')}

### Evaluación Global
- Resiliencia Promedio: ${analysis.globalResilienceAssessment.averageResilience.toFixed(1)}/100
- Países con Baja Resiliencia: ${analysis.globalResilienceAssessment.lowResilienceCountries}
- Evaluación: ${analysis.globalResilienceAssessment.assessment}
- Recomendaciones Globales: ${analysis.globalResilienceAssessment.globalRecommendations.join(', ')}

Generado por CommunityResilienceAgent - Praevisio AI
`);
    /* istanbul ignore next */
    cov_ymow93z8m().s[20]++;
    res.json({
      success: true,
      report: reportContent,
      data: analysis,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_ymow93z8m().s[21]++;
    console.error('[CommunityResilience Report] Error:', error.message);
    /* istanbul ignore next */
    cov_ymow93z8m().s[22]++;
    res.status(500).json({
      error: 'Internal server error'
    });
  }
});
/* istanbul ignore next */
var _default = exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,