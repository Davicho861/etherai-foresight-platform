{"version":3,"names":["server","require","global","__TEST_STATE__","mocks","cache","Map","context","initialized","DEFAULT_MOCKS","source","error","__TEST_UTILS__","resetState","clear","registerMock","service","mock","getMock","clearCache","beforeAll","listen","onUnhandledRequest","quiet","realFetch","fetch","jest","fn","__realFetch","mockResolvedValue","forwarder","args","console","Promise","reject","mockFetch","afterEach","resetHandlers","clearAllTimers","clearAllMocks","afterAll","close","__restoreConsole"],"sources":["jest.setup.backend.js"],"sourcesContent":["/**\n * Configuración avanzada de Jest para el backend\n * - Gestión de estado global\n * - Mocks automáticos\n * - Limpieza de estado\n * - Manejo de errores robusto\n */\n\nconst { server } = require('./__tests__/mocks/server.js');\n\n// Estado global para tests\nglobal.__TEST_STATE__ = {\n  mocks: {},\n  cache: new Map(),\n  context: {},\n  initialized: false\n};\n\n// Mocks predefinidos para servicios comunes\nconst DEFAULT_MOCKS = {\n  'PandemicsService': {\n    source: 'PandemicsService - Error Fallback',\n    error: 'Service unavailable'\n  },\n  'GeopoliticalInstabilityService': {\n    source: 'GeopoliticalInstabilityService - Error Fallback',\n    error: 'Service unavailable'\n  },\n  'EconomicInstabilityService': {\n    source: 'EconomicInstabilityService - Error Fallback',\n    error: 'Service unavailable'\n  },\n  'CybersecurityService': {\n    source: 'CybersecurityService - Error Fallback',\n    error: 'Service unavailable'\n  }\n};\n\n// Utilidades de testing\nglobal.__TEST_UTILS__ = {\n  // Resetear el estado global\n  resetState: () => {\n    global.__TEST_STATE__.mocks = { ...DEFAULT_MOCKS };\n    global.__TEST_STATE__.cache.clear();\n    global.__TEST_STATE__.context = {};\n  },\n  \n  // Registrar mock personalizado\n  registerMock: (service, mock) => {\n    global.__TEST_STATE__.mocks[service] = mock;\n  },\n  \n  // Obtener mock registrado\n  getMock: (service) => {\n    return global.__TEST_STATE__.mocks[service] || DEFAULT_MOCKS[service];\n  },\n  \n  // Limpiar cache\n  clearCache: () => {\n    global.__TEST_STATE__.cache.clear();\n  }\n};\n\n// Hooks globales\nbeforeAll(async () => {\n  // Inicializar estado global\n  if (!global.__TEST_STATE__.initialized) {\n    global.__TEST_UTILS__.resetState();\n    global.__TEST_STATE__.initialized = true;\n  }\n\n  // Configurar MSW\n  if (server && typeof server.listen === 'function') {\n    server.listen({ \n      onUnhandledRequest: 'warn',\n      quiet: true\n    });\n\n    // Configurar fetch mock\n    try {\n      const realFetch = global.fetch;\n      if (typeof jest !== 'undefined' && typeof jest.fn === 'function') {\n        global.__realFetch = realFetch;\n        \n        if (!realFetch || typeof realFetch.mockResolvedValue === 'undefined') {\n          const forwarder = jest.fn((...args) => {\n            try {\n              return global.__realFetch(...args);\n            } catch (error) {\n              console.error('Fetch error:', error);\n              return Promise.reject(error);\n            }\n          });\n          global.fetch = forwarder;\n          global.mockFetch = forwarder;\n        } else {\n          global.mockFetch = global.fetch;\n        }\n      }\n    } catch (error) {\n      console.error('Error configuring fetch mock:', error);\n    }\n  }\n});\n\n// Limpieza entre tests\nafterEach(async () => {\n  // Resetear MSW\n  if (server) {\n    server.resetHandlers();\n  }\n  \n  // Limpiar cache y mocks\n  global.__TEST_UTILS__.clearCache();\n  \n  // Restaurar mocks por defecto\n  global.__TEST_STATE__.mocks = { ...DEFAULT_MOCKS };\n  \n  // Limpiar contexto\n  global.__TEST_STATE__.context = {};\n  \n  // Limpiar timeouts y timers\n  jest.clearAllTimers();\n  \n  // Restaurar mocks de Jest\n  jest.clearAllMocks();\n});\n\n// Limpieza final\nafterAll(async () => {\n  if (server) {\n    try {\n      await server.close();\n    } catch (error) {\n      console.error('Error closing MSW server:', error);\n    }\n  }\n  \n  // Limpiar estado global\n  global.__TEST_STATE__ = {\n    mocks: {},\n    cache: new Map(),\n    context: {},\n    initialized: false\n  };\n  \n  // Restaurar console\n  try { \n    if (typeof __restoreConsole === 'function') {\n      __restoreConsole();\n    }\n  } catch (error) {\n    console.error('Error restoring console:', error);\n  }\n});\n"],"mappings":"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","ignoreList":[]}