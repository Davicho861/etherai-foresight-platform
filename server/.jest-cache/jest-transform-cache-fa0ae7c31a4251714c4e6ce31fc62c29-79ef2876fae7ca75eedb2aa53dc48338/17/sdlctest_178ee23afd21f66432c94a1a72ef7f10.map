{"version":3,"names":["_getJestObj","mock","execSync","jest","fn","_supertest","_interopRequireDefault","require","_express","_sdlc","e","__esModule","default","app","express","use","json","sdlcRouter","describe","it","response","request","get","expect","body","toHaveProperty","data"],"sources":["sdlc.test.js"],"sourcesContent":["import request from 'supertest';\nimport express from 'express';\nimport sdlcRouter from '../../src/routes/sdlc.js';\n\n// Mock execSync to avoid actual Git commands in tests\njest.mock('child_process', () => ({\n  execSync: jest.fn(() => '12\\n')\n}));\n\nconst app = express();\napp.use(express.json());\napp.use('/api/sdlc', sdlcRouter);\n\ndescribe('SDLC Routes', () => {\n  describe('GET /api/sdlc/planning', () => {\n    it('should return planning metrics', async () => {\n      const response = await request(app)\n        .get('/api/sdlc/planning')\n        .expect(200);\n\n      expect(response.body).toHaveProperty('success', true);\n      expect(response.body).toHaveProperty('data');\n      expect(response.body.data).toHaveProperty('backlogItems');\n      expect(response.body.data).toHaveProperty('priorityScore');\n      expect(response.body.data).toHaveProperty('projectedARR');\n      expect(response.body.data).toHaveProperty('breakEvenMonths');\n      expect(response.body.data).toHaveProperty('riskAnalysis');\n      expect(response.body.data).toHaveProperty('timeline');\n    });\n  });\n\n  describe('GET /api/sdlc/design', () => {\n    it('should return design metrics', async () => {\n      const response = await request(app)\n        .get('/api/sdlc/design')\n        .expect(200);\n\n      expect(response.body).toHaveProperty('success', true);\n      expect(response.body).toHaveProperty('data');\n      expect(response.body.data).toHaveProperty('complexityScore');\n      expect(response.body.data).toHaveProperty('technicalDebt');\n      expect(response.body.data).toHaveProperty('securityScore');\n      expect(response.body.data).toHaveProperty('responseTime');\n      expect(response.body.data).toHaveProperty('architectureMap');\n      expect(response.body.data).toHaveProperty('securityProfile');\n    });\n  });\n\n  describe('GET /api/sdlc/implementation', () => {\n    it('should return implementation metrics', async () => {\n      const response = await request(app)\n        .get('/api/sdlc/implementation')\n        .expect(200);\n\n      expect(response.body).toHaveProperty('success', true);\n      expect(response.body).toHaveProperty('data');\n      expect(response.body.data).toHaveProperty('commitsLast24h');\n      expect(response.body.data).toHaveProperty('activeBranches');\n      expect(response.body.data).toHaveProperty('linesAdded');\n      expect(response.body.data).toHaveProperty('contributors');\n      expect(response.body.data).toHaveProperty('velocity');\n      expect(response.body.data).toHaveProperty('burndownRate');\n      expect(response.body.data).toHaveProperty('codeQuality');\n      expect(response.body.data).toHaveProperty('teamMetrics');\n    });\n  });\n\n  describe('GET /api/sdlc/testing', () => {\n    it('should return testing metrics', async () => {\n      const response = await request(app)\n        .get('/api/sdlc/testing')\n        .expect(200);\n\n      expect(response.body).toHaveProperty('success', true);\n      expect(response.body).toHaveProperty('data');\n      expect(response.body.data).toHaveProperty('testCoverage');\n      expect(response.body.data).toHaveProperty('totalTests');\n      expect(response.body.data).toHaveProperty('passingTests');\n      expect(response.body.data).toHaveProperty('failingTests');\n      expect(response.body.data).toHaveProperty('flakyTests');\n      expect(response.body.data).toHaveProperty('testExecutionTime');\n      expect(response.body.data).toHaveProperty('coverageByComponent');\n      expect(response.body.data).toHaveProperty('testTrends');\n      expect(response.body.data).toHaveProperty('automationStatus');\n    });\n  });\n\n  describe('GET /api/sdlc/deployment', () => {\n    it('should return deployment metrics', async () => {\n      const response = await request(app)\n        .get('/api/sdlc/deployment')\n        .expect(200);\n\n      expect(response.body).toHaveProperty('success', true);\n      expect(response.body).toHaveProperty('data');\n      expect(response.body.data).toHaveProperty('deploymentFrequency');\n      expect(response.body.data).toHaveProperty('deploymentTime');\n      expect(response.body.data).toHaveProperty('failureRate');\n      expect(response.body.data).toHaveProperty('mttr');\n      expect(response.body.data).toHaveProperty('availability');\n      expect(response.body.data).toHaveProperty('pipelineStatus');\n      expect(response.body.data).toHaveProperty('recentDeployments');\n      expect(response.body.data).toHaveProperty('infrastructure');\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}