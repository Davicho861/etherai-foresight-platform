{"version":3,"names":["_express","data","_interopRequireDefault","require","_SeismicIntegration","_GeophysicalRiskAgent","e","__esModule","default","router","express","Router","get","req","res","rawData","getSeismicData","processedData","analyzeSeismicActivity","json","error","console","status","events","eventCount","length","maxMagnitude","Math","max","map","magnitude","overallRisk","highRiskZones","filter","place","_default","exports"],"sources":["seismic.js"],"sourcesContent":["import express from 'express';\nimport { getSeismicData } from '../services/SeismicIntegration.js';\nimport { analyzeSeismicActivity } from '../agents/GeophysicalRiskAgent.js';\n\nconst router = express.Router();\n\n/**\n * @route GET /api/seismic/activity\n * @description Provides a stream of processed real-time seismic activity.\n * @access Protected\n */\nrouter.get('/activity', async (req, res) => {\n  try {\n    const rawData = await getSeismicData();\n    const processedData = analyzeSeismicActivity(rawData);\n    res.json(processedData);\n  } catch (error) {\n    console.error('Error in seismic activity route:', error);\n    res.status(500).json({ error: 'Failed to retrieve seismic activity.' });\n  }\n});\n\n/**\n * @route GET /api/seismic/risk\n * @description Provides geophysical risk assessment based on seismic activity.\n * @access Protected\n */\nrouter.get('/risk', async (req, res) => {\n  try {\n    const rawData = await getSeismicData();\n    const events = analyzeSeismicActivity(rawData);\n    const eventCount = events.length;\n    const maxMagnitude = eventCount > 0 ? Math.max(...events.map(e => e.magnitude)) : 0;\n    const overallRisk = eventCount > 0 ? (maxMagnitude * eventCount) / 10 : 0; // Simple risk calculation\n    const highRiskZones = events.filter(e => e.magnitude >= 5.0).map(e => e.place);\n\n    res.json({\n      overallRisk,\n      eventCount,\n      maxMagnitude,\n      highRiskZones\n    });\n  } catch (error) {\n    console.error('Error in seismic risk route:', error);\n    res.status(500).json({ error: 'Failed to retrieve seismic risk assessment.' });\n  }\n});\n\nexport default router;\n"],"mappings":";;;;;;AAAA,SAAAA,SAAA;EAAA,MAAAC,IAAA,GAAAC,sBAAA,CAAAC,OAAA;EAAAH,QAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,IAAAG,mBAAA,GAAAD,OAAA;AACA,IAAAE,qBAAA,GAAAF,OAAA;AAA2E,SAAAD,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAE3E,MAAMG,MAAM,GAAGC,kBAAO,CAACC,MAAM,CAAC,CAAC;;AAE/B;AACA;AACA;AACA;AACA;AACAF,MAAM,CAACG,GAAG,CAAC,WAAW,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC1C,IAAI;IACF,MAAMC,OAAO,GAAG,MAAM,IAAAC,kCAAc,EAAC,CAAC;IACtC,MAAMC,aAAa,GAAG,IAAAC,4CAAsB,EAACH,OAAO,CAAC;IACrDD,GAAG,CAACK,IAAI,CAACF,aAAa,CAAC;EACzB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxDN,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACH,IAAI,CAAC;MAAEC,KAAK,EAAE;IAAuC,CAAC,CAAC;EACzE;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACAX,MAAM,CAACG,GAAG,CAAC,OAAO,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACtC,IAAI;IACF,MAAMC,OAAO,GAAG,MAAM,IAAAC,kCAAc,EAAC,CAAC;IACtC,MAAMO,MAAM,GAAG,IAAAL,4CAAsB,EAACH,OAAO,CAAC;IAC9C,MAAMS,UAAU,GAAGD,MAAM,CAACE,MAAM;IAChC,MAAMC,YAAY,GAAGF,UAAU,GAAG,CAAC,GAAGG,IAAI,CAACC,GAAG,CAAC,GAAGL,MAAM,CAACM,GAAG,CAACvB,CAAC,IAAIA,CAAC,CAACwB,SAAS,CAAC,CAAC,GAAG,CAAC;IACnF,MAAMC,WAAW,GAAGP,UAAU,GAAG,CAAC,GAAIE,YAAY,GAAGF,UAAU,GAAI,EAAE,GAAG,CAAC,CAAC,CAAC;IAC3E,MAAMQ,aAAa,GAAGT,MAAM,CAACU,MAAM,CAAC3B,CAAC,IAAIA,CAAC,CAACwB,SAAS,IAAI,GAAG,CAAC,CAACD,GAAG,CAACvB,CAAC,IAAIA,CAAC,CAAC4B,KAAK,CAAC;IAE9EpB,GAAG,CAACK,IAAI,CAAC;MACPY,WAAW;MACXP,UAAU;MACVE,YAAY;MACZM;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpDN,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACH,IAAI,CAAC;MAAEC,KAAK,EAAE;IAA8C,CAAC,CAAC;EAChF;AACF,CAAC,CAAC;AAAC,IAAAe,QAAA,GAAAC,OAAA,CAAA5B,OAAA,GAEYC,MAAM","ignoreList":[]}