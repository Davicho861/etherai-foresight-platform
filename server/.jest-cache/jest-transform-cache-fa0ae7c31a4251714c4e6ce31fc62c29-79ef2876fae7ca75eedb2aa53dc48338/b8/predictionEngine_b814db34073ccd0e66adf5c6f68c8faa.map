{"version":3,"names":["_axios","_interopRequireDefault","require","_ethicalVectorModule","_cache","e","__esModule","default","cov_1lt2cdugjf","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","_interopRequireWildcard","t","WeakMap","r","n","o","i","__proto__","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","generativeAIService","getGenerativeAIService","module","Promise","resolve","then","RESOLVED_PORT","process","env","PORT","Number","NATIVE_DEV_MODE","PRAEVISIO_API_BASE_URL","AUTH_TOKEN","PRAEVISIO_BEARER_TOKEN","predictionState","lastUpdated","riskIndices","famineRisk","value","source","confidence","geophysicalRisk","significantEvents","supplyChainRisk","affectedRegions","climateExtremesRisk","extremeEvents","affectedCountries","communityResilienceRisk","lowResilienceCountries","averageResilience","cryptoVolatilityRisk","volatilityIndex","riskAssessment","marketData","biodiversityRisk","riskIndex","regions","pandemicsRisk","riskLevel","cybersecurityRisk","sectors","economicInstabilityRisk","geopoliticalInstabilityRisk","multiDomainRiskIndex","ethicalAssessment","vector","components","humanImpact","environmentalSustainability","socialEquity","overallScore","assessment","timestamp","generativeAnalysis","narrative","correlations","lastGenerated","fetchInternalData","endpoint","cacheKey","cached","cache","console","log","response","axios","headers","data","error","stack","message","String","Error","updateFamineRiskIndex","foodSecurityData","warn","values","filter","item","map","length","averageUndernourishment","reduce","sum","val","riskValue","Math","min","parseFloat","toFixed","countries","keys","updateGeophysicalRiskIndex","seismicEvents","Array","isArray","maxMagnitude","max","magnitude","updateSupplyChainRiskIndex","event","location","place","coordinates","potentialImpact","avgMagnitude","region","eventCountFactor","magnitudeFactor","updateClimateExtremesRiskIndex","climateData","totalExtremeEvents","highRiskCountries","mediumRiskCountries","updateCommunityResilienceRiskIndex","resilienceData","resilienceAnalysis","globalResilienceAssessment","entries","country","resilienceScore","join","updateCryptoVolatilityRiskIndex","cryptoData","analysis","totalCryptos","updateBiodiversityRiskIndex","biodiversityData","bioData","totalRegions","updatePandemicsRiskIndex","pandemicsData","updateCybersecurityRiskIndex","cybersecurityData","updateEconomicInstabilityRiskIndex","economicData","updateGeopoliticalInstabilityRiskIndex","geopoliticalData","updateMultiDomainRiskIndex","famineWeight","geoWeight","supplyChainWeight","climateWeight","resilienceWeight","cryptoWeight","biodiversityWeight","pandemicsWeight","cybersecurityWeight","economicInstabilityWeight","geopoliticalInstabilityWeight","famineValue","geoValue","supplyChainValue","climateValue","resilienceValue","cryptoValue","biodiversityValue","pandemicsValue","cybersecurityValue","economicInstabilityValue","geopoliticalInstabilityValue","totalRisk","weightedConfidence","updateGenerativeAnalysis","service","currentRiskData","generatePredictiveNarrative","focusAreas","timeHorizon","detailLevel","language","analyzeRiskCorrelations","Date","toISOString","updateEthicalAssessment","ethicalVector","calculateEthicalVector","getRiskIndices","runProphecyCycle","all","catch"],"sources":["predictionEngine.js"],"sourcesContent":["/**\n * @fileoverview Prediction Engine for Global Risk Assessment.\n * This service consumes integrated data sources to generate and update predictive risk indices.\n * It represents the \"Perpetual Prophecy Flow\" of the Aion directive.\n */\n\nimport axios from 'axios';\nimport { calculateEthicalVector } from './ethicalVectorModule.js';\nimport cache from '../cache.js';\n\n// Lazy load generative AI service to avoid circular dependencies\nlet generativeAIService = null;\nconst getGenerativeAIService = async () => {\n  if (!generativeAIService) {\n    const module = await import('./generativeAIService.js');\n    generativeAIService = module.default || module;\n  }\n  return generativeAIService;\n};\n\n// This would be stored in a more secure and dynamic configuration in a real system.\n// Resolve the internal API base URL to the actual running server port.\n// Default to PORT env or 4000 (the server listens on 4000 by default for native/dev runs).\nconst RESOLVED_PORT = process.env.PORT ? Number(process.env.PORT) : (process.env.NATIVE_DEV_MODE === 'true' ? 4003 : 4000);\nconst PRAEVISIO_API_BASE_URL = `http://localhost:${RESOLVED_PORT}`;\nconst AUTH_TOKEN = process.env.PRAEVISIO_BEARER_TOKEN || 'demo-token';\n\nconst predictionState = {\n  lastUpdated: null,\n  riskIndices: {\n    famineRisk: {\n      value: null,\n      source: null,\n      confidence: 0.0,\n    },\n    geophysicalRisk: {\n      value: null,\n      source: 'USGS',\n      confidence: 0.0,\n      significantEvents: [],\n    },\n    supplyChainRisk: {\n      value: null,\n      source: 'USGS-Seismic',\n      confidence: 0.0,\n      affectedRegions: [],\n    },\n    climateExtremesRisk: {\n      value: null,\n      source: 'NASA-POWER',\n      confidence: 0.0,\n      extremeEvents: [],\n      affectedCountries: [],\n    },\n    communityResilienceRisk: {\n      value: null,\n      source: 'CommunityResilienceAgent',\n      confidence: 0.0,\n      lowResilienceCountries: [],\n      averageResilience: 0,\n    },\n    cryptoVolatilityRisk: {\n      value: null,\n      source: 'CryptoService',\n      confidence: 0.0,\n      volatilityIndex: 0,\n      riskAssessment: 'Low',\n      marketData: [],\n    },\n    biodiversityRisk: {\n      value: null,\n      source: 'BiodiversityService',\n      confidence: 0.0,\n      riskIndex: 0,\n      riskAssessment: 'Low',\n      regions: [],\n    },\n    pandemicsRisk: {\n      value: null,\n      source: 'PandemicsService',\n      confidence: 0.0,\n      riskIndex: 0,\n      riskLevel: 'Low',\n      regions: [],\n    },\n    cybersecurityRisk: {\n      value: null,\n      source: 'CybersecurityService',\n      confidence: 0.0,\n      riskIndex: 0,\n      riskLevel: 'Low',\n      sectors: [],\n    },\n    economicInstabilityRisk: {\n      value: null,\n      source: 'EconomicInstabilityService',\n      confidence: 0.0,\n      riskIndex: 0,\n      riskLevel: 'Low',\n      regions: [],\n    },\n    geopoliticalInstabilityRisk: {\n      value: null,\n      source: 'GeopoliticalInstabilityService',\n      confidence: 0.0,\n      riskIndex: 0,\n      riskLevel: 'Low',\n      regions: [],\n    },\n  },\n  multiDomainRiskIndex: {\n    value: null,\n    confidence: 0.0,\n  },\n  ethicalAssessment: {\n    vector: [0, 0, 0],\n    components: {\n      humanImpact: 0,\n      environmentalSustainability: 0,\n      socialEquity: 0,\n    },\n    overallScore: 0,\n    assessment: 'Low Ethical Concern',\n    timestamp: null,\n  },\n  generativeAnalysis: {\n    narrative: null,\n    correlations: null,\n    lastGenerated: null,\n    confidence: 0.0,\n  },\n};\n\n/**\n * Fetches data from a Praevisio internal API endpoint with caching.\n * @param {string} endpoint The API endpoint to fetch data from.\n * @returns {Promise<object>} The data from the endpoint.\n */\nasync function fetchInternalData(endpoint) {\n  const cacheKey = `internal_${endpoint}`;\n  const cached = cache.get(cacheKey);\n  if (cached) {\n    console.log(`[PredictionEngine] Using cached data for ${endpoint}`);\n    return cached;\n  }\n\n\n  try {\n    const response = await axios.get(`${PRAEVISIO_API_BASE_URL}${endpoint}`, {\n      headers: { 'Authorization': `Bearer ${AUTH_TOKEN}` },\n    });\n    const data = response.data.data || response.data;\n    // Cache for 5 minutes\n    cache.set(cacheKey, data, 5 * 60 * 1000);\n    return data;\n  } catch (error) {\n    console.error(`[PredictionEngine] Failed to fetch internal data from ${endpoint}:`, error && error.stack ? error.stack : (error && error.message) || String(error));\n    throw new Error('Internal data source unavailable.');\n  }\n}\n\n/**\n * Updates the Famine Risk Index based on the latest food security data.\n */\nasync function updateFamineRiskIndex() {\n  console.log('[PredictionEngine] Updating Famine Risk Index...');\n  try {\n    const foodSecurityData = await fetchInternalData('/api/global-risk/food-security');\n\n    if (!foodSecurityData || !foodSecurityData.data) {\n      console.warn('[PredictionEngine] Invalid food security data received. Skipping update.');\n      return;\n    }\n\n  // Calculate risk based on prevalence of undernourishment\n  // Higher undernourishment = higher famine risk\n  const values = Object.values(foodSecurityData.data).filter(item => item.value !== null && !item.error).map(item => item.value);\n  if (values.length === 0) {\n    console.error('[PredictionEngine] No valid undernourishment data available.');\n    return;\n  }\n\n  const averageUndernourishment = values.reduce((sum, val) => sum + val, 0) / values.length;\n  // Risk scales with undernourishment: 0-10% = low risk (0-20), 10-20% = medium (20-50), >20% = high (50-100)\n  let riskValue;\n  if (averageUndernourishment <= 10) {\n    riskValue = (averageUndernourishment / 10) * 20;\n  } else if (averageUndernourishment <= 20) {\n    riskValue = 20 + ((averageUndernourishment - 10) / 10) * 30;\n  } else {\n    riskValue = 50 + ((averageUndernourishment - 20) / 10) * 50;\n  }\n  riskValue = Math.min(100, parseFloat(riskValue.toFixed(2)));\n\n  predictionState.riskIndices.famineRisk = {\n    value: riskValue,\n    source: foodSecurityData.source,\n    confidence: 0.85,\n    averageUndernourishment: averageUndernourishment,\n    countries: Object.keys(foodSecurityData.data)\n  };\n  console.log(`[PredictionEngine] Famine Risk Index updated to ${riskValue} based on average undernourishment of ${averageUndernourishment.toFixed(2)}%.`);\n  } catch (error) {\n    console.warn('[PredictionEngine] Error updating Famine Risk Index:', error.message);\n  }\n}\n\n/**\n * Updates the Geophysical Risk Index based on the latest seismic activity.\n */\nasync function updateGeophysicalRiskIndex() {\n  console.log('[PredictionEngine] Updating Geophysical Risk Index...');\n  try {\n    const seismicEvents = await fetchInternalData('/api/seismic/activity');\n\n    if (!Array.isArray(seismicEvents)) {\n      console.warn('[PredictionEngine] Invalid seismic data received. Skipping update.');\n      return;\n    }\n\n  predictionState.riskIndices.geophysicalRisk.significantEvents = seismicEvents;\n\n  if (seismicEvents.length === 0) {\n    predictionState.riskIndices.geophysicalRisk.value = 0;\n    predictionState.riskIndices.geophysicalRisk.confidence = 0.95; // High confidence in no risk\n    console.log('[PredictionEngine] No significant seismic events detected. Geophysical Risk is 0.');\n    return;\n  }\n\n  // Simplified risk: scale of 0-100 based on the max magnitude of the day.\n  // A magnitude of 8.0 or higher is considered catastrophic (100).\n  const maxMagnitude = Math.max(...seismicEvents.map(e => e.magnitude));\n  const riskValue = Math.min(100, parseFloat(((maxMagnitude / 8.0) * 100).toFixed(2)));\n\n  predictionState.riskIndices.geophysicalRisk.value = riskValue;\n  predictionState.riskIndices.geophysicalRisk.confidence = 0.90; // Static confidence\n\n  console.log(`[PredictionEngine] Geophysical Risk Index updated to ${riskValue} based on max magnitude of ${maxMagnitude}.`);\n  } catch (error) {\n    console.warn('[PredictionEngine] Error updating Geophysical Risk Index:', error.message);\n  }\n}\n\n/**\n * Updates the Supply Chain Risk Index based on seismic activity that could disrupt logistics.\n */\nasync function updateSupplyChainRiskIndex() {\n  console.log('[PredictionEngine] Updating Supply Chain Risk Index...');\n  try {\n    const seismicEvents = await fetchInternalData('/api/seismic/activity');\n\n    if (!Array.isArray(seismicEvents)) {\n      console.warn('[PredictionEngine] Invalid seismic data received for supply chain analysis. Skipping update.');\n      return;\n    }\n\n  if (seismicEvents.length === 0) {\n    predictionState.riskIndices.supplyChainRisk.value = 0;\n    predictionState.riskIndices.supplyChainRisk.confidence = 0.95;\n    predictionState.riskIndices.supplyChainRisk.affectedRegions = [];\n    console.log('[PredictionEngine] No significant seismic events detected. Supply Chain Risk is 0.');\n    return;\n  }\n\n  // Identify regions with significant seismic activity that could affect supply chains\n  const affectedRegions = seismicEvents\n    .filter(event => event.magnitude >= 6.0) // Events >= 6.0 magnitude can disrupt logistics\n    .map(event => ({\n      location: event.place,\n      magnitude: event.magnitude,\n      coordinates: event.coordinates,\n      potentialImpact: event.magnitude >= 7.0 ? 'High' : 'Medium'\n    }));\n\n  // Calculate risk based on number and severity of events\n  let riskValue = 0;\n  if (affectedRegions.length > 0) {\n    const avgMagnitude = affectedRegions.reduce((sum, region) => sum + region.magnitude, 0) / affectedRegions.length;\n    const eventCountFactor = Math.min(affectedRegions.length * 10, 50); // Up to 50 points for multiple events\n    const magnitudeFactor = Math.min((avgMagnitude - 6.0) * 25, 50); // Scale from 6.0+\n    riskValue = Math.min(100, eventCountFactor + magnitudeFactor);\n  }\n\n  predictionState.riskIndices.supplyChainRisk.value = riskValue;\n  predictionState.riskIndices.supplyChainRisk.confidence = 0.88;\n  predictionState.riskIndices.supplyChainRisk.affectedRegions = affectedRegions;\n\n  console.log(`[PredictionEngine] Supply Chain Risk Index updated to ${riskValue} based on ${affectedRegions.length} significant seismic events.`);\n  } catch (error) {\n    console.warn('[PredictionEngine] Error updating Supply Chain Risk Index:', error.message);\n  }\n}\n\n/**\n * Updates the Climate Extremes Risk Index based on extreme weather events.\n */\nasync function updateClimateExtremesRiskIndex() {\n  console.log('[PredictionEngine] Updating Climate Extremes Risk Index...');\n  try {\n    const climateData = await fetchInternalData('/api/global-risk/climate-extremes');\n\n    if (!climateData || !climateData.data || !Array.isArray(climateData.data)) {\n      console.warn('[PredictionEngine] Invalid climate extremes data received. Skipping update.');\n      return;\n    }\n\n  const data = climateData.data;\n  const extremeEvents = data.filter(item => item.extremeEvents > 0);\n  const affectedCountries = data.filter(item => item.riskLevel === 'high' || item.riskLevel === 'medium');\n\n  // Calculate summary\n  const totalExtremeEvents = data.reduce((sum, item) => sum + (item.extremeEvents || 0), 0);\n  const highRiskCountries = data.filter(item => item.riskLevel === 'high').length;\n  const mediumRiskCountries = data.filter(item => item.riskLevel === 'medium').length;\n\n  // Calculate risk based on extreme events and high-risk countries\n  let riskValue = 0;\n  if (totalExtremeEvents > 0) {\n    riskValue += Math.min(totalExtremeEvents * 5, 50); // Up to 50 points for extreme events\n  }\n  if (highRiskCountries > 0) {\n    riskValue += Math.min(highRiskCountries * 15, 50); // Up to 50 points for high-risk countries\n  }\n  if (mediumRiskCountries > 0) {\n    riskValue += Math.min(mediumRiskCountries * 5, 25); // Up to 25 points for medium-risk countries\n  }\n\n  riskValue = Math.min(100, riskValue);\n\n  predictionState.riskIndices.climateExtremesRisk.value = riskValue;\n  predictionState.riskIndices.climateExtremesRisk.confidence = 0.85;\n  predictionState.riskIndices.climateExtremesRisk.extremeEvents = extremeEvents;\n  predictionState.riskIndices.climateExtremesRisk.affectedCountries = affectedCountries;\n\n  console.log(`[PredictionEngine] Climate Extremes Risk Index updated to ${riskValue} based on ${totalExtremeEvents} extreme events, ${highRiskCountries} high-risk countries, and ${mediumRiskCountries} medium-risk countries.`);\n  } catch (error) {\n    console.warn('[PredictionEngine] Error updating Climate Extremes Risk Index:', error.message);\n  }\n}\n\n/**\n   * Updates the Community Resilience Risk Index based on community resilience data.\n   */\nasync function updateCommunityResilienceRiskIndex() {\n  console.log('[PredictionEngine] Updating Community Resilience Risk Index...');\n  try {\n    const resilienceData = await fetchInternalData('/api/global-risk/community-resilience');\n\n    if (!resilienceData || !resilienceData.resilienceAnalysis) {\n      console.warn('[PredictionEngine] Invalid community resilience data received. Skipping update.');\n      return;\n    }\n\n  const { globalResilienceAssessment, resilienceAnalysis } = resilienceData;\n\n  // Calculate risk: lower resilience = higher risk\n  // Risk is 100 - average resilience score\n  const averageResilience = globalResilienceAssessment.averageResilience || 0;\n  const riskValue = Math.max(0, 100 - averageResilience);\n\n  // Identify countries with low resilience (below 60)\n  const lowResilienceCountries = Object.entries(resilienceAnalysis)\n    .filter(([country, data]) => data.resilienceScore < 60)\n    .map(([country]) => country);\n\n  predictionState.riskIndices.communityResilienceRisk.value = riskValue;\n  predictionState.riskIndices.communityResilienceRisk.confidence = 0.80;\n  predictionState.riskIndices.communityResilienceRisk.lowResilienceCountries = lowResilienceCountries;\n  predictionState.riskIndices.communityResilienceRisk.averageResilience = averageResilience;\n\n  console.log(`[PredictionEngine] Community Resilience Risk Index updated to ${riskValue} based on average resilience of ${averageResilience.toFixed(1)}. Low resilience countries: ${lowResilienceCountries.join(', ')}`);\n  } catch (error) {\n    console.warn('[PredictionEngine] Error updating Community Resilience Risk Index:', error.message);\n  }\n}\n\n/**\n   * Updates the Crypto Volatility Risk Index based on cryptocurrency market data.\n   */\nasync function updateCryptoVolatilityRiskIndex() {\n  console.log('[PredictionEngine] Updating Crypto Volatility Risk Index...');\n  try {\n    const cryptoData = await fetchInternalData('/api/global-risk/crypto-volatility');\n\n    if (!cryptoData || cryptoData.volatilityIndex === undefined) {\n      console.warn('[PredictionEngine] Invalid crypto volatility data received. Skipping update.');\n      return;\n    }\n\n  const { volatilityIndex, analysis, marketData } = cryptoData;\n\n  // The volatility index is already calculated by the service (0-100 scale)\n  // We use it directly as the risk value\n  const riskValue = Math.min(100, Math.max(0, volatilityIndex));\n\n  predictionState.riskIndices.cryptoVolatilityRisk.value = riskValue;\n  predictionState.riskIndices.cryptoVolatilityRisk.confidence = 0.85;\n  predictionState.riskIndices.cryptoVolatilityRisk.volatilityIndex = volatilityIndex;\n  predictionState.riskIndices.cryptoVolatilityRisk.riskAssessment = analysis?.riskAssessment || 'Unknown';\n  predictionState.riskIndices.cryptoVolatilityRisk.marketData = marketData || [];\n\n  console.log(`[PredictionEngine] Crypto Volatility Risk Index updated to ${riskValue} (${analysis?.riskAssessment || 'Unknown'} risk) based on ${analysis?.totalCryptos || 0} cryptocurrencies.`);\n  } catch (error) {\n    console.warn('[PredictionEngine] Error updating Crypto Volatility Risk Index:', error.message);\n  }\n}\n\n/**\n   * Updates the Biodiversity Risk Index based on global biodiversity data.\n   */\nasync function updateBiodiversityRiskIndex() {\n  console.log('[PredictionEngine] Updating Biodiversity Risk Index...');\n  try {\n    const biodiversityData = await fetchInternalData('/api/global-risk/biodiversity');\n\n    if (!biodiversityData || biodiversityData.riskIndex === undefined) {\n      console.warn('[PredictionEngine] Invalid biodiversity data received. Skipping update.');\n      return;\n    }\n\n  const { riskIndex, analysis, biodiversityData: bioData } = biodiversityData;\n\n  // The risk index is already calculated by the service (0-100 scale)\n  // We use it directly as the risk value\n  const riskValue = Math.min(100, Math.max(0, riskIndex));\n\n  predictionState.riskIndices.biodiversityRisk.value = riskValue;\n  predictionState.riskIndices.biodiversityRisk.confidence = 0.80;\n  predictionState.riskIndices.biodiversityRisk.riskIndex = riskIndex;\n  predictionState.riskIndices.biodiversityRisk.riskAssessment = analysis?.riskAssessment || 'Unknown';\n  predictionState.riskIndices.biodiversityRisk.regions = bioData?.regions ? Object.keys(bioData.regions) : [];\n\n  console.log(`[PredictionEngine] Biodiversity Risk Index updated to ${riskValue} (${analysis?.riskAssessment || 'Unknown'} risk) based on ${analysis?.totalRegions || 0} regions.`);\n  } catch (error) {\n    console.warn('[PredictionEngine] Error updating Biodiversity Risk Index:', error.message);\n  }\n}\n\n/**\n   * Updates the Pandemics Risk Index based on global health data.\n   */\nasync function updatePandemicsRiskIndex() {\n  console.log('[PredictionEngine] Updating Pandemics Risk Index...');\n  try {\n    const pandemicsData = await fetchInternalData('/api/global-risk/pandemics');\n\n    if (!pandemicsData || pandemicsData.riskIndex === undefined) {\n      console.warn('[PredictionEngine] Invalid pandemics data received. Skipping update.');\n      return;\n    }\n\n  const { riskIndex, analysis, regions } = pandemicsData;\n\n  // The risk index is already calculated by the service (0-100 scale)\n  // We use it directly as the risk value\n  const riskValue = Math.min(100, Math.max(0, riskIndex));\n\n  predictionState.riskIndices.pandemicsRisk.value = riskValue;\n  predictionState.riskIndices.pandemicsRisk.confidence = 0.75;\n  predictionState.riskIndices.pandemicsRisk.riskIndex = riskIndex;\n  predictionState.riskIndices.pandemicsRisk.riskLevel = analysis?.riskLevel || 'Unknown';\n  predictionState.riskIndices.pandemicsRisk.regions = regions || [];\n\n  console.log(`[PredictionEngine] Pandemics Risk Index updated to ${riskValue} (${analysis?.riskLevel || 'Unknown'} risk) based on ${regions?.length || 0} regions.`);\n  } catch (error) {\n    console.warn('[PredictionEngine] Error updating Pandemics Risk Index:', error.message);\n  }\n}\n\n/**\n   * Updates the Cybersecurity Risk Index based on global cyber threat data.\n   */\nasync function updateCybersecurityRiskIndex() {\n  console.log('[PredictionEngine] Updating Cybersecurity Risk Index...');\n  try {\n    const cybersecurityData = await fetchInternalData('/api/global-risk/cybersecurity');\n\n    if (!cybersecurityData || cybersecurityData.riskIndex === undefined) {\n      console.warn('[PredictionEngine] Invalid cybersecurity data received. Skipping update.');\n      return;\n    }\n\n  const { riskIndex, analysis, sectors } = cybersecurityData;\n\n  // The risk index is already calculated by the service (0-100 scale)\n  // We use it directly as the risk value\n  const riskValue = Math.min(100, Math.max(0, riskIndex));\n\n  predictionState.riskIndices.cybersecurityRisk.value = riskValue;\n  predictionState.riskIndices.cybersecurityRisk.confidence = 0.85;\n  predictionState.riskIndices.cybersecurityRisk.riskIndex = riskIndex;\n  predictionState.riskIndices.cybersecurityRisk.riskLevel = analysis?.riskLevel || 'Unknown';\n  predictionState.riskIndices.cybersecurityRisk.sectors = sectors || [];\n\n  console.log(`[PredictionEngine] Cybersecurity Risk Index updated to ${riskValue} (${analysis?.riskLevel || 'Unknown'} risk) based on ${sectors?.length || 0} sectors.`);\n  } catch (error) {\n    console.warn('[PredictionEngine] Error updating Cybersecurity Risk Index:', error.message);\n  }\n}\n\n/**\n   * Updates the Economic Instability Risk Index based on global economic data.\n   */\nasync function updateEconomicInstabilityRiskIndex() {\n  console.log('[PredictionEngine] Updating Economic Instability Risk Index...');\n  try {\n    const economicData = await fetchInternalData('/api/global-risk/economic-instability');\n\n    if (!economicData || economicData.riskIndex === undefined) {\n      console.warn('[PredictionEngine] Invalid economic instability data received. Skipping update.');\n      return;\n    }\n\n  const { riskIndex, analysis, regions } = economicData;\n\n  // The risk index is already calculated by the service (0-100 scale)\n  // We use it directly as the risk value\n  const riskValue = Math.min(100, Math.max(0, riskIndex));\n\n  predictionState.riskIndices.economicInstabilityRisk.value = riskValue;\n  predictionState.riskIndices.economicInstabilityRisk.confidence = 0.80;\n  predictionState.riskIndices.economicInstabilityRisk.riskIndex = riskIndex;\n  predictionState.riskIndices.economicInstabilityRisk.riskLevel = analysis?.riskLevel || 'Unknown';\n  predictionState.riskIndices.economicInstabilityRisk.regions = regions || [];\n\n  console.log(`[PredictionEngine] Economic Instability Risk Index updated to ${riskValue} (${analysis?.riskLevel || 'Unknown'} risk) based on ${regions?.length || 0} regions.`);\n  } catch (error) {\n    console.warn('[PredictionEngine] Error updating Economic Instability Risk Index:', error.message);\n  }\n}\n\n/**\n   * Updates the Geopolitical Instability Risk Index based on global conflict data.\n   */\nasync function updateGeopoliticalInstabilityRiskIndex() {\n  console.log('[PredictionEngine] Updating Geopolitical Instability Risk Index...');\n  try {\n    const geopoliticalData = await fetchInternalData('/api/global-risk/geopolitical-instability');\n\n    if (!geopoliticalData || geopoliticalData.riskIndex === undefined) {\n      console.warn('[PredictionEngine] Invalid geopolitical instability data received. Skipping update.');\n      return;\n    }\n\n  const { riskIndex, analysis, regions } = geopoliticalData;\n\n  // The risk index is already calculated by the service (0-100 scale)\n  // We use it directly as the risk value\n  const riskValue = Math.min(100, Math.max(0, riskIndex));\n\n  predictionState.riskIndices.geopoliticalInstabilityRisk.value = riskValue;\n  predictionState.riskIndices.geopoliticalInstabilityRisk.confidence = 0.75;\n  predictionState.riskIndices.geopoliticalInstabilityRisk.riskIndex = riskIndex;\n  predictionState.riskIndices.geopoliticalInstabilityRisk.riskLevel = analysis?.riskLevel || 'Unknown';\n  predictionState.riskIndices.geopoliticalInstabilityRisk.regions = regions || [];\n\n  console.log(`[PredictionEngine] Geopolitical Instability Risk Index updated to ${riskValue} (${analysis?.riskLevel || 'Unknown'} risk) based on ${regions?.length || 0} regions.`);\n  } catch (error) {\n    console.warn('[PredictionEngine] Error updating Geopolitical Instability Risk Index:', error.message);\n  }\n}\n\n/**\n  * Calculates the Multi-Domain Risk Index based on all individual risk indices.\n  * This is a weighted average for demonstration.\n  */\nfunction updateMultiDomainRiskIndex() {\n  console.log('[PredictionEngine] Calculating Multi-Domain Risk Index...');\n  const { famineRisk, geophysicalRisk, supplyChainRisk, climateExtremesRisk, communityResilienceRisk, cryptoVolatilityRisk, biodiversityRisk, pandemicsRisk, cybersecurityRisk, economicInstabilityRisk, geopoliticalInstabilityRisk } = predictionState.riskIndices;\n\n  const famineWeight = 0.08;\n  const geoWeight = 0.08;\n  const supplyChainWeight = 0.08;\n  const climateWeight = 0.08;\n  const resilienceWeight = 0.08;\n  const cryptoWeight = 0.10; // Adjusted weight for crypto volatility\n  const biodiversityWeight = 0.10; // Adjusted weight for biodiversity\n  const pandemicsWeight = 0.10; // New weight for pandemics risk\n  const cybersecurityWeight = 0.10; // New weight for cybersecurity risk\n  const economicInstabilityWeight = 0.10; // New weight for economic instability\n  const geopoliticalInstabilityWeight = 0.10; // New weight for geopolitical instability\n\n  const famineValue = famineRisk.value || 0;\n  const geoValue = geophysicalRisk.value || 0;\n  const supplyChainValue = supplyChainRisk.value || 0;\n  const climateValue = climateExtremesRisk.value || 0;\n  const resilienceValue = communityResilienceRisk.value || 0;\n  const cryptoValue = cryptoVolatilityRisk.value || 0;\n  const biodiversityValue = biodiversityRisk.value || 0;\n  const pandemicsValue = pandemicsRisk.value || 0;\n  const cybersecurityValue = cybersecurityRisk.value || 0;\n  const economicInstabilityValue = economicInstabilityRisk.value || 0;\n  const geopoliticalInstabilityValue = geopoliticalInstabilityRisk.value || 0;\n\n  const totalRisk = (famineValue * famineWeight) + (geoValue * geoWeight) + (supplyChainValue * supplyChainWeight) + (climateValue * climateWeight) + (resilienceValue * resilienceWeight) + (cryptoValue * cryptoWeight) + (biodiversityValue * biodiversityWeight) + (pandemicsValue * pandemicsWeight) + (cybersecurityValue * cybersecurityWeight) + (economicInstabilityValue * economicInstabilityWeight) + (geopoliticalInstabilityValue * geopoliticalInstabilityWeight);\n  const weightedConfidence = (famineRisk.confidence * famineWeight) + (geophysicalRisk.confidence * geoWeight) + (supplyChainRisk.confidence * supplyChainWeight) + (climateExtremesRisk.confidence * climateWeight) + (communityResilienceRisk.confidence * resilienceWeight) + (cryptoVolatilityRisk.confidence * cryptoWeight) + (biodiversityRisk.confidence * biodiversityWeight) + (pandemicsRisk.confidence * pandemicsWeight) + (cybersecurityRisk.confidence * cybersecurityWeight) + (economicInstabilityRisk.confidence * economicInstabilityWeight) + (geopoliticalInstabilityRisk.confidence * geopoliticalInstabilityWeight);\n\n  predictionState.multiDomainRiskIndex = {\n    value: parseFloat(totalRisk.toFixed(2)),\n    confidence: parseFloat(weightedConfidence.toFixed(2)),\n  };\n\n  console.log(`[PredictionEngine] Multi-Domain Risk Index updated to ${predictionState.multiDomainRiskIndex.value}.`);\n}\n\n/**\n * Generates generative AI analysis for the current risk state.\n */\nasync function updateGenerativeAnalysis() {\n  console.log('[PredictionEngine] Generating Generative AI Analysis...');\n  try {\n    const service = await getGenerativeAIService();\n    const currentRiskData = {\n      riskIndices: predictionState.riskIndices,\n      multiDomainRiskIndex: predictionState.multiDomainRiskIndex,\n      ethicalAssessment: predictionState.ethicalAssessment,\n    };\n\n    // Generate predictive narrative\n    const narrative = await service.generatePredictiveNarrative(currentRiskData, {\n      focusAreas: ['climate', 'economic', 'social', 'geopolitical'],\n      timeHorizon: '6months',\n      detailLevel: 'comprehensive',\n      language: 'es'\n    });\n\n    // Generate correlation analysis\n    const correlations = await service.analyzeRiskCorrelations(predictionState.riskIndices);\n\n    predictionState.generativeAnalysis = {\n      narrative,\n      correlations,\n      lastGenerated: new Date().toISOString(),\n      confidence: 0.85, // Base confidence for generative analysis\n    };\n\n    console.log('[PredictionEngine] Generative AI Analysis completed successfully.');\n  } catch (error) {\n    console.warn('[PredictionEngine] Error generating AI analysis:', error.message);\n    predictionState.generativeAnalysis = {\n      narrative: null,\n      correlations: null,\n      lastGenerated: new Date().toISOString(),\n      confidence: 0.0,\n      error: error.message,\n    };\n  }\n}\n\n/**\n * Updates the Ethical Assessment based on current risk indices.\n * Evaluates predictions against human impact, environmental sustainability, and social equity.\n */\nfunction updateEthicalAssessment() {\n  console.log('[PredictionEngine] Updating Ethical Assessment...');\n\n  const ethicalVector = calculateEthicalVector(predictionState.riskIndices);\n  predictionState.ethicalAssessment = ethicalVector;\n\n  console.log(`[PredictionEngine] Ethical Assessment updated: ${ethicalVector.assessment} (Score: ${ethicalVector.overallScore.toFixed(2)}).`);\n}\n\n/**\n * Retrieves the current state of all risk indices.\n * @returns {object} The current prediction state.\n */\nfunction getRiskIndices() {\n  return predictionState;\n}\n\n/**\n * Initiates the perpetual prophecy cycle.\n */\nasync function runProphecyCycle() {\n  try {\n    await Promise.all([\n      updateFamineRiskIndex(),\n      updateGeophysicalRiskIndex(),\n      updateSupplyChainRiskIndex(),\n      updateClimateExtremesRiskIndex(),\n      updateCommunityResilienceRiskIndex(),\n      updateCryptoVolatilityRiskIndex(),\n      updateBiodiversityRiskIndex(),\n      updatePandemicsRiskIndex(),\n      updateCybersecurityRiskIndex(),\n      updateEconomicInstabilityRiskIndex(),\n      updateGeopoliticalInstabilityRiskIndex(),\n    ]);\n\n    updateMultiDomainRiskIndex();\n    updateEthicalAssessment();\n\n    // Generate generative AI analysis (non-blocking to avoid delaying the cycle)\n    updateGenerativeAnalysis().catch(error => {\n      console.warn('[PredictionEngine] Generative analysis failed but cycle continues:', error.message);\n    });\n\n    predictionState.lastUpdated = new Date().toISOString();\n    console.log('[PredictionEngine] Prophecy cycle complete. All risk indices, ethical assessment, and AI analysis updated.');\n\n  } catch (error) {\n    console.error('[PredictionEngine] Error during prophecy cycle:', error.message);\n  }\n}\n\nexport {\n  runProphecyCycle,\n  getRiskIndices,\n};\n"],"mappings":"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","ignoreList":[]}