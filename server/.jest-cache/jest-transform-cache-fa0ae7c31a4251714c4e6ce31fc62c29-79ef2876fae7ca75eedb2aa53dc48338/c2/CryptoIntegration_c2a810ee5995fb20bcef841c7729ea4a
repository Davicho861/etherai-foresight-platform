6474c0593fac4a1ed89a7b8b5fb6944e
/* istanbul ignore next */
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var
/* istanbul ignore next */
_safeFetch = _interopRequireDefault(require("../lib/safeFetch.js"));
var
/* istanbul ignore next */
_forceMocks = require("../lib/force-mocks.js");
/* istanbul ignore next */ function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function cov_1uc3s7e4dj() {
  var path = "/home/davicho/etherai-foresight-platform-main/server/src/integrations/CryptoIntegration.js";
  var hash = "d0536deea5ae21d2be7742b8218c91972d107845";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/davicho/etherai-foresight-platform-main/server/src/integrations/CryptoIntegration.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 54
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 22,
          column: 5
        }
      },
      "2": {
        start: {
          line: 11,
          column: 18
        },
        end: {
          line: 11,
          column: 37
        }
      },
      "3": {
        start: {
          line: 12,
          column: 18
        },
        end: {
          line: 12,
          column: 187
        }
      },
      "4": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 75
        }
      },
      "5": {
        start: {
          line: 14,
          column: 6
        },
        end: {
          line: 14,
          column: 18
        }
      },
      "6": {
        start: {
          line: 16,
          column: 6
        },
        end: {
          line: 19,
          column: 7
        }
      },
      "7": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 108
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 98
        }
      },
      "9": {
        start: {
          line: 20,
          column: 6
        },
        end: {
          line: 20,
          column: 58
        }
      },
      "10": {
        start: {
          line: 21,
          column: 6
        },
        end: {
          line: 21,
          column: 109
        }
      },
      "11": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "12": {
        start: {
          line: 27,
          column: 18
        },
        end: {
          line: 27,
          column: 120
        }
      },
      "13": {
        start: {
          line: 28,
          column: 19
        },
        end: {
          line: 28,
          column: 75
        }
      },
      "14": {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 29,
          column: 18
        }
      },
      "15": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 34,
          column: 7
        }
      },
      "16": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 112
        }
      },
      "17": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 103
        }
      },
      "18": {
        start: {
          line: 35,
          column: 6
        },
        end: {
          line: 35,
          column: 69
        }
      },
      "19": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 36,
          column: 120
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 2
          },
          end: {
            line: 5,
            column: 3
          }
        },
        loc: {
          start: {
            line: 5,
            column: 16
          },
          end: {
            line: 7,
            column: 3
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 2
          },
          end: {
            line: 9,
            column: 3
          }
        },
        loc: {
          start: {
            line: 9,
            column: 79
          },
          end: {
            line: 23,
            column: 3
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 2
          },
          end: {
            line: 25,
            column: 3
          }
        },
        loc: {
          start: {
            line: 25,
            column: 67
          },
          end: {
            line: 38,
            column: 3
          }
        },
        line: 25
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 22
          },
          end: {
            line: 9,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 34
          },
          end: {
            line: 9,
            column: 57
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 59
          },
          end: {
            line: 9,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 72
          },
          end: {
            line: 9,
            column: 77
          }
        }],
        line: 9
      },
      "2": {
        loc: {
          start: {
            line: 16,
            column: 6
          },
          end: {
            line: 19,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 6
          },
          end: {
            line: 19,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "3": {
        loc: {
          start: {
            line: 21,
            column: 51
          },
          end: {
            line: 21,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 76
          },
          end: {
            line: 21,
            column: 89
          }
        }, {
          start: {
            line: 21,
            column: 92
          },
          end: {
            line: 21,
            column: 105
          }
        }],
        line: 21
      },
      "4": {
        loc: {
          start: {
            line: 21,
            column: 51
          },
          end: {
            line: 21,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 51
          },
          end: {
            line: 21,
            column: 56
          }
        }, {
          start: {
            line: 21,
            column: 60
          },
          end: {
            line: 21,
            column: 73
          }
        }],
        line: 21
      },
      "5": {
        loc: {
          start: {
            line: 25,
            column: 36
          },
          end: {
            line: 25,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 43
          },
          end: {
            line: 25,
            column: 45
          }
        }],
        line: 25
      },
      "6": {
        loc: {
          start: {
            line: 25,
            column: 47
          },
          end: {
            line: 25,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 60
          },
          end: {
            line: 25,
            column: 65
          }
        }],
        line: 25
      },
      "7": {
        loc: {
          start: {
            line: 31,
            column: 6
          },
          end: {
            line: 34,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 6
          },
          end: {
            line: 34,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "8": {
        loc: {
          start: {
            line: 36,
            column: 62
          },
          end: {
            line: 36,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 87
          },
          end: {
            line: 36,
            column: 100
          }
        }, {
          start: {
            line: 36,
            column: 103
          },
          end: {
            line: 36,
            column: 116
          }
        }],
        line: 36
      },
      "9": {
        loc: {
          start: {
            line: 36,
            column: 62
          },
          end: {
            line: 36,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 62
          },
          end: {
            line: 36,
            column: 67
          }
        }, {
          start: {
            line: 36,
            column: 71
          },
          end: {
            line: 36,
            column: 84
          }
        }],
        line: 36
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d0536deea5ae21d2be7742b8218c91972d107845"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1uc3s7e4dj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1uc3s7e4dj();
class CryptoIntegration {
  constructor() {
    /* istanbul ignore next */
    cov_1uc3s7e4dj().f[0]++;
    cov_1uc3s7e4dj().s[0]++;
    this.baseUrl = 'https://api.coingecko.com/api/v3';
  }
  async getCryptoData(cryptoIds =
  /* istanbul ignore next */
  (cov_1uc3s7e4dj().b[0][0]++, ['bitcoin', 'ethereum']), vsCurrency =
  /* istanbul ignore next */
  (cov_1uc3s7e4dj().b[1][0]++, 'usd')) {
    /* istanbul ignore next */
    cov_1uc3s7e4dj().f[1]++;
    cov_1uc3s7e4dj().s[1]++;
    try {
      const ids =
      /* istanbul ignore next */
      (cov_1uc3s7e4dj().s[2]++, cryptoIds.join(','));
      const url =
      /* istanbul ignore next */
      (cov_1uc3s7e4dj().s[3]++, `${this.baseUrl}/coins/markets?ids=${ids}&vs_currency=${vsCurrency}&order=market_cap_desc&per_page=100&page=1&sparkline=true&price_change_percentage=1h%2C24h%2C7d%2C30d`);
      const data =
      /* istanbul ignore next */
      (cov_1uc3s7e4dj().s[4]++, await
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _safeFetch.
      /* istanbul ignore next */
      default)(url, {}, {
        timeout: 10000,
        retries: 2
      }));
      /* istanbul ignore next */
      cov_1uc3s7e4dj().s[5]++;
      return data;
    } catch (error) {
      /* istanbul ignore next */
      cov_1uc3s7e4dj().s[6]++;
      if (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _forceMocks.
      /* istanbul ignore next */
      forceMocksEnabled)()) {
        /* istanbul ignore next */
        cov_1uc3s7e4dj().b[2][0]++;
        cov_1uc3s7e4dj().s[7]++;
        console.error('CryptoIntegration: returning FORCE_MOCKS mock for crypto data due to error:', error);
        /* istanbul ignore next */
        cov_1uc3s7e4dj().s[8]++;
        return {
          error: null,
          cryptoIds,
          vsCurrency,
          isMock: true,
          source: 'FORCE_MOCKS:Crypto'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1uc3s7e4dj().b[2][1]++;
      }
      cov_1uc3s7e4dj().s[9]++;
      console.error('Error fetching crypto data:', error);
      /* istanbul ignore next */
      cov_1uc3s7e4dj().s[10]++;
      throw new Error(`CryptoIntegration failed: ${
      /* istanbul ignore next */
      (cov_1uc3s7e4dj().b[4][0]++, error) &&
      /* istanbul ignore next */
      (cov_1uc3s7e4dj().b[4][1]++, error.message) ?
      /* istanbul ignore next */
      (cov_1uc3s7e4dj().b[3][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1uc3s7e4dj().b[3][1]++, String(error))}`);
    }
  }
  async getHistoricalData(cryptoId, days =
  /* istanbul ignore next */
  (cov_1uc3s7e4dj().b[5][0]++, 30), vsCurrency =
  /* istanbul ignore next */
  (cov_1uc3s7e4dj().b[6][0]++, 'usd')) {
    /* istanbul ignore next */
    cov_1uc3s7e4dj().f[2]++;
    cov_1uc3s7e4dj().s[11]++;
    try {
      const url =
      /* istanbul ignore next */
      (cov_1uc3s7e4dj().s[12]++, `${this.baseUrl}/coins/${cryptoId}/market_chart?vs_currency=${vsCurrency}&days=${days}&interval=daily`);
      const data =
      /* istanbul ignore next */
      (cov_1uc3s7e4dj().s[13]++, await
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _safeFetch.
      /* istanbul ignore next */
      default)(url, {}, {
        timeout: 10000,
        retries: 2
      }));
      /* istanbul ignore next */
      cov_1uc3s7e4dj().s[14]++;
      return data;
    } catch (error) {
      /* istanbul ignore next */
      cov_1uc3s7e4dj().s[15]++;
      if (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _forceMocks.
      /* istanbul ignore next */
      forceMocksEnabled)()) {
        /* istanbul ignore next */
        cov_1uc3s7e4dj().b[7][0]++;
        cov_1uc3s7e4dj().s[16]++;
        console.error('CryptoIntegration: returning FORCE_MOCKS mock for historical data due to error:', error);
        /* istanbul ignore next */
        cov_1uc3s7e4dj().s[17]++;
        return {
          error: null,
          cryptoId,
          days,
          vsCurrency,
          isMock: true,
          source: 'FORCE_MOCKS:Crypto'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1uc3s7e4dj().b[7][1]++;
      }
      cov_1uc3s7e4dj().s[18]++;
      console.error('Error fetching historical crypto data:', error);
      /* istanbul ignore next */
      cov_1uc3s7e4dj().s[19]++;
      throw new Error(`CryptoIntegration historical failed: ${
      /* istanbul ignore next */
      (cov_1uc3s7e4dj().b[9][0]++, error) &&
      /* istanbul ignore next */
      (cov_1uc3s7e4dj().b[9][1]++, error.message) ?
      /* istanbul ignore next */
      (cov_1uc3s7e4dj().b[8][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1uc3s7e4dj().b[8][1]++, String(error))}`);
    }
  }
}
/* istanbul ignore next */
var _default = exports.default = CryptoIntegration;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,