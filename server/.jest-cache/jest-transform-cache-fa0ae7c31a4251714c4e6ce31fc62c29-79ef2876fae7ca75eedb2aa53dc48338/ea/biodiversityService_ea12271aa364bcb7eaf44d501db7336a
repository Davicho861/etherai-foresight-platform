1ebdec1069ace76b2b884c45e329249e
/* istanbul ignore next */
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var
/* istanbul ignore next */
_BiodiversityIntegration = _interopRequireDefault(require("../integrations/BiodiversityIntegration.js"));
/* istanbul ignore next */ function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function cov_2lmk9rc90m() {
  var path = "/home/davicho/etherai-foresight-platform-main/server/src/services/biodiversityService.js";
  var hash = "f3d4f5eca82c22265b25610c0d773cf5227a528c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/davicho/etherai-foresight-platform-main/server/src/services/biodiversityService.js",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 65
        }
      },
      "1": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "2": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 19,
          column: 94
        }
      },
      "3": {
        start: {
          line: 20,
          column: 25
        },
        end: {
          line: 20,
          column: 82
        }
      },
      "4": {
        start: {
          line: 22,
          column: 6
        },
        end: {
          line: 25,
          column: 7
        }
      },
      "5": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 85
        }
      },
      "6": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 18
        }
      },
      "7": {
        start: {
          line: 28,
          column: 27
        },
        end: {
          line: 28,
          column: 70
        }
      },
      "8": {
        start: {
          line: 29,
          column: 30
        },
        end: {
          line: 29,
          column: 76
        }
      },
      "9": {
        start: {
          line: 30,
          column: 31
        },
        end: {
          line: 30,
          column: 92
        }
      },
      "10": {
        start: {
          line: 33,
          column: 27
        },
        end: {
          line: 33,
          column: 120
        }
      },
      "11": {
        start: {
          line: 33,
          column: 96
        },
        end: {
          line: 33,
          column: 116
        }
      },
      "12": {
        start: {
          line: 34,
          column: 27
        },
        end: {
          line: 36,
          column: 69
        }
      },
      "13": {
        start: {
          line: 38,
          column: 36
        },
        end: {
          line: 38,
          column: 94
        }
      },
      "14": {
        start: {
          line: 42,
          column: 22
        },
        end: {
          line: 42,
          column: 44
        }
      },
      "15": {
        start: {
          line: 45,
          column: 6
        },
        end: {
          line: 45,
          column: 54
        }
      },
      "16": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 48,
          column: 61
        }
      },
      "17": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 50,
          column: 35
        }
      },
      "18": {
        start: {
          line: 53,
          column: 6
        },
        end: {
          line: 53,
          column: 73
        }
      },
      "19": {
        start: {
          line: 54,
          column: 6
        },
        end: {
          line: 54,
          column: 16
        }
      },
      "20": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 103,
          column: 5
        }
      },
      "21": {
        start: {
          line: 65,
          column: 31
        },
        end: {
          line: 65,
          column: 94
        }
      },
      "22": {
        start: {
          line: 66,
          column: 25
        },
        end: {
          line: 66,
          column: 82
        }
      },
      "23": {
        start: {
          line: 68,
          column: 24
        },
        end: {
          line: 68,
          column: 68
        }
      },
      "24": {
        start: {
          line: 70,
          column: 6
        },
        end: {
          line: 86,
          column: 8
        }
      },
      "25": {
        start: {
          line: 80,
          column: 34
        },
        end: {
          line: 80,
          column: 51
        }
      },
      "26": {
        start: {
          line: 82,
          column: 40
        },
        end: {
          line: 82,
          column: 71
        }
      },
      "27": {
        start: {
          line: 88,
          column: 6
        },
        end: {
          line: 88,
          column: 62
        }
      },
      "28": {
        start: {
          line: 89,
          column: 6
        },
        end: {
          line: 102,
          column: 8
        }
      },
      "29": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 112,
          column: 43
        }
      },
      "30": {
        start: {
          line: 112,
          column: 25
        },
        end: {
          line: 112,
          column: 43
        }
      },
      "31": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 113,
          column: 39
        }
      },
      "32": {
        start: {
          line: 113,
          column: 25
        },
        end: {
          line: 113,
          column: 39
        }
      },
      "33": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 114,
          column: 43
        }
      },
      "34": {
        start: {
          line: 114,
          column: 25
        },
        end: {
          line: 114,
          column: 43
        }
      },
      "35": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 115,
          column: 17
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 2
          },
          end: {
            line: 8,
            column: 3
          }
        },
        loc: {
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 10,
            column: 3
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 17,
            column: 3
          }
        },
        loc: {
          start: {
            line: 17,
            column: 96
          },
          end: {
            line: 56,
            column: 3
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 33,
            column: 77
          },
          end: {
            line: 33,
            column: 78
          }
        },
        loc: {
          start: {
            line: 33,
            column: 96
          },
          end: {
            line: 33,
            column: 116
          }
        },
        line: 33
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 63,
            column: 2
          },
          end: {
            line: 63,
            column: 3
          }
        },
        loc: {
          start: {
            line: 63,
            column: 95
          },
          end: {
            line: 104,
            column: 3
          }
        },
        line: 63
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 80,
            column: 18
          },
          end: {
            line: 80,
            column: 19
          }
        },
        loc: {
          start: {
            line: 80,
            column: 34
          },
          end: {
            line: 80,
            column: 51
          }
        },
        line: 80
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 82,
            column: 17
          },
          end: {
            line: 82,
            column: 18
          }
        },
        loc: {
          start: {
            line: 82,
            column: 40
          },
          end: {
            line: 82,
            column: 71
          }
        },
        line: 82
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 111,
            column: 2
          },
          end: {
            line: 111,
            column: 3
          }
        },
        loc: {
          start: {
            line: 111,
            column: 30
          },
          end: {
            line: 116,
            column: 3
          }
        },
        line: 111
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 33
          },
          end: {
            line: 17,
            column: 94
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 17,
            column: 43
          },
          end: {
            line: 17,
            column: 94
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 25,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 6
          },
          end: {
            line: 25,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 10
          },
          end: {
            line: 22,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 10
          },
          end: {
            line: 22,
            column: 27
          }
        }, {
          start: {
            line: 22,
            column: 31
          },
          end: {
            line: 22,
            column: 42
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 31
          },
          end: {
            line: 30,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 50
          },
          end: {
            line: 30,
            column: 88
          }
        }, {
          start: {
            line: 30,
            column: 91
          },
          end: {
            line: 30,
            column: 92
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 36
          },
          end: {
            line: 38,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 55
          },
          end: {
            line: 38,
            column: 90
          }
        }, {
          start: {
            line: 38,
            column: 93
          },
          end: {
            line: 38,
            column: 94
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 63,
            column: 32
          },
          end: {
            line: 63,
            column: 93
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 63,
            column: 42
          },
          end: {
            line: 63,
            column: 93
          }
        }],
        line: 63
      },
      "6": {
        loc: {
          start: {
            line: 77,
            column: 34
          },
          end: {
            line: 78,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 78,
            column: 112
          }
        }, {
          start: {
            line: 78,
            column: 115
          },
          end: {
            line: 78,
            column: 116
          }
        }],
        line: 77
      },
      "7": {
        loc: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "8": {
        loc: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "9": {
        loc: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f3d4f5eca82c22265b25610c0d773cf5227a528c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2lmk9rc90m = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2lmk9rc90m();
/**
 * Service for calculating biodiversity risk index
 * Analyzes global biodiversity data to determine environmental risk levels
 */
class BiodiversityService {
  constructor() {
    /* istanbul ignore next */
    cov_2lmk9rc90m().f[0]++;
    cov_2lmk9rc90m().s[0]++;
    this.biodiversityIntegration = new
    /* istanbul ignore next */
    _BiodiversityIntegration.
    /* istanbul ignore next */
    default();
  }

  /**
   * Calculates biodiversity risk index based on species threat data and regional biodiversity metrics
   * @param {Array<string>} regions - Array of regions to analyze (default: major continents)
   * @returns {Promise<number>} Risk index between 0-100 (0 = low risk, 100 = high risk)
   */
  async getBiodiversityRiskIndex(regions =
  /* istanbul ignore next */
  (cov_2lmk9rc90m().b[0][0]++, ['americas', 'africa', 'asia', 'europe', 'oceania'])) {
    /* istanbul ignore next */
    cov_2lmk9rc90m().f[1]++;
    cov_2lmk9rc90m().s[1]++;
    try {
      const biodiversityData =
      /* istanbul ignore next */
      (cov_2lmk9rc90m().s[2]++, await this.biodiversityIntegration.getBiodiversityData(regions));
      const threatData =
      /* istanbul ignore next */
      (cov_2lmk9rc90m().s[3]++, await this.biodiversityIntegration.getSpeciesThreatData());
      /* istanbul ignore next */
      cov_2lmk9rc90m().s[4]++;
      if (
      /* istanbul ignore next */
      (cov_2lmk9rc90m().b[2][0]++, !biodiversityData) ||
      /* istanbul ignore next */
      (cov_2lmk9rc90m().b[2][1]++, !threatData)) {
        /* istanbul ignore next */
        cov_2lmk9rc90m().b[1][0]++;
        cov_2lmk9rc90m().s[5]++;
        console.warn('No biodiversity data available, returning default risk index');
        /* istanbul ignore next */
        cov_2lmk9rc90m().s[6]++;
        return 30; // Default moderate risk
      } else
      /* istanbul ignore next */
      {
        cov_2lmk9rc90m().b[1][1]++;
      }

      // Calculate threat percentage across all regions
      const totalSpecies =
      /* istanbul ignore next */
      (cov_2lmk9rc90m().s[7]++, biodiversityData.globalSummary.totalSpecies);
      const totalThreatened =
      /* istanbul ignore next */
      (cov_2lmk9rc90m().s[8]++, biodiversityData.globalSummary.totalThreatened);
      const threatPercentage =
      /* istanbul ignore next */
      (cov_2lmk9rc90m().s[9]++, totalSpecies > 0 ?
      /* istanbul ignore next */
      (cov_2lmk9rc90m().b[3][0]++, totalThreatened / totalSpecies * 100) :
      /* istanbul ignore next */
      (cov_2lmk9rc90m().b[3][1]++, 0));

      // Calculate threat distribution from threat categories
      const totalThreats =
      /* istanbul ignore next */
      (cov_2lmk9rc90m().s[10]++, Object.values(threatData.threatCategories).reduce((sum, category) => {
        /* istanbul ignore next */
        cov_2lmk9rc90m().f[2]++;
        cov_2lmk9rc90m().s[11]++;
        return sum + category.count;
      }, 0));
      const majorThreats =
      /* istanbul ignore next */
      (cov_2lmk9rc90m().s[12]++, threatData.threatCategories.habitatLoss.count + threatData.threatCategories.climateChange.count + threatData.threatCategories.pollution.count);
      const majorThreatPercentage =
      /* istanbul ignore next */
      (cov_2lmk9rc90m().s[13]++, totalThreats > 0 ?
      /* istanbul ignore next */
      (cov_2lmk9rc90m().b[4][0]++, majorThreats / totalThreats * 100) :
      /* istanbul ignore next */
      (cov_2lmk9rc90m().b[4][1]++, 0));

      // Combine metrics for risk assessment
      // Base risk from species threat level
      let riskIndex =
      /* istanbul ignore next */
      (cov_2lmk9rc90m().s[14]++, threatPercentage * 0.6); // 60% weight on species threat

      // Additional risk from major threat categories
      /* istanbul ignore next */
      cov_2lmk9rc90m().s[15]++;
      riskIndex += majorThreatPercentage / 100 * 40; // 40% weight on major threats

      // Normalize to 0-100 scale with some baseline
      /* istanbul ignore next */
      cov_2lmk9rc90m().s[16]++;
      riskIndex = Math.min(Math.max(riskIndex + 10, 0), 100); // Add 10 for baseline environmental concern
      /* istanbul ignore next */
      cov_2lmk9rc90m().s[17]++;
      return Math.round(riskIndex);
    } catch (error) {
      /* istanbul ignore next */
      cov_2lmk9rc90m().s[18]++;
      console.error('Error calculating biodiversity risk index:', error);
      /* istanbul ignore next */
      cov_2lmk9rc90m().s[19]++;
      return 30; // Return moderate risk as fallback
    }
  }

  /**
   * Gets detailed biodiversity analysis
   * @param {Array<string>} regions - Array of regions to analyze
   * @returns {Promise<object>} Detailed biodiversity analysis
   */
  async getBiodiversityAnalysis(regions =
  /* istanbul ignore next */
  (cov_2lmk9rc90m().b[5][0]++, ['americas', 'africa', 'asia', 'europe', 'oceania'])) {
    /* istanbul ignore next */
    cov_2lmk9rc90m().f[3]++;
    cov_2lmk9rc90m().s[20]++;
    try {
      const biodiversityData =
      /* istanbul ignore next */
      (cov_2lmk9rc90m().s[21]++, await this.biodiversityIntegration.getBiodiversityData(regions));
      const threatData =
      /* istanbul ignore next */
      (cov_2lmk9rc90m().s[22]++, await this.biodiversityIntegration.getSpeciesThreatData());
      const riskIndex =
      /* istanbul ignore next */
      (cov_2lmk9rc90m().s[23]++, await this.getBiodiversityRiskIndex(regions));
      /* istanbul ignore next */
      cov_2lmk9rc90m().s[24]++;
      return {
        timestamp: new Date().toISOString(),
        riskIndex: riskIndex,
        biodiversityData: biodiversityData,
        threatData: threatData,
        analysis: {
          totalRegions: regions.length,
          globalThreatPercentage: biodiversityData.globalSummary.totalSpecies > 0 ?
          /* istanbul ignore next */
          (cov_2lmk9rc90m().b[6][0]++, biodiversityData.globalSummary.totalThreatened / biodiversityData.globalSummary.totalSpecies * 100) :
          /* istanbul ignore next */
          (cov_2lmk9rc90m().b[6][1]++, 0),
          majorThreatCategories: Object.entries(threatData.threatCategories).sort(([, a], [, b]) => {
            /* istanbul ignore next */
            cov_2lmk9rc90m().f[4]++;
            cov_2lmk9rc90m().s[25]++;
            return b.count - a.count;
          }).slice(0, 3).map(([category, data]) => {
            /* istanbul ignore next */
            cov_2lmk9rc90m().f[5]++;
            cov_2lmk9rc90m().s[26]++;
            return {
              category,
              count: data.count
            };
          }),
          riskAssessment: this._assessRiskLevel(riskIndex)
        },
        source: 'BiodiversityService'
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2lmk9rc90m().s[27]++;
      console.error('Error in biodiversity analysis:', error);
      /* istanbul ignore next */
      cov_2lmk9rc90m().s[28]++;
      return {
        timestamp: new Date().toISOString(),
        riskIndex: 30,
        biodiversityData: null,
        threatData: null,
        analysis: {
          totalRegions: 0,
          globalThreatPercentage: 0,
          majorThreatCategories: [],
          riskAssessment: 'Moderate'
        },
        source: 'BiodiversityService - Error Fallback',
        error: error.message
      };
    }
  }

  /**
   * Assesses risk level based on biodiversity risk index
   * @param {number} riskIndex - The calculated biodiversity risk index
   * @returns {string} Risk level description
   */
  _assessRiskLevel(riskIndex) {
    /* istanbul ignore next */
    cov_2lmk9rc90m().f[6]++;
    cov_2lmk9rc90m().s[29]++;
    if (riskIndex >= 70) {
      /* istanbul ignore next */
      cov_2lmk9rc90m().b[7][0]++;
      cov_2lmk9rc90m().s[30]++;
      return 'Critical';
    } else
    /* istanbul ignore next */
    {
      cov_2lmk9rc90m().b[7][1]++;
    }
    cov_2lmk9rc90m().s[31]++;
    if (riskIndex >= 50) {
      /* istanbul ignore next */
      cov_2lmk9rc90m().b[8][0]++;
      cov_2lmk9rc90m().s[32]++;
      return 'High';
    } else
    /* istanbul ignore next */
    {
      cov_2lmk9rc90m().b[8][1]++;
    }
    cov_2lmk9rc90m().s[33]++;
    if (riskIndex >= 30) {
      /* istanbul ignore next */
      cov_2lmk9rc90m().b[9][0]++;
      cov_2lmk9rc90m().s[34]++;
      return 'Moderate';
    } else
    /* istanbul ignore next */
    {
      cov_2lmk9rc90m().b[9][1]++;
    }
    cov_2lmk9rc90m().s[35]++;
    return 'Low';
  }
}
/* istanbul ignore next */
var _default = exports.default = BiodiversityService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,