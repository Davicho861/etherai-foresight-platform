56497da9dd10e25d9336ac59b09e66c8
/* istanbul ignore next */
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CircuitBreaker = void 0;
exports.fetchWithTimeout = fetchWithTimeout;
exports.isJsonResponse = isJsonResponse;
exports.retryWithBackoff = retryWithBackoff;
function cov_2piixth3qh() {
  var path = "/home/davicho/etherai-foresight-platform-main/server/src/utils/resilience.js";
  var hash = "5463876cde367b7326683557a6f8599705aaa8ca";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/davicho/etherai-foresight-platform-main/server/src/utils/resilience.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 45
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 9,
          column: 43
        }
      },
      "2": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 26
        }
      },
      "3": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 32
        }
      },
      "4": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 26
        }
      },
      "5": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 22,
          column: 5
        }
      },
      "6": {
        start: {
          line: 17,
          column: 6
        },
        end: {
          line: 21,
          column: 7
        }
      },
      "7": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 33
        }
      },
      "8": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 51
        }
      },
      "9": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "10": {
        start: {
          line: 25,
          column: 21
        },
        end: {
          line: 25,
          column: 31
        }
      },
      "11": {
        start: {
          line: 26,
          column: 6
        },
        end: {
          line: 26,
          column: 23
        }
      },
      "12": {
        start: {
          line: 27,
          column: 6
        },
        end: {
          line: 27,
          column: 20
        }
      },
      "13": {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "14": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 30,
          column: 18
        }
      },
      "15": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 26
        }
      },
      "16": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 26
        }
      },
      "17": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 24
        }
      },
      "18": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 38
        }
      },
      "19": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "20": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 43,
          column: 26
        }
      },
      "21": {
        start: {
          line: 51,
          column: 2
        },
        end: {
          line: 69,
          column: 3
        }
      },
      "22": {
        start: {
          line: 51,
          column: 21
        },
        end: {
          line: 51,
          column: 22
        }
      },
      "23": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "24": {
        start: {
          line: 53,
          column: 6
        },
        end: {
          line: 53,
          column: 24
        }
      },
      "25": {
        start: {
          line: 55,
          column: 6
        },
        end: {
          line: 55,
          column: 24
        }
      },
      "26": {
        start: {
          line: 57,
          column: 6
        },
        end: {
          line: 59,
          column: 7
        }
      },
      "27": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 14
        }
      },
      "28": {
        start: {
          line: 62,
          column: 20
        },
        end: {
          line: 62,
          column: 72
        }
      },
      "29": {
        start: {
          line: 63,
          column: 21
        },
        end: {
          line: 63,
          column: 48
        }
      },
      "30": {
        start: {
          line: 64,
          column: 25
        },
        end: {
          line: 64,
          column: 39
        }
      },
      "31": {
        start: {
          line: 66,
          column: 6
        },
        end: {
          line: 66,
          column: 115
        }
      },
      "32": {
        start: {
          line: 67,
          column: 6
        },
        end: {
          line: 67,
          column: 68
        }
      },
      "33": {
        start: {
          line: 67,
          column: 35
        },
        end: {
          line: 67,
          column: 66
        }
      },
      "34": {
        start: {
          line: 71,
          column: 2
        },
        end: {
          line: 71,
          column: 18
        }
      },
      "35": {
        start: {
          line: 75,
          column: 21
        },
        end: {
          line: 75,
          column: 42
        }
      },
      "36": {
        start: {
          line: 82,
          column: 25
        },
        end: {
          line: 87,
          column: 4
        }
      },
      "37": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 86,
          column: 16
        }
      },
      "38": {
        start: {
          line: 84,
          column: 6
        },
        end: {
          line: 84,
          column: 46
        }
      },
      "39": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 31
        }
      },
      "40": {
        start: {
          line: 85,
          column: 6
        },
        end: {
          line: 85,
          column: 62
        }
      },
      "41": {
        start: {
          line: 89,
          column: 2
        },
        end: {
          line: 110,
          column: 3
        }
      },
      "42": {
        start: {
          line: 91,
          column: 27
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "43": {
        start: {
          line: 95,
          column: 26
        },
        end: {
          line: 95,
          column: 127
        }
      },
      "44": {
        start: {
          line: 96,
          column: 21
        },
        end: {
          line: 99,
          column: 6
        }
      },
      "45": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 101,
          column: 28
        }
      },
      "46": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 102,
          column: 20
        }
      },
      "47": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 28
        }
      },
      "48": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "49": {
        start: {
          line: 107,
          column: 6
        },
        end: {
          line: 107,
          column: 60
        }
      },
      "50": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 109,
          column: 16
        }
      },
      "51": {
        start: {
          line: 114,
          column: 22
        },
        end: {
          line: 114,
          column: 58
        }
      },
      "52": {
        start: {
          line: 115,
          column: 2
        },
        end: {
          line: 115,
          column: 69
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 2
          },
          end: {
            line: 7,
            column: 3
          }
        },
        loc: {
          start: {
            line: 7,
            column: 61
          },
          end: {
            line: 13,
            column: 3
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 2
          },
          end: {
            line: 15,
            column: 3
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 32,
            column: 3
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 34,
            column: 2
          },
          end: {
            line: 34,
            column: 3
          }
        },
        loc: {
          start: {
            line: 34,
            column: 14
          },
          end: {
            line: 37,
            column: 3
          }
        },
        line: 34
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 39,
            column: 2
          },
          end: {
            line: 39,
            column: 3
          }
        },
        loc: {
          start: {
            line: 39,
            column: 14
          },
          end: {
            line: 45,
            column: 3
          }
        },
        line: 39
      },
      "4": {
        name: "retryWithBackoff",
        decl: {
          start: {
            line: 48,
            column: 15
          },
          end: {
            line: 48,
            column: 31
          }
        },
        loc: {
          start: {
            line: 48,
            column: 88
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 48
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 67,
            column: 24
          },
          end: {
            line: 67,
            column: 25
          }
        },
        loc: {
          start: {
            line: 67,
            column: 35
          },
          end: {
            line: 67,
            column: 66
          }
        },
        line: 67
      },
      "6": {
        name: "fetchWithTimeout",
        decl: {
          start: {
            line: 74,
            column: 15
          },
          end: {
            line: 74,
            column: 31
          }
        },
        loc: {
          start: {
            line: 74,
            column: 68
          },
          end: {
            line: 111,
            column: 1
          }
        },
        line: 74
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 82,
            column: 37
          },
          end: {
            line: 82,
            column: 38
          }
        },
        loc: {
          start: {
            line: 82,
            column: 52
          },
          end: {
            line: 87,
            column: 3
          }
        },
        line: 82
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 83,
            column: 27
          },
          end: {
            line: 83,
            column: 28
          }
        },
        loc: {
          start: {
            line: 83,
            column: 33
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 83
      },
      "9": {
        name: "isJsonResponse",
        decl: {
          start: {
            line: 113,
            column: 9
          },
          end: {
            line: 113,
            column: 23
          }
        },
        loc: {
          start: {
            line: 113,
            column: 34
          },
          end: {
            line: 116,
            column: 1
          }
        },
        line: 113
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 7,
            column: 14
          },
          end: {
            line: 7,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 7,
            column: 33
          },
          end: {
            line: 7,
            column: 34
          }
        }],
        line: 7
      },
      "1": {
        loc: {
          start: {
            line: 7,
            column: 36
          },
          end: {
            line: 7,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 7,
            column: 54
          },
          end: {
            line: 7,
            column: 59
          }
        }],
        line: 7
      },
      "2": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "3": {
        loc: {
          start: {
            line: 17,
            column: 6
          },
          end: {
            line: 21,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 6
          },
          end: {
            line: 21,
            column: 7
          }
        }, {
          start: {
            line: 19,
            column: 13
          },
          end: {
            line: 21,
            column: 7
          }
        }],
        line: 17
      },
      "4": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "5": {
        loc: {
          start: {
            line: 48,
            column: 36
          },
          end: {
            line: 48,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 48,
            column: 49
          },
          end: {
            line: 48,
            column: 50
          }
        }],
        line: 48
      },
      "6": {
        loc: {
          start: {
            line: 48,
            column: 52
          },
          end: {
            line: 48,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 48,
            column: 64
          },
          end: {
            line: 48,
            column: 68
          }
        }],
        line: 48
      },
      "7": {
        loc: {
          start: {
            line: 48,
            column: 70
          },
          end: {
            line: 48,
            column: 86
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 48,
            column: 81
          },
          end: {
            line: 48,
            column: 86
          }
        }],
        line: 48
      },
      "8": {
        loc: {
          start: {
            line: 57,
            column: 6
          },
          end: {
            line: 59,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 6
          },
          end: {
            line: 59,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "9": {
        loc: {
          start: {
            line: 74,
            column: 37
          },
          end: {
            line: 74,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 74,
            column: 47
          },
          end: {
            line: 74,
            column: 49
          }
        }],
        line: 74
      },
      "10": {
        loc: {
          start: {
            line: 74,
            column: 51
          },
          end: {
            line: 74,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 74,
            column: 61
          },
          end: {
            line: 74,
            column: 66
          }
        }],
        line: 74
      },
      "11": {
        loc: {
          start: {
            line: 95,
            column: 55
          },
          end: {
            line: 95,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 55
          },
          end: {
            line: 95,
            column: 70
          }
        }, {
          start: {
            line: 95,
            column: 74
          },
          end: {
            line: 95,
            column: 76
          }
        }],
        line: 95
      },
      "12": {
        loc: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "13": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 106,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 106,
            column: 13
          }
        }, {
          start: {
            line: 106,
            column: 17
          },
          end: {
            line: 106,
            column: 44
          }
        }],
        line: 106
      },
      "14": {
        loc: {
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 115,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 115,
            column: 23
          }
        }, {
          start: {
            line: 115,
            column: 27
          },
          end: {
            line: 115,
            column: 67
          }
        }],
        line: 115
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0],
      "7": [0],
      "8": [0, 0],
      "9": [0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5463876cde367b7326683557a6f8599705aaa8ca"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2piixth3qh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2piixth3qh();
/**
 * Utilidades de resiliencia para APIs externas
 * Incluye retry logic, circuit breaker y timeouts
 */

class CircuitBreaker {
  constructor(failureThreshold =
  /* istanbul ignore next */
  (cov_2piixth3qh().b[0][0]++, 3), recoveryTimeout =
  /* istanbul ignore next */
  (cov_2piixth3qh().b[1][0]++, 60000)) {
    /* istanbul ignore next */
    cov_2piixth3qh().f[0]++;
    cov_2piixth3qh().s[0]++;
    this.failureThreshold = failureThreshold;
    /* istanbul ignore next */
    cov_2piixth3qh().s[1]++;
    this.recoveryTimeout = recoveryTimeout;
    /* istanbul ignore next */
    cov_2piixth3qh().s[2]++;
    this.failureCount = 0;
    /* istanbul ignore next */
    cov_2piixth3qh().s[3]++;
    this.lastFailureTime = null;
    /* istanbul ignore next */
    cov_2piixth3qh().s[4]++;
    this.state = 'CLOSED'; // CLOSED, OPEN, HALF_OPEN
  }
  async execute(fn) {
    /* istanbul ignore next */
    cov_2piixth3qh().f[1]++;
    cov_2piixth3qh().s[5]++;
    if (this.state === 'OPEN') {
      /* istanbul ignore next */
      cov_2piixth3qh().b[2][0]++;
      cov_2piixth3qh().s[6]++;
      if (Date.now() - this.lastFailureTime > this.recoveryTimeout) {
        /* istanbul ignore next */
        cov_2piixth3qh().b[3][0]++;
        cov_2piixth3qh().s[7]++;
        this.state = 'HALF_OPEN';
      } else {
        /* istanbul ignore next */
        cov_2piixth3qh().b[3][1]++;
        cov_2piixth3qh().s[8]++;
        throw new Error('Circuit breaker is OPEN');
      }
    } else
    /* istanbul ignore next */
    {
      cov_2piixth3qh().b[2][1]++;
    }
    cov_2piixth3qh().s[9]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_2piixth3qh().s[10]++, await fn());
      /* istanbul ignore next */
      cov_2piixth3qh().s[11]++;
      this.onSuccess();
      /* istanbul ignore next */
      cov_2piixth3qh().s[12]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_2piixth3qh().s[13]++;
      this.onFailure();
      /* istanbul ignore next */
      cov_2piixth3qh().s[14]++;
      throw error;
    }
  }
  onSuccess() {
    /* istanbul ignore next */
    cov_2piixth3qh().f[2]++;
    cov_2piixth3qh().s[15]++;
    this.failureCount = 0;
    /* istanbul ignore next */
    cov_2piixth3qh().s[16]++;
    this.state = 'CLOSED';
  }
  onFailure() {
    /* istanbul ignore next */
    cov_2piixth3qh().f[3]++;
    cov_2piixth3qh().s[17]++;
    this.failureCount++;
    /* istanbul ignore next */
    cov_2piixth3qh().s[18]++;
    this.lastFailureTime = Date.now();
    /* istanbul ignore next */
    cov_2piixth3qh().s[19]++;
    if (this.failureCount >= this.failureThreshold) {
      /* istanbul ignore next */
      cov_2piixth3qh().b[4][0]++;
      cov_2piixth3qh().s[20]++;
      this.state = 'OPEN';
    } else
    /* istanbul ignore next */
    {
      cov_2piixth3qh().b[4][1]++;
    }
  }
}
/* istanbul ignore next */
exports.CircuitBreaker = CircuitBreaker;
async function retryWithBackoff(fn, maxRetries =
/* istanbul ignore next */
(cov_2piixth3qh().b[5][0]++, 3), baseDelay =
/* istanbul ignore next */
(cov_2piixth3qh().b[6][0]++, 1000), maxDelay =
/* istanbul ignore next */
(cov_2piixth3qh().b[7][0]++, 10000)) {
  /* istanbul ignore next */
  cov_2piixth3qh().f[4]++;
  let lastError;
  /* istanbul ignore next */
  cov_2piixth3qh().s[21]++;
  for (let attempt =
  /* istanbul ignore next */
  (cov_2piixth3qh().s[22]++, 0); attempt <= maxRetries; attempt++) {
    /* istanbul ignore next */
    cov_2piixth3qh().s[23]++;
    try {
      /* istanbul ignore next */
      cov_2piixth3qh().s[24]++;
      return await fn();
    } catch (error) {
      /* istanbul ignore next */
      cov_2piixth3qh().s[25]++;
      lastError = error;
      /* istanbul ignore next */
      cov_2piixth3qh().s[26]++;
      if (attempt === maxRetries) {
        /* istanbul ignore next */
        cov_2piixth3qh().b[8][0]++;
        cov_2piixth3qh().s[27]++;
        break;
      } else
      /* istanbul ignore next */
      {
        cov_2piixth3qh().b[8][1]++;
      }

      // Exponential backoff with jitter
      const delay =
      /* istanbul ignore next */
      (cov_2piixth3qh().s[28]++, Math.min(baseDelay * Math.pow(2, attempt), maxDelay));
      const jitter =
      /* istanbul ignore next */
      (cov_2piixth3qh().s[29]++, Math.random() * 0.1 * delay);
      const totalDelay =
      /* istanbul ignore next */
      (cov_2piixth3qh().s[30]++, delay + jitter);
      /* istanbul ignore next */
      cov_2piixth3qh().s[31]++;
      console.log(`Retry attempt ${attempt + 1}/${maxRetries} after ${totalDelay.toFixed(0)}ms: ${error.message}`);
      /* istanbul ignore next */
      cov_2piixth3qh().s[32]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_2piixth3qh().f[5]++;
        cov_2piixth3qh().s[33]++;
        return setTimeout(resolve, totalDelay);
      });
    }
  }
  /* istanbul ignore next */
  cov_2piixth3qh().s[34]++;
  throw lastError;
}
async function fetchWithTimeout(url, options =
/* istanbul ignore next */
(cov_2piixth3qh().b[9][0]++, {}), timeout =
/* istanbul ignore next */
(cov_2piixth3qh().b[10][0]++, 10000)) {
  /* istanbul ignore next */
  cov_2piixth3qh().f[6]++;
  const controller =
  /* istanbul ignore next */
  (cov_2piixth3qh().s[35]++, new AbortController());

  // Create a timeout promise that rejects after `timeout` ms.
  // We still call controller.abort() to keep behavior when real fetch supports it,
  // but also race the fetch against this timeout so mocked fetches that ignore
  // the signal don't hang the test.
  let timeoutId;
  const timeoutPromise =
  /* istanbul ignore next */
  (cov_2piixth3qh().s[36]++, new Promise((_, reject) => {
    /* istanbul ignore next */
    cov_2piixth3qh().f[7]++;
    cov_2piixth3qh().s[37]++;
    timeoutId = setTimeout(() => {
      /* istanbul ignore next */
      cov_2piixth3qh().f[8]++;
      cov_2piixth3qh().s[38]++;
      try {
        /* istanbul ignore next */
        cov_2piixth3qh().s[39]++;
        controller.abort();
      } catch (e) {}
      /* istanbul ignore next */
      cov_2piixth3qh().s[40]++;
      reject(new Error(`Request timeout after ${timeout}ms`));
    }, timeout);
  }));
  /* istanbul ignore next */
  cov_2piixth3qh().s[41]++;
  try {
    // Provide conservative default headers to reduce chance of being blocked by upstream providers
    const defaultHeaders =
    /* istanbul ignore next */
    (cov_2piixth3qh().s[42]++, {
      'User-Agent': 'Praevisio/1.0 (+https://praevisio.local)',
      'Accept': 'application/json, text/plain, */*'
    });
    const mergedOptions =
    /* istanbul ignore next */
    (cov_2piixth3qh().s[43]++, {
      ...options,
      headers: {
        ...(
        /* istanbul ignore next */
        (cov_2piixth3qh().b[11][0]++, options.headers) ||
        /* istanbul ignore next */
        (cov_2piixth3qh().b[11][1]++, {})),
        ...defaultHeaders
      },
      signal: controller.signal
    });
    const response =
    /* istanbul ignore next */
    (cov_2piixth3qh().s[44]++, await Promise.race([fetch(url, mergedOptions), timeoutPromise]));
    /* istanbul ignore next */
    cov_2piixth3qh().s[45]++;
    clearTimeout(timeoutId);
    /* istanbul ignore next */
    cov_2piixth3qh().s[46]++;
    return response;
  } catch (error) {
    /* istanbul ignore next */
    cov_2piixth3qh().s[47]++;
    clearTimeout(timeoutId);
    // If the fetch was aborted and produced an AbortError, normalize the message
    /* istanbul ignore next */
    cov_2piixth3qh().s[48]++;
    if (
    /* istanbul ignore next */
    (cov_2piixth3qh().b[13][0]++, error) &&
    /* istanbul ignore next */
    (cov_2piixth3qh().b[13][1]++, error.name === 'AbortError')) {
      /* istanbul ignore next */
      cov_2piixth3qh().b[12][0]++;
      cov_2piixth3qh().s[49]++;
      throw new Error(`Request timeout after ${timeout}ms`);
    } else
    /* istanbul ignore next */
    {
      cov_2piixth3qh().b[12][1]++;
    }
    cov_2piixth3qh().s[50]++;
    throw error;
  }
}
function isJsonResponse(response) {
  /* istanbul ignore next */
  cov_2piixth3qh().f[9]++;
  const contentType =
  /* istanbul ignore next */
  (cov_2piixth3qh().s[51]++, response.headers.get('content-type'));
  /* istanbul ignore next */
  cov_2piixth3qh().s[52]++;
  return !!(
  /* istanbul ignore next */
  (cov_2piixth3qh().b[14][0]++, contentType) &&
  /* istanbul ignore next */
  (cov_2piixth3qh().b[14][1]++, contentType.includes('application/json')));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMnBpaXh0aDNxaCIsImFjdHVhbENvdmVyYWdlIiwiQ2lyY3VpdEJyZWFrZXIiLCJjb25zdHJ1Y3RvciIsImZhaWx1cmVUaHJlc2hvbGQiLCJiIiwicmVjb3ZlcnlUaW1lb3V0IiwiZiIsInMiLCJmYWlsdXJlQ291bnQiLCJsYXN0RmFpbHVyZVRpbWUiLCJzdGF0ZSIsImV4ZWN1dGUiLCJmbiIsIkRhdGUiLCJub3ciLCJFcnJvciIsInJlc3VsdCIsIm9uU3VjY2VzcyIsImVycm9yIiwib25GYWlsdXJlIiwiZXhwb3J0cyIsInJldHJ5V2l0aEJhY2tvZmYiLCJtYXhSZXRyaWVzIiwiYmFzZURlbGF5IiwibWF4RGVsYXkiLCJsYXN0RXJyb3IiLCJhdHRlbXB0IiwiZGVsYXkiLCJNYXRoIiwibWluIiwicG93Iiwiaml0dGVyIiwicmFuZG9tIiwidG90YWxEZWxheSIsImNvbnNvbGUiLCJsb2ciLCJ0b0ZpeGVkIiwibWVzc2FnZSIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCIsImZldGNoV2l0aFRpbWVvdXQiLCJ1cmwiLCJvcHRpb25zIiwidGltZW91dCIsImNvbnRyb2xsZXIiLCJBYm9ydENvbnRyb2xsZXIiLCJ0aW1lb3V0SWQiLCJ0aW1lb3V0UHJvbWlzZSIsIl8iLCJyZWplY3QiLCJhYm9ydCIsImUiLCJkZWZhdWx0SGVhZGVycyIsIm1lcmdlZE9wdGlvbnMiLCJoZWFkZXJzIiwic2lnbmFsIiwicmVzcG9uc2UiLCJyYWNlIiwiZmV0Y2giLCJjbGVhclRpbWVvdXQiLCJuYW1lIiwiaXNKc29uUmVzcG9uc2UiLCJjb250ZW50VHlwZSIsImdldCIsImluY2x1ZGVzIl0sInNvdXJjZXMiOlsicmVzaWxpZW5jZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFV0aWxpZGFkZXMgZGUgcmVzaWxpZW5jaWEgcGFyYSBBUElzIGV4dGVybmFzXG4gKiBJbmNsdXllIHJldHJ5IGxvZ2ljLCBjaXJjdWl0IGJyZWFrZXIgeSB0aW1lb3V0c1xuICovXG5cbmNsYXNzIENpcmN1aXRCcmVha2VyIHtcbiAgY29uc3RydWN0b3IoZmFpbHVyZVRocmVzaG9sZCA9IDMsIHJlY292ZXJ5VGltZW91dCA9IDYwMDAwKSB7XG4gICAgdGhpcy5mYWlsdXJlVGhyZXNob2xkID0gZmFpbHVyZVRocmVzaG9sZDtcbiAgICB0aGlzLnJlY292ZXJ5VGltZW91dCA9IHJlY292ZXJ5VGltZW91dDtcbiAgICB0aGlzLmZhaWx1cmVDb3VudCA9IDA7XG4gICAgdGhpcy5sYXN0RmFpbHVyZVRpbWUgPSBudWxsO1xuICAgIHRoaXMuc3RhdGUgPSAnQ0xPU0VEJzsgLy8gQ0xPU0VELCBPUEVOLCBIQUxGX09QRU5cbiAgfVxuXG4gIGFzeW5jIGV4ZWN1dGUoZm4pIHtcbiAgICBpZiAodGhpcy5zdGF0ZSA9PT0gJ09QRU4nKSB7XG4gICAgICBpZiAoRGF0ZS5ub3coKSAtIHRoaXMubGFzdEZhaWx1cmVUaW1lID4gdGhpcy5yZWNvdmVyeVRpbWVvdXQpIHtcbiAgICAgICAgdGhpcy5zdGF0ZSA9ICdIQUxGX09QRU4nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDaXJjdWl0IGJyZWFrZXIgaXMgT1BFTicpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBmbigpO1xuICAgICAgdGhpcy5vblN1Y2Nlc3MoKTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHRoaXMub25GYWlsdXJlKCk7XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG4gIH1cblxuICBvblN1Y2Nlc3MoKSB7XG4gICAgdGhpcy5mYWlsdXJlQ291bnQgPSAwO1xuICAgIHRoaXMuc3RhdGUgPSAnQ0xPU0VEJztcbiAgfVxuXG4gIG9uRmFpbHVyZSgpIHtcbiAgICB0aGlzLmZhaWx1cmVDb3VudCsrO1xuICAgIHRoaXMubGFzdEZhaWx1cmVUaW1lID0gRGF0ZS5ub3coKTtcbiAgICBpZiAodGhpcy5mYWlsdXJlQ291bnQgPj0gdGhpcy5mYWlsdXJlVGhyZXNob2xkKSB7XG4gICAgICB0aGlzLnN0YXRlID0gJ09QRU4nO1xuICAgIH1cbiAgfVxufVxuXG5hc3luYyBmdW5jdGlvbiByZXRyeVdpdGhCYWNrb2ZmKGZuLCBtYXhSZXRyaWVzID0gMywgYmFzZURlbGF5ID0gMTAwMCwgbWF4RGVsYXkgPSAxMDAwMCkge1xuICBsZXQgbGFzdEVycm9yO1xuXG4gIGZvciAobGV0IGF0dGVtcHQgPSAwOyBhdHRlbXB0IDw9IG1heFJldHJpZXM7IGF0dGVtcHQrKykge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gYXdhaXQgZm4oKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgbGFzdEVycm9yID0gZXJyb3I7XG5cbiAgICAgIGlmIChhdHRlbXB0ID09PSBtYXhSZXRyaWVzKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICAvLyBFeHBvbmVudGlhbCBiYWNrb2ZmIHdpdGggaml0dGVyXG4gICAgICBjb25zdCBkZWxheSA9IE1hdGgubWluKGJhc2VEZWxheSAqIE1hdGgucG93KDIsIGF0dGVtcHQpLCBtYXhEZWxheSk7XG4gICAgICBjb25zdCBqaXR0ZXIgPSBNYXRoLnJhbmRvbSgpICogMC4xICogZGVsYXk7XG4gICAgICBjb25zdCB0b3RhbERlbGF5ID0gZGVsYXkgKyBqaXR0ZXI7XG5cbiAgICAgIGNvbnNvbGUubG9nKGBSZXRyeSBhdHRlbXB0ICR7YXR0ZW1wdCArIDF9LyR7bWF4UmV0cmllc30gYWZ0ZXIgJHt0b3RhbERlbGF5LnRvRml4ZWQoMCl9bXM6ICR7ZXJyb3IubWVzc2FnZX1gKTtcbiAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCB0b3RhbERlbGF5KSk7XG4gICAgfVxuICB9XG5cbiAgdGhyb3cgbGFzdEVycm9yO1xufVxuXG5hc3luYyBmdW5jdGlvbiBmZXRjaFdpdGhUaW1lb3V0KHVybCwgb3B0aW9ucyA9IHt9LCB0aW1lb3V0ID0gMTAwMDApIHtcbiAgY29uc3QgY29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcblxuICAvLyBDcmVhdGUgYSB0aW1lb3V0IHByb21pc2UgdGhhdCByZWplY3RzIGFmdGVyIGB0aW1lb3V0YCBtcy5cbiAgLy8gV2Ugc3RpbGwgY2FsbCBjb250cm9sbGVyLmFib3J0KCkgdG8ga2VlcCBiZWhhdmlvciB3aGVuIHJlYWwgZmV0Y2ggc3VwcG9ydHMgaXQsXG4gIC8vIGJ1dCBhbHNvIHJhY2UgdGhlIGZldGNoIGFnYWluc3QgdGhpcyB0aW1lb3V0IHNvIG1vY2tlZCBmZXRjaGVzIHRoYXQgaWdub3JlXG4gIC8vIHRoZSBzaWduYWwgZG9uJ3QgaGFuZyB0aGUgdGVzdC5cbiAgbGV0IHRpbWVvdXRJZDtcbiAgY29uc3QgdGltZW91dFByb21pc2UgPSBuZXcgUHJvbWlzZSgoXywgcmVqZWN0KSA9PiB7XG4gICAgdGltZW91dElkID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0cnkgeyBjb250cm9sbGVyLmFib3J0KCk7IH0gY2F0Y2ggKGUpIHt9XG4gICAgICByZWplY3QobmV3IEVycm9yKGBSZXF1ZXN0IHRpbWVvdXQgYWZ0ZXIgJHt0aW1lb3V0fW1zYCkpO1xuICAgIH0sIHRpbWVvdXQpO1xuICB9KTtcblxuICB0cnkge1xuICAgIC8vIFByb3ZpZGUgY29uc2VydmF0aXZlIGRlZmF1bHQgaGVhZGVycyB0byByZWR1Y2UgY2hhbmNlIG9mIGJlaW5nIGJsb2NrZWQgYnkgdXBzdHJlYW0gcHJvdmlkZXJzXG4gICAgY29uc3QgZGVmYXVsdEhlYWRlcnMgPSB7XG4gICAgICAnVXNlci1BZ2VudCc6ICdQcmFldmlzaW8vMS4wICgraHR0cHM6Ly9wcmFldmlzaW8ubG9jYWwpJyxcbiAgICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbiwgdGV4dC9wbGFpbiwgKi8qJ1xuICAgIH07XG4gICAgY29uc3QgbWVyZ2VkT3B0aW9ucyA9IHsgLi4ub3B0aW9ucywgaGVhZGVyczogeyAuLi4ob3B0aW9ucy5oZWFkZXJzIHx8IHt9KSwgLi4uZGVmYXVsdEhlYWRlcnMgfSwgc2lnbmFsOiBjb250cm9sbGVyLnNpZ25hbCB9O1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgUHJvbWlzZS5yYWNlKFtcbiAgICAgIGZldGNoKHVybCwgbWVyZ2VkT3B0aW9ucyksXG4gICAgICB0aW1lb3V0UHJvbWlzZVxuICAgIF0pO1xuXG4gICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xuICAgIC8vIElmIHRoZSBmZXRjaCB3YXMgYWJvcnRlZCBhbmQgcHJvZHVjZWQgYW4gQWJvcnRFcnJvciwgbm9ybWFsaXplIHRoZSBtZXNzYWdlXG4gICAgaWYgKGVycm9yICYmIGVycm9yLm5hbWUgPT09ICdBYm9ydEVycm9yJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBSZXF1ZXN0IHRpbWVvdXQgYWZ0ZXIgJHt0aW1lb3V0fW1zYCk7XG4gICAgfVxuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbmZ1bmN0aW9uIGlzSnNvblJlc3BvbnNlKHJlc3BvbnNlKSB7XG4gIGNvbnN0IGNvbnRlbnRUeXBlID0gcmVzcG9uc2UuaGVhZGVycy5nZXQoJ2NvbnRlbnQtdHlwZScpO1xuICByZXR1cm4gISEoY29udGVudFR5cGUgJiYgY29udGVudFR5cGUuaW5jbHVkZXMoJ2FwcGxpY2F0aW9uL2pzb24nKSk7XG59XG5cbmV4cG9ydCB7IENpcmN1aXRCcmVha2VyLCByZXRyeVdpdGhCYWNrb2ZmLCBmZXRjaFdpdGhUaW1lb3V0LCBpc0pzb25SZXNwb25zZSB9OyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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