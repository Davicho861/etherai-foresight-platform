{"version":3,"names":["_server","require","_supertest","_interopRequireDefault","_express","_foodResilience","e","__esModule","default","describe","app","beforeAll","server","listen","afterAll","close","beforeEach","express","use","json","foodResilienceRouter","it","response","request","get","expect","status","toBe","body","country","prices","toHaveLength","summary","averageVolatility","toBeDefined","routes","optimization","recommendedRoutes","post","send","product","timeframe","predictedPrice","confidence","error"],"sources":["food-resilience.test.js"],"sourcesContent":["import { server } from '../mocks/server.js';\nimport request from 'supertest';\nimport express from 'express';\nimport foodResilienceRouter from '../../src/routes/food-resilience.js';\n\n// Atenea's Wisdom: The old, chaotic mocks are banished.\n// We now rely on Hefesto's global, deterministic fetch mock.\n// No direct mocking of integration modules is needed.\n\ndescribe('Food Resilience Routes', () => {\n  let app;\n\n  beforeAll(() => {\n    server.listen();\n    // No long timeouts needed. The Oracle (and mocks) are instantaneous.\n  });\n\n  afterAll(() => {\n    server.close();\n  });\n\n  beforeEach(() => {\n    // Create express app with the router\n    app = express();\n    app.use(express.json());\n    app.use('/api/food-resilience', foodResilienceRouter);\n  });\n\n  describe('GET /api/food-resilience/prices', () => {\n    it('should return food prices for all products', async () => {\n      const response = await request(app).get('/api/food-resilience/prices');\n\n      expect(response.status).toBe(200);\n      expect(response.body.country).toBe('Peru');\n      expect(response.body.prices).toHaveLength(4);\n      expect(response.body.summary.averageVolatility).toBeDefined();\n    });\n  });\n\n  describe('GET /api/food-resilience/supply-chain', () => {\n    it('should return optimized supply chain routes', async () => {\n      const response = await request(app).get('/api/food-resilience/supply-chain');\n\n      expect(response.status).toBe(200);\n      expect(response.body.country).toBe('Peru');\n      expect(response.body.routes).toHaveLength(4);\n      expect(response.body.optimization.recommendedRoutes).toBeDefined();\n    });\n  });\n\n  describe('POST /api/food-resilience/predict', () => {\n    it('should generate price prediction for valid product', async () => {\n      const response = await request(app)\n        .post('/api/food-resilience/predict')\n        .send({ product: 'rice', timeframe: '30_days' });\n\n      expect(response.status).toBe(200);\n      expect(response.body.product).toBe('rice');\n      expect(response.body.predictedPrice).toBeDefined();\n      expect(response.body.confidence).toBeDefined();\n    });\n\n    it('should return 400 for invalid product', async () => {\n      const response = await request(app)\n        .post('/api/food-resilience/predict')\n        .send({ product: '', timeframe: '30_days' });\n\n      expect(response.status).toBe(400);\n      expect(response.body.error).toBe('invalid_product');\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}