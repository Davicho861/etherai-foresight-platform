{"version":3,"names":["_safeFetch","_interopRequireDefault","require","_forceMocks","e","__esModule","default","cov_1bsv226k7i","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","INEIIntegration","constructor","baseUrl","process","env","TEST_MODE","getDemographicData","department","year","url","data","safeFetch","timeout","retries","demographicData","population","poblacion","growthRate","tasa_crecimiento","urbanPopulation","poblacion_urbana","ruralPopulation","poblacion_rural","isMock","error","forceMocksEnabled","console","log","mockDepartments","deptData","source","Error","message","String","getEconomicIndicators","economicData","gdp","pib","unemploymentRate","tasa_desempleo","povertyRate","tasa_pobreza","incomePerCapita","ingreso_per_capita","mockEconomics","econData","_default","exports"],"sources":["INEIIntegration.js"],"sourcesContent":["import safeFetch from '../lib/safeFetch.js';\nimport { forceMocksEnabled } from '../lib/force-mocks.js';\n\nclass INEIIntegration {\n  constructor() {\n    // INEI API base URL\n    this.baseUrl = process.env.TEST_MODE === 'true'\n      ? 'http://mock-api-server:3001/inei' // internal mock server\n      : 'https://iinei.inei.gob.pe/iinei/Servicio.svc';\n  }\n\n  async getDemographicData(department, year) {\n    try {\n      // Attempt to fetch real INEI demographic data\n      // Using INEI service for population data\n      const url = `${this.baseUrl}/ObtenerIndicadores?codigo=1&anio=${year}&ubigeo=${department}`;\n\n      const data = await safeFetch(url, {}, { timeout: 10000, retries: 2 });\n\n      // Process demographic data\n      const demographicData = {\n        department: department || 'Lima',\n        year: year || 2024,\n        population: data.poblacion || 0,\n        growthRate: data.tasa_crecimiento || 0,\n        urbanPopulation: data.poblacion_urbana || 0,\n        ruralPopulation: data.poblacion_rural || 0\n      };\n\n      return {\n        department,\n        year,\n        demographicData,\n        isMock: false\n      };\n    } catch (error) {\n      if (forceMocksEnabled()) {\n        console.log(`INEIIntegration: returning FORCE_MOCKS mock for ${department} (${year})`);\n        const mockDepartments = {\n          'Lima': { population: 10750000, growthRate: 1.2, urbanPopulation: 9500000, ruralPopulation: 1250000 },\n          'Arequipa': { population: 1600000, growthRate: 1.1, urbanPopulation: 1200000, ruralPopulation: 400000 },\n          'Cusco': { population: 1400000, growthRate: 0.9, urbanPopulation: 500000, ruralPopulation: 900000 },\n          'Trujillo': { population: 1100000, growthRate: 1.0, urbanPopulation: 850000, ruralPopulation: 250000 }\n        };\n\n        const deptData = mockDepartments[department] || {\n          population: 1000000,\n          growthRate: 1.0,\n          urbanPopulation: 700000,\n          ruralPopulation: 300000\n        };\n\n        return {\n          department,\n          year,\n          demographicData: {\n            department,\n            year,\n            population: deptData.population,\n            growthRate: deptData.growthRate,\n            urbanPopulation: deptData.urbanPopulation,\n            ruralPopulation: deptData.ruralPopulation\n          },\n          isMock: true,\n          source: 'FORCE_MOCKS:INEI'\n        };\n      }\n\n      throw new Error(`INEIIntegration failed: ${error && error.message ? error.message : String(error)}`);\n    }\n  }\n\n  async getEconomicIndicators(department, year) {\n    try {\n      // Attempt to fetch real INEI economic indicators\n      const url = `${this.baseUrl}/ObtenerIndicadores?codigo=2&anio=${year}&ubigeo=${department}`;\n\n      const data = await safeFetch(url, {}, { timeout: 10000, retries: 2 });\n\n      const economicData = {\n        department: department || 'Lima',\n        year: year || 2024,\n        gdp: data.pib || 0,\n        unemploymentRate: data.tasa_desempleo || 0,\n        povertyRate: data.tasa_pobreza || 0,\n        incomePerCapita: data.ingreso_per_capita || 0\n      };\n\n      return {\n        department,\n        year,\n        economicData,\n        isMock: false\n      };\n    } catch (error) {\n      if (forceMocksEnabled()) {\n        console.log(`INEIIntegration: returning FORCE_MOCKS mock economic for ${department} (${year})`);\n        const mockEconomics = {\n          'Lima': { gdp: 45000000, unemploymentRate: 6.5, povertyRate: 15.2, incomePerCapita: 18000 },\n          'Arequipa': { gdp: 8500000, unemploymentRate: 7.2, povertyRate: 18.5, incomePerCapita: 12000 },\n          'Cusco': { gdp: 6500000, unemploymentRate: 8.1, povertyRate: 22.3, incomePerCapita: 9500 },\n          'Trujillo': { gdp: 7200000, unemploymentRate: 7.8, povertyRate: 20.1, incomePerCapita: 11000 }\n        };\n\n        const econData = mockEconomics[department] || {\n          gdp: 10000000,\n          unemploymentRate: 7.0,\n          povertyRate: 18.0,\n          incomePerCapita: 13000\n        };\n\n        return {\n          department,\n          year,\n          economicData: {\n            department,\n            year,\n            gdp: econData.gdp,\n            unemploymentRate: econData.unemploymentRate,\n            povertyRate: econData.povertyRate,\n            incomePerCapita: econData.incomePerCapita\n          },\n          isMock: true,\n          source: 'FORCE_MOCKS:INEI'\n        };\n      }\n\n      throw new Error(`INEIIntegration failed: ${error && error.message ? error.message : String(error)}`);\n    }\n  }\n}\n\nexport default INEIIntegration;"],"mappings":"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","ignoreList":[]}