{"version":3,"names":["_express","data","_interopRequireDefault","require","_agents","e","__esModule","default","router","express","Router","get","req","res","countries","days","query","countriesArray","split","map","c","trim","toUpperCase","agent","MetatronAgent","result","run","parseInt","json","success","timestamp","Date","toISOString","error","console","message","status","analysis","reportContent","Object","entries","resilienceAnalysis","country","socialEvents","resilienceScore","toFixed","recommendations","join","period","startDate","endDate","globalResilienceAssessment","averageResilience","lowResilienceCountries","assessment","globalRecommendations","report","_default","exports"],"sources":["community-resilience.js"],"sourcesContent":["import express from 'express';\nimport MetatronAgent from '../agents.js';\n\nconst router = express.Router();\n\n// GET /api/community-resilience - Get community resilience analysis\nrouter.get('/', async (req, res) => {\n  try {\n    const { countries = 'COL,PER,ARG', days = 30 } = req.query;\n    const countriesArray = countries.split(',').map(c => c.trim().toUpperCase());\n\n    const agent = new MetatronAgent('CommunityResilienceAgent');\n    const result = await agent.run({ countries: countriesArray, days: parseInt(days) });\n\n    res.json({\n      success: true,\n      data: result,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    console.error('[CommunityResilience] Error:', error.message);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n});\n\n// GET /api/community-resilience/report - Generate and return resilience report\nrouter.get('/report', async (req, res) => {\n  try {\n    const { countries = 'COL,PER,ARG', days = 30 } = req.query;\n    const countriesArray = countries.split(',').map(c => c.trim().toUpperCase());\n\n    const agent = new MetatronAgent('CommunityResilienceAgent');\n    const analysis = await agent.run({ countries: countriesArray, days: parseInt(days) });\n\n    // Generate report content\n    const reportContent = `# COMMUNITY_RESILIENCE_REPORT.md\n\n## Análisis de Resiliencia Comunitaria en LATAM\n\n### Timestamp\n${new Date().toISOString()}\n\n### Análisis por País\n${Object.entries(analysis.resilienceAnalysis).map(([country, data]) => `#### ${country}\n- Eventos Sociales: ${data.socialEvents}\n- Puntaje de Resiliencia: ${data.resilienceScore.toFixed(1)}/100\n- Recomendaciones: ${data.recommendations.join(', ')}\n- Período: ${data.period.startDate} a ${data.period.endDate}\n`).join('\\n')}\n\n### Evaluación Global\n- Resiliencia Promedio: ${analysis.globalResilienceAssessment.averageResilience.toFixed(1)}/100\n- Países con Baja Resiliencia: ${analysis.globalResilienceAssessment.lowResilienceCountries}\n- Evaluación: ${analysis.globalResilienceAssessment.assessment}\n- Recomendaciones Globales: ${analysis.globalResilienceAssessment.globalRecommendations.join(', ')}\n\nGenerado por CommunityResilienceAgent - Praevisio AI\n`;\n\n    res.json({\n      success: true,\n      report: reportContent,\n      data: analysis,\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    console.error('[CommunityResilience Report] Error:', error.message);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n});\n\nexport default router;"],"mappings":"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","ignoreList":[]}