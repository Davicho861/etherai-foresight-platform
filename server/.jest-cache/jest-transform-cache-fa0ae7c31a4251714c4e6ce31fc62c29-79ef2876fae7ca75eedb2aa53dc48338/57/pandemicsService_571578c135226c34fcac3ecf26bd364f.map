{"version":3,"names":["_agents","_interopRequireDefault","require","e","__esModule","default","PandemicsService","constructor","agent","MetatronAgent","getPandemicsRiskIndex","regions","healthData","run","analysisType","riskAssessment","console","warn","totalRisk","factors","outbreakSeverity","vaccineCoverage","healthcareCapacity","riskIndex","Math","min","max","error","getPandemicsAnalysis","timestamp","Date","toISOString","analysis","riskLevel","_assessRiskLevel","keyFactors","recommendations","_generateRecommendations","source","message","push","_default","exports"],"sources":["pandemicsService.js"],"sourcesContent":["import MetatronAgent from '../agents.js';\n\n/**\n * Service for calculating global pandemics and health risk index\n * Analyzes global health data to determine pandemic-related risk levels\n */\nclass PandemicsService {\n  constructor() {\n    this.agent = new MetatronAgent('GlobalHealthAgent');\n  }\n\n  /**\n   * Calculates pandemics risk index based on global health indicators\n   * @param {Array<string>} regions - Array of regions to analyze\n   * @returns {Promise<number>} Risk index between 0-100 (0 = low risk, 100 = high risk)\n   */\n  async getPandemicsRiskIndex(regions = ['global']) {\n    try {\n      const healthData = await this.agent.run({\n        regions,\n        analysisType: 'pandemics'\n      });\n\n      if (!healthData || !healthData.riskAssessment) {\n        console.warn('No pandemics data available, returning default risk index');\n        return 15; // Default low-moderate risk\n      }\n\n      // Calculate risk based on various health indicators\n      let totalRisk = 0;\n      let factors = 0;\n\n      if (healthData.riskAssessment.outbreakSeverity) {\n        totalRisk += healthData.riskAssessment.outbreakSeverity * 0.4;\n        factors++;\n      }\n\n      if (healthData.riskAssessment.vaccineCoverage) {\n        // Lower vaccine coverage = higher risk\n        totalRisk += (100 - healthData.riskAssessment.vaccineCoverage) * 0.3;\n        factors++;\n      }\n\n      if (healthData.riskAssessment.healthcareCapacity) {\n        // Lower healthcare capacity = higher risk\n        totalRisk += (100 - healthData.riskAssessment.healthcareCapacity) * 0.3;\n        factors++;\n      }\n\n      const riskIndex = factors > 0 ? totalRisk / factors : 15;\n\n      // Cap at 100\n      return Math.min(Math.max(riskIndex, 0), 100);\n\n    } catch (error) {\n      console.error('Error calculating pandemics risk index:', error);\n      return 15; // Return low-moderate risk as fallback\n    }\n  }\n\n  /**\n   * Gets detailed pandemics risk analysis\n   * @param {Array<string>} regions - Array of regions to analyze\n   * @returns {Promise<object>} Detailed pandemics analysis\n   */\n  async getPandemicsAnalysis(regions = ['global']) {\n    try {\n      const riskIndex = await this.getPandemicsRiskIndex(regions);\n\n      return {\n        timestamp: new Date().toISOString(),\n        riskIndex: riskIndex,\n        regions: regions,\n        analysis: {\n          riskLevel: this._assessRiskLevel(riskIndex),\n          keyFactors: ['Outbreak severity', 'Vaccine coverage', 'Healthcare capacity'],\n          recommendations: this._generateRecommendations(riskIndex)\n        },\n        source: 'PandemicsService'\n      };\n    } catch (error) {\n      console.error('Error in pandemics analysis:', error);\n      return {\n        timestamp: new Date().toISOString(),\n        riskIndex: 15,\n        regions: regions,\n        analysis: {\n          riskLevel: 'Low',\n          keyFactors: ['Outbreak severity', 'Vaccine coverage', 'Healthcare capacity'],\n          recommendations: ['Monitor global health indicators', 'Maintain vaccination programs']\n        },\n        source: 'PandemicsService - Error Fallback',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Assesses risk level based on pandemics risk index\n   * @param {number} riskIndex - The calculated risk index\n   * @returns {string} Risk level description\n   */\n  _assessRiskLevel(riskIndex) {\n    if (riskIndex >= 70) return 'Critical';\n    if (riskIndex >= 40) return 'High';\n    if (riskIndex >= 20) return 'Moderate';\n    return 'Low';\n  }\n\n  /**\n   * Generates recommendations based on risk level\n   * @param {number} riskIndex - The calculated risk index\n   * @returns {Array<string>} Array of recommendations\n   */\n  _generateRecommendations(riskIndex) {\n    const recommendations = [];\n\n    if (riskIndex >= 70) {\n      recommendations.push('Implement emergency health protocols');\n      recommendations.push('Stockpile medical supplies');\n      recommendations.push('Activate international health coordination');\n    } else if (riskIndex >= 40) {\n      recommendations.push('Enhance surveillance systems');\n      recommendations.push('Strengthen healthcare infrastructure');\n      recommendations.push('Accelerate vaccination campaigns');\n    } else if (riskIndex >= 20) {\n      recommendations.push('Monitor emerging health threats');\n      recommendations.push('Maintain public health readiness');\n    } else {\n      recommendations.push('Continue routine health monitoring');\n      recommendations.push('Support global health initiatives');\n    }\n\n    return recommendations;\n  }\n}\n\nexport default PandemicsService;"],"mappings":"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","ignoreList":[]}