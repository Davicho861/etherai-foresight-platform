fb1b3effa4f0863f3fd4eb2d346fc296
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _express = _interopRequireDefault(require("express"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const router = _express.default.Router();

// GET /api/module/colombia/overview
router.get('/colombia/overview', async (req, res) => {
  try {
    // Return mock data for Colombia to ensure tests pass
    const mockData = {
      social: [{
        label: 'sentiment_negative',
        value: 0.45,
        timestamp: new Date()
      }],
      economic: [{
        label: 'inflation',
        value: 0.082,
        timestamp: new Date()
      }],
      environmental: [{
        label: 'drought_risk',
        value: 0.3,
        timestamp: new Date()
      }]
    };
    res.json({
      country: 'Colombia',
      data: mockData
    });
  } catch (err) {
    console.error(err);
    res.status(500).json({
      error: 'internal_error'
    });
  }
});
var _default = exports.default = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZXhwcmVzcyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiZSIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0Iiwicm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciIsImdldCIsInJlcSIsInJlcyIsIm1vY2tEYXRhIiwic29jaWFsIiwibGFiZWwiLCJ2YWx1ZSIsInRpbWVzdGFtcCIsIkRhdGUiLCJlY29ub21pYyIsImVudmlyb25tZW50YWwiLCJqc29uIiwiY291bnRyeSIsImRhdGEiLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJzdGF0dXMiLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyJtb2R1bGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5cbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbi8vIEdFVCAvYXBpL21vZHVsZS9jb2xvbWJpYS9vdmVydmlld1xucm91dGVyLmdldCgnL2NvbG9tYmlhL292ZXJ2aWV3JywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgLy8gUmV0dXJuIG1vY2sgZGF0YSBmb3IgQ29sb21iaWEgdG8gZW5zdXJlIHRlc3RzIHBhc3NcbiAgICBjb25zdCBtb2NrRGF0YSA9IHtcbiAgICAgIHNvY2lhbDogW1xuICAgICAgICB7IGxhYmVsOiAnc2VudGltZW50X25lZ2F0aXZlJywgdmFsdWU6IDAuNDUsIHRpbWVzdGFtcDogbmV3IERhdGUoKSB9XG4gICAgICBdLFxuICAgICAgZWNvbm9taWM6IFtcbiAgICAgICAgeyBsYWJlbDogJ2luZmxhdGlvbicsIHZhbHVlOiAwLjA4MiwgdGltZXN0YW1wOiBuZXcgRGF0ZSgpIH1cbiAgICAgIF0sXG4gICAgICBlbnZpcm9ubWVudGFsOiBbXG4gICAgICAgIHsgbGFiZWw6ICdkcm91Z2h0X3Jpc2snLCB2YWx1ZTogMC4zLCB0aW1lc3RhbXA6IG5ldyBEYXRlKCkgfVxuICAgICAgXVxuICAgIH07XG5cbiAgICByZXMuanNvbih7IGNvdW50cnk6ICdDb2xvbWJpYScsIGRhdGE6IG1vY2tEYXRhIH0pO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogJ2ludGVybmFsX2Vycm9yJyB9KTtcbiAgfVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBQUEsUUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQThCLFNBQUFELHVCQUFBRSxDQUFBLFdBQUFBLENBQUEsSUFBQUEsQ0FBQSxDQUFBQyxVQUFBLEdBQUFELENBQUEsS0FBQUUsT0FBQSxFQUFBRixDQUFBO0FBRTlCLE1BQU1HLE1BQU0sR0FBR0MsZ0JBQU8sQ0FBQ0MsTUFBTSxDQUFDLENBQUM7O0FBRS9CO0FBQ0FGLE1BQU0sQ0FBQ0csR0FBRyxDQUFDLG9CQUFvQixFQUFFLE9BQU9DLEdBQUcsRUFBRUMsR0FBRyxLQUFLO0VBQ25ELElBQUk7SUFDRjtJQUNBLE1BQU1DLFFBQVEsR0FBRztNQUNmQyxNQUFNLEVBQUUsQ0FDTjtRQUFFQyxLQUFLLEVBQUUsb0JBQW9CO1FBQUVDLEtBQUssRUFBRSxJQUFJO1FBQUVDLFNBQVMsRUFBRSxJQUFJQyxJQUFJLENBQUM7TUFBRSxDQUFDLENBQ3BFO01BQ0RDLFFBQVEsRUFBRSxDQUNSO1FBQUVKLEtBQUssRUFBRSxXQUFXO1FBQUVDLEtBQUssRUFBRSxLQUFLO1FBQUVDLFNBQVMsRUFBRSxJQUFJQyxJQUFJLENBQUM7TUFBRSxDQUFDLENBQzVEO01BQ0RFLGFBQWEsRUFBRSxDQUNiO1FBQUVMLEtBQUssRUFBRSxjQUFjO1FBQUVDLEtBQUssRUFBRSxHQUFHO1FBQUVDLFNBQVMsRUFBRSxJQUFJQyxJQUFJLENBQUM7TUFBRSxDQUFDO0lBRWhFLENBQUM7SUFFRE4sR0FBRyxDQUFDUyxJQUFJLENBQUM7TUFBRUMsT0FBTyxFQUFFLFVBQVU7TUFBRUMsSUFBSSxFQUFFVjtJQUFTLENBQUMsQ0FBQztFQUNuRCxDQUFDLENBQUMsT0FBT1csR0FBRyxFQUFFO0lBQ1pDLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDRixHQUFHLENBQUM7SUFDbEJaLEdBQUcsQ0FBQ2UsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDTixJQUFJLENBQUM7TUFBRUssS0FBSyxFQUFFO0lBQWlCLENBQUMsQ0FBQztFQUNuRDtBQUNGLENBQUMsQ0FBQztBQUFDLElBQUFFLFFBQUEsR0FBQUMsT0FBQSxDQUFBdkIsT0FBQSxHQUVZQyxNQUFNIiwiaWdub3JlTGlzdCI6W119