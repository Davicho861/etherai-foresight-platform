{"version":3,"names":["WebSocketHandler_exports","__export","WebSocketHandler","kEmitter","kSender","module","exports","__toCommonJS","import_strict_event_emitter","require","import_interceptors","import_matchRequestUrl","import_getCallFrame","Symbol","kStopPropagationPatched","KOnStopPropagation","constructor","url","id","createRequestId","Emitter","callFrame","getCallFrame","Error","__kind","parse","args","clientUrl","URL","pathname","replace","match","matchRequestUrl","resolutionContext","baseUrl","predicate","parsedResult","matches","run","connection","client","resolvedConnection","params","connect","addEventListener","createStopPropagationListener","server","emit","handler","stopPropagationListener","event","propagationStoppedAt","Reflect","get","stopImmediatePropagation","Object","defineProperty","value","configurable","stopPropagation","Proxy","apply","target","thisArg","call"],"sources":["../../../src/core/handlers/WebSocketHandler.ts"],"sourcesContent":["import { Emitter } from 'strict-event-emitter'\nimport { createRequestId } from '@mswjs/interceptors'\nimport type {\n  WebSocketClientConnectionProtocol,\n  WebSocketConnectionData,\n  WebSocketServerConnectionProtocol,\n} from '@mswjs/interceptors/WebSocket'\nimport {\n  type Match,\n  type Path,\n  type PathParams,\n  matchRequestUrl,\n} from '../utils/matching/matchRequestUrl'\nimport { getCallFrame } from '../utils/internal/getCallFrame'\nimport type { HandlerKind } from './common'\n\ntype WebSocketHandlerParsedResult = {\n  match: Match\n}\n\nexport type WebSocketHandlerEventMap = {\n  connection: [args: WebSocketHandlerConnection]\n}\n\nexport interface WebSocketHandlerConnection {\n  client: WebSocketClientConnectionProtocol\n  server: WebSocketServerConnectionProtocol\n  info: WebSocketConnectionData['info']\n  params: PathParams\n}\n\nexport interface WebSocketResolutionContext {\n  baseUrl?: string\n}\n\nexport const kEmitter = Symbol('kEmitter')\nexport const kSender = Symbol('kSender')\nconst kStopPropagationPatched = Symbol('kStopPropagationPatched')\nconst KOnStopPropagation = Symbol('KOnStopPropagation')\n\nexport class WebSocketHandler {\n  private readonly __kind: HandlerKind\n\n  public id: string\n  public callFrame?: string\n\n  protected [kEmitter]: Emitter<WebSocketHandlerEventMap>\n\n  constructor(private readonly url: Path) {\n    this.id = createRequestId()\n\n    this[kEmitter] = new Emitter()\n    this.callFrame = getCallFrame(new Error())\n    this.__kind = 'EventHandler'\n  }\n\n  public parse(args: {\n    url: URL\n    resolutionContext?: WebSocketResolutionContext\n  }): WebSocketHandlerParsedResult {\n    const clientUrl = new URL(args.url)\n\n    /**\n     * @note Remove the Socket.IO path prefix from the WebSocket\n     * client URL. This is an exception to keep the users from\n     * including the implementation details in their handlers.\n     */\n    clientUrl.pathname = clientUrl.pathname.replace(/^\\/socket.io\\//, '/')\n\n    const match = matchRequestUrl(\n      clientUrl,\n      this.url,\n      args.resolutionContext?.baseUrl,\n    )\n\n    return {\n      match,\n    }\n  }\n\n  public predicate(args: {\n    url: URL\n    parsedResult: WebSocketHandlerParsedResult\n  }): boolean {\n    return args.parsedResult.match.matches\n  }\n\n  public async run(\n    connection: Omit<WebSocketHandlerConnection, 'params'>,\n    resolutionContext?: WebSocketResolutionContext,\n  ): Promise<boolean> {\n    const parsedResult = this.parse({\n      url: connection.client.url,\n      resolutionContext,\n    })\n\n    if (!this.predicate({ url: connection.client.url, parsedResult })) {\n      return false\n    }\n\n    const resolvedConnection: WebSocketHandlerConnection = {\n      ...connection,\n      params: parsedResult.match.params || {},\n    }\n\n    return this.connect(resolvedConnection)\n  }\n\n  protected connect(connection: WebSocketHandlerConnection): boolean {\n    // Support `event.stopPropagation()` for various client/server events.\n    connection.client.addEventListener(\n      'message',\n      createStopPropagationListener(this),\n    )\n    connection.client.addEventListener(\n      'close',\n      createStopPropagationListener(this),\n    )\n\n    connection.server.addEventListener(\n      'open',\n      createStopPropagationListener(this),\n    )\n    connection.server.addEventListener(\n      'message',\n      createStopPropagationListener(this),\n    )\n    connection.server.addEventListener(\n      'error',\n      createStopPropagationListener(this),\n    )\n    connection.server.addEventListener(\n      'close',\n      createStopPropagationListener(this),\n    )\n\n    // Emit the connection event on the handler.\n    // This is what the developer adds listeners for.\n    return this[kEmitter].emit('connection', connection)\n  }\n}\n\nfunction createStopPropagationListener(handler: WebSocketHandler) {\n  return function stopPropagationListener(event: Event) {\n    const propagationStoppedAt = Reflect.get(event, 'kPropagationStoppedAt') as\n      | string\n      | undefined\n\n    if (propagationStoppedAt && handler.id !== propagationStoppedAt) {\n      event.stopImmediatePropagation()\n      return\n    }\n\n    Object.defineProperty(event, KOnStopPropagation, {\n      value(this: WebSocketHandler) {\n        Object.defineProperty(event, 'kPropagationStoppedAt', {\n          value: handler.id,\n        })\n      },\n      configurable: true,\n    })\n\n    // Since the same event instance is shared between all client/server objects,\n    // make sure to patch its `stopPropagation` method only once.\n    if (!Reflect.get(event, kStopPropagationPatched)) {\n      event.stopPropagation = new Proxy(event.stopPropagation, {\n        apply: (target, thisArg, args) => {\n          Reflect.get(event, KOnStopPropagation)?.call(handler)\n          return Reflect.apply(target, thisArg, args)\n        },\n      })\n\n      Object.defineProperty(event, kStopPropagationPatched, {\n        value: true,\n        // If something else attempts to redefine this, throw.\n        configurable: false,\n      })\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}