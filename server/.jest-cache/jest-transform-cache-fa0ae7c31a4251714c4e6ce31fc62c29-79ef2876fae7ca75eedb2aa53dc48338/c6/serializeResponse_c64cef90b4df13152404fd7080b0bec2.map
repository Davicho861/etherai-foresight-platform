{"version":3,"names":["serializeResponse_exports","__export","serializeResponse","module","exports","__toCommonJS","import_statuses","__toESM","require","message","default","response","responseClone","clone","responseText","text","responseStatus","status","responseStatusText","statusText","headers","Object","fromEntries","entries","body"],"sources":["../../../../src/core/utils/logging/serializeResponse.ts"],"sourcesContent":["import statuses from '../../../shims/statuses'\n\nconst { message } = statuses\n\nexport interface SerializedResponse {\n  status: number\n  statusText: string\n  headers: Record<string, any>\n  body: string\n}\n\nexport async function serializeResponse(\n  response: Response,\n): Promise<SerializedResponse> {\n  const responseClone = response.clone()\n  const responseText = await responseClone.text()\n\n  // Normalize the response status and status text when logging\n  // since the default Response instance doesn't infer status texts\n  // from status codes. This has no effect on the actual response instance.\n  const responseStatus = responseClone.status || 200\n  const responseStatusText =\n    responseClone.statusText || message[responseStatus] || 'OK'\n\n  return {\n    status: responseStatus,\n    statusText: responseStatusText,\n    headers: Object.fromEntries(responseClone.headers.entries()),\n    body: responseText,\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,yBAAA;AAAAC,QAAA,CAAAD,yBAAA;EAAAE,iBAAA,EAAAA,CAAA,KAAAA;AAAA;AAAAC,MAAA,CAAAC,OAAA,GAAAC,YAAA,CAAAL,yBAAA;AAAA,IAAAM,eAAA,GAAqBC,OAAA,CAAAC,OAAA;AAErB,MAAM;EAAEC;AAAQ,IAAIH,eAAA,CAAAI,OAAA;AASpB,eAAsBR,kBACpBS,QAAA,EAC6B;EAC7B,MAAMC,aAAA,GAAgBD,QAAA,CAASE,KAAA,CAAM;EACrC,MAAMC,YAAA,GAAe,MAAMF,aAAA,CAAcG,IAAA,CAAK;EAK9C,MAAMC,cAAA,GAAiBJ,aAAA,CAAcK,MAAA,IAAU;EAC/C,MAAMC,kBAAA,GACJN,aAAA,CAAcO,UAAA,IAAcV,OAAA,CAAQO,cAAc,KAAK;EAEzD,OAAO;IACLC,MAAA,EAAQD,cAAA;IACRG,UAAA,EAAYD,kBAAA;IACZE,OAAA,EAASC,MAAA,CAAOC,WAAA,CAAYV,aAAA,CAAcQ,OAAA,CAAQG,OAAA,CAAQ,CAAC;IAC3DC,IAAA,EAAMV;EACR;AACF","ignoreList":[]}