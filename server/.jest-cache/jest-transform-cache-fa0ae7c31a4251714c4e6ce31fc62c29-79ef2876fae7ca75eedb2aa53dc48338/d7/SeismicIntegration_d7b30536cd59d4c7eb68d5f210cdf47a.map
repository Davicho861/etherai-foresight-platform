{"version":3,"names":["_axios","_interopRequireDefault","require","_axiosRetry","e","__esModule","default","cov_204n6zvncj","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","USGS_API_URL","process","env","TEST_MODE","getSeismicData","maxAttempts","parseInt","USGS_RETRY_ATTEMPTS","baseDelay","USGS_RETRY_BASE_DELAY_MS","client","axios","create","timeout","interceptors","request","use","response","usedAxiosRetry","axiosRetry","retries","retryDelay","retryCount","Math","pow","retryCondition","error","isNetworkOrIdempotentRequestError","status","err","console","warn","message","get","data","Error","attempt","lastError","delay","Promise","r","setTimeout"],"sources":["SeismicIntegration.js"],"sourcesContent":["import axios from 'axios';\nimport axiosRetry from 'axios-retry';\n\nconst USGS_API_URL = process.env.USGS_API_URL || (process.env.TEST_MODE === 'true'\n  ? 'http://mock-api-server:3001/usgs/summary'\n  : 'https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/significant_day.geojson');\n\n/**\n * Fetches real-time seismic data from the USGS API.\n * @returns {Promise<Object>} A promise that resolves to the GeoJSON data from USGS.\n */\nasync function getSeismicData() {\n  const maxAttempts = parseInt(process.env.USGS_RETRY_ATTEMPTS || '3', 10);\n  const baseDelay = parseInt(process.env.USGS_RETRY_BASE_DELAY_MS || '500', 10);\n\n  // Create axios instance with timeout\n  const client = (axios && typeof axios.create === 'function') ? axios.create({ timeout: 10000 }) : axios;\n\n  // Some tests/mock environments replace axios with a mock that doesn't include\n  // the `interceptors` object. axios-retry expects interceptors to exist. Create\n  // a minimal stub if missing so axios-retry can attach safely in tests.\n  if (client && !client.interceptors) {\n    client.interceptors = {\n      request: { use: () => {} },\n      response: { use: () => {} }\n    };\n  }\n\n  // Configure axios-retry with exponential backoff scaled by baseDelay\n  let usedAxiosRetry = false;\n  try {\n    axiosRetry(client, {\n      retries: maxAttempts,\n      retryDelay: (retryCount) => {\n        return baseDelay * Math.pow(2, retryCount - 1);\n      },\n      retryCondition: (error) => {\n        return axiosRetry.isNetworkOrIdempotentRequestError(error) || (error.response && error.response.status >= 500);\n      }\n    });\n    usedAxiosRetry = true;\n  } catch (err) {\n    // Could not attach axios-retry (common in test mocks). We'll fallback to manual retry below.\n    console.warn('axios-retry attach failed, falling back to manual retry loop:', err && err.message ? err.message : err);\n  }\n\n  if (usedAxiosRetry) {\n    try {\n      const response = await client.get(USGS_API_URL);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching seismic data from USGS after retries:', error);\n      throw new Error('Failed to fetch seismic data.');\n    }\n  }\n\n  // Fallback manual retry (used in test environments where axios-retry couldn't attach)\n  let attempt = 0;\n  let lastError = null;\n  while (attempt < maxAttempts) {\n    try {\n      // Call axios.get without passing the options object so tests that assert\n      // the exact call signature (axios.get(url)) match. The axios instance\n      // created above will still be used when axios-retry attaches.\n      const response = await axios.get(USGS_API_URL);\n      return response.data;\n    } catch (error) {\n      lastError = error;\n      attempt += 1;\n      const delay = baseDelay * Math.pow(2, attempt - 1);\n      console.warn(`getSeismicData attempt ${attempt} failed: ${error?.message || error}. Retrying in ${delay}ms`);\n      if (attempt >= maxAttempts) break;\n      // small sleep\n       \n      await new Promise((r) => setTimeout(r, delay));\n    }\n  }\n\n  console.error('Error fetching seismic data from USGS after manual retries:', lastError);\n  throw new Error('Failed to fetch seismic data.');\n}\n\nexport { getSeismicData };\n"],"mappings":";;;;;;;AAAA;AAAA;AAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA;AAAA;AAAAC,WAAA,GAAAF,sBAAA,CAAAC,OAAA;AAAqC,oCAAAD,uBAAAG,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAAA,SAAAG,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC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","ignoreList":[]}