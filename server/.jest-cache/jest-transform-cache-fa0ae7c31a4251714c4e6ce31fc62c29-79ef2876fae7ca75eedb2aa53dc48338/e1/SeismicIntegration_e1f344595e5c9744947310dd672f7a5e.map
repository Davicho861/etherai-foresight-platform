{"version":3,"names":["_axios","data","_interopRequireDefault","require","_axiosRetry","e","__esModule","default","USGS_API_URL","process","env","TEST_MODE","getSeismicData","maxAttempts","parseInt","USGS_RETRY_ATTEMPTS","baseDelay","USGS_RETRY_BASE_DELAY_MS","client","axios","create","timeout","interceptors","request","use","response","usedAxiosRetry","axiosRetry","retries","retryDelay","retryCount","Math","pow","retryCondition","error","isNetworkOrIdempotentRequestError","status","err","console","warn","message","get","Error","attempt","lastError","delay","Promise","r","setTimeout"],"sources":["SeismicIntegration.js"],"sourcesContent":["import axios from 'axios';\nimport axiosRetry from 'axios-retry';\n\nconst USGS_API_URL = process.env.USGS_API_URL || (process.env.TEST_MODE === 'true'\n  ? 'http://mock-api-server:3001/usgs/summary'\n  : 'https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/significant_day.geojson');\n\n/**\n * Fetches real-time seismic data from the USGS API.\n * @returns {Promise<Object>} A promise that resolves to the GeoJSON data from USGS.\n */\nasync function getSeismicData() {\n  const maxAttempts = parseInt(process.env.USGS_RETRY_ATTEMPTS || '3', 10);\n  const baseDelay = parseInt(process.env.USGS_RETRY_BASE_DELAY_MS || '500', 10);\n\n  // Create axios instance with timeout\n  const client = (axios && typeof axios.create === 'function') ? axios.create({ timeout: 10000 }) : axios;\n\n  // Some tests/mock environments replace axios with a mock that doesn't include\n  // the `interceptors` object. axios-retry expects interceptors to exist. Create\n  // a minimal stub if missing so axios-retry can attach safely in tests.\n  if (client && !client.interceptors) {\n    client.interceptors = {\n      request: { use: () => {} },\n      response: { use: () => {} }\n    };\n  }\n\n  // Configure axios-retry with exponential backoff scaled by baseDelay\n  let usedAxiosRetry = false;\n  try {\n    axiosRetry(client, {\n      retries: maxAttempts,\n      retryDelay: (retryCount) => {\n        return baseDelay * Math.pow(2, retryCount - 1);\n      },\n      retryCondition: (error) => {\n        return axiosRetry.isNetworkOrIdempotentRequestError(error) || (error.response && error.response.status >= 500);\n      }\n    });\n    usedAxiosRetry = true;\n  } catch (err) {\n    // Could not attach axios-retry (common in test mocks). We'll fallback to manual retry below.\n    console.warn('axios-retry attach failed, falling back to manual retry loop:', err && err.message ? err.message : err);\n  }\n\n  if (usedAxiosRetry) {\n    try {\n      const response = await client.get(USGS_API_URL);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching seismic data from USGS after retries:', error);\n      throw new Error('Failed to fetch seismic data.');\n    }\n  }\n\n  // Fallback manual retry (used in test environments where axios-retry couldn't attach)\n  let attempt = 0;\n  let lastError = null;\n  while (attempt < maxAttempts) {\n    try {\n      // Call axios.get without passing the options object so tests that assert\n      // the exact call signature (axios.get(url)) match. The axios instance\n      // created above will still be used when axios-retry attaches.\n      const response = await axios.get(USGS_API_URL);\n      return response.data;\n    } catch (error) {\n      lastError = error;\n      attempt += 1;\n      const delay = baseDelay * Math.pow(2, attempt - 1);\n      console.warn(`getSeismicData attempt ${attempt} failed: ${error?.message || error}. Retrying in ${delay}ms`);\n      if (attempt >= maxAttempts) break;\n      // small sleep\n       \n      await new Promise((r) => setTimeout(r, delay));\n    }\n  }\n\n  console.error('Error fetching seismic data from USGS after manual retries:', lastError);\n  throw new Error('Failed to fetch seismic data.');\n}\n\nexport { getSeismicData };\n"],"mappings":"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","ignoreList":[]}