{"version":3,"names":["_safeFetch","_interopRequireDefault","require","e","__esModule","default","_interopRequireWildcard","t","WeakMap","r","n","o","i","f","__proto__","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","BiodiversityIntegration","constructor","baseUrl","getBiodiversityData","regions","mockData","_generateMockBiodiversityData","error","_fm","Promise","resolve","then","forceMocksEnabled","console","isMock","source","Error","message","String","getSpeciesThreatData","mockThreatData","_generateMockThreatData","_fm2","forceMocksEnabled2","biodiversityData","region","totalSpecies","Math","floor","random","threatenedSpecies","criticallyEndangered","endangered","vulnerable","nearThreatened","leastConcern","dataDeficient","lastUpdated","Date","toISOString","timestamp","globalSummary","totalRegions","length","values","reduce","sum","totalThreatened","threatPercentage","threatCategories","habitatLoss","count","percentage","climateChange","pollution","invasiveSpecies","overexploitation","other","_default","exports"],"sources":["BiodiversityIntegration.js"],"sourcesContent":["import safeFetch from '../lib/safeFetch.js';\n\nclass BiodiversityIntegration {\n  constructor() {\n    // Using IUCN Red List API as primary source for biodiversity data\n    this.baseUrl = 'https://apiv3.iucnredlist.org/api/v3';\n    // Note: IUCN API requires token, but we'll implement with fallback to mock data\n  }\n\n  async getBiodiversityData(regions = ['americas', 'africa', 'asia', 'europe', 'oceania']) {\n    try {\n      // For now, we'll simulate biodiversity data since IUCN API requires authentication\n      // In production, this would use: `${this.baseUrl}/species/region/${region}?token=${process.env.IUCN_TOKEN}`\n      const mockData = this._generateMockBiodiversityData(regions);\n      return mockData;\n    } catch (error) {\n      const _fm = await import('../lib/force-mocks.js');\n      const forceMocksEnabled = _fm.forceMocksEnabled || _fm.default || _fm;\n      if (forceMocksEnabled()) {\n        console.error('BiodiversityIntegration: returning FORCE_MOCKS mock for biodiversity data due to error:', error);\n        return { error: null, regions, isMock: true, source: 'FORCE_MOCKS:Biodiversity' };\n      }\n      console.error('Error fetching biodiversity data:', error);\n      throw new Error(`BiodiversityIntegration failed: ${error && error.message ? error.message : String(error)}`);\n    }\n  }\n\n  async getSpeciesThreatData() {\n    try {\n      // Simulate species threat assessment data\n      const mockThreatData = this._generateMockThreatData();\n      return mockThreatData;\n    } catch (error) {\n      const _fm2 = await import('../lib/force-mocks.js');\n      const forceMocksEnabled2 = _fm2.forceMocksEnabled || _fm2.default || _fm2;\n      if (forceMocksEnabled2()) {\n        console.error('BiodiversityIntegration: returning FORCE_MOCKS mock for threat data due to error:', error);\n        return { error: null, isMock: true, source: 'FORCE_MOCKS:Biodiversity' };\n      }\n      console.error('Error fetching species threat data:', error);\n      throw new Error(`BiodiversityIntegration threat data failed: ${error && error.message ? error.message : String(error)}`);\n    }\n  }\n\n  _generateMockBiodiversityData(regions) {\n    const biodiversityData = {};\n\n    for (const region of regions) {\n      biodiversityData[region] = {\n        totalSpecies: Math.floor(Math.random() * 50000) + 10000,\n        threatenedSpecies: Math.floor(Math.random() * 5000) + 1000,\n        criticallyEndangered: Math.floor(Math.random() * 500) + 50,\n        endangered: Math.floor(Math.random() * 1000) + 100,\n        vulnerable: Math.floor(Math.random() * 2000) + 200,\n        nearThreatened: Math.floor(Math.random() * 1500) + 150,\n        leastConcern: Math.floor(Math.random() * 30000) + 5000,\n        dataDeficient: Math.floor(Math.random() * 2000) + 200,\n        lastUpdated: new Date().toISOString(),\n        source: 'IUCN Red List (Mock Data)',\n        region: region\n      };\n    }\n\n    return {\n      timestamp: new Date().toISOString(),\n      regions: biodiversityData,\n      globalSummary: {\n        totalRegions: regions.length,\n        totalSpecies: Object.values(biodiversityData).reduce((sum, region) => sum + region.totalSpecies, 0),\n        totalThreatened: Object.values(biodiversityData).reduce((sum, region) => sum + region.threatenedSpecies, 0),\n        threatPercentage: 0 // Will be calculated by service\n      },\n      source: 'BiodiversityIntegration',\n      isMock: true\n    };\n  }\n\n  _generateMockThreatData() {\n    return {\n      timestamp: new Date().toISOString(),\n      threatCategories: {\n        habitatLoss: { count: Math.floor(Math.random() * 1000) + 500, percentage: 0 },\n        climateChange: { count: Math.floor(Math.random() * 800) + 300, percentage: 0 },\n        pollution: { count: Math.floor(Math.random() * 600) + 200, percentage: 0 },\n        invasiveSpecies: { count: Math.floor(Math.random() * 400) + 100, percentage: 0 },\n        overexploitation: { count: Math.floor(Math.random() * 500) + 150, percentage: 0 },\n        other: { count: Math.floor(Math.random() * 300) + 50, percentage: 0 }\n      },\n      source: 'IUCN Red List (Mock Data)',\n      isMock: true\n    };\n  }\n}\n\nexport default BiodiversityIntegration;"],"mappings":"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","ignoreList":[]}