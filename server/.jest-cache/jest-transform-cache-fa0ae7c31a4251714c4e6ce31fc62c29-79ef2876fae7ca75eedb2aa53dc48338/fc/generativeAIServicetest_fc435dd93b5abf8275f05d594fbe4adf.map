{"version":3,"names":["_getJestObj","mock","_globals","data","require","jest","mockGenerativeAIService","generatePredictiveNarrative","fn","analyzeRiskCorrelations","switchProvider","doMock","describe","beforeEach","clearAllMocks","mockRiskData","riskIndices","famineRisk","value","confidence","climateExtremesRisk","multiDomainRiskIndex","mockOptions","focusAreas","timeHorizon","detailLevel","language","it","mockResponse","resumenEjecutivo","escenarios","optimista","descripcion","probabilidad","moderado","pesimista","recomendacionesEstrategicas","indicadoresConfianza","general","mockResolvedValue","result","expect","toHaveBeenCalledWith","toEqual","mockImplementation","Error","toHaveProperty","provider","toBe","success","rawResponse","toContain","mockRiskIndices","cryptoVolatilityRisk","mockAnalysis","correlaciones","patrones","implicaciones","mockReturnValue","toHaveBeenCalled","mockNarrative"],"sources":["generativeAIService.test.js"],"sourcesContent":["/**\n * @fileoverview Tests for Generative AI Service\n */\n\nimport { jest } from '@jest/globals';\n\n// Mock axios for API calls\njest.mock('axios');\n\n// Mock the service module before importing\nconst mockGenerativeAIService = {\n  generatePredictiveNarrative: jest.fn(),\n  analyzeRiskCorrelations: jest.fn(),\n  switchProvider: jest.fn(),\n};\n\njest.doMock('../../src/services/generativeAIService.js', () => ({\n  generatePredictiveNarrative: mockGenerativeAIService.generatePredictiveNarrative,\n  analyzeRiskCorrelations: mockGenerativeAIService.analyzeRiskCorrelations,\n  switchProvider: mockGenerativeAIService.switchProvider,\n}));\n\n// Import after mocking - using require for Jest compatibility\nconst { generatePredictiveNarrative, analyzeRiskCorrelations, switchProvider } = require('../../src/services/generativeAIService.js');\n\ndescribe('GenerativeAIService', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('generatePredictiveNarrative', () => {\n    const mockRiskData = {\n      riskIndices: {\n        famineRisk: { value: 25, confidence: 0.85 },\n        climateExtremesRisk: { value: 45, confidence: 0.80 },\n      },\n      multiDomainRiskIndex: { value: 35, confidence: 0.82 },\n    };\n\n    const mockOptions = {\n      focusAreas: ['climate', 'economic'],\n      timeHorizon: '6months',\n      detailLevel: 'comprehensive',\n      language: 'es',\n    };\n\n    it('should generate a predictive narrative successfully', async () => {\n      const mockResponse = {\n        resumenEjecutivo: 'Análisis narrativo generado exitosamente',\n        escenarios: {\n          optimista: { descripcion: 'Escenario favorable', probabilidad: 0.3 },\n          moderado: { descripcion: 'Escenario equilibrado', probabilidad: 0.4 },\n          pesimista: { descripcion: 'Escenario desafiante', probabilidad: 0.3 },\n        },\n        recomendacionesEstrategicas: ['Implementar medidas preventivas'],\n        indicadoresConfianza: { general: 0.8, escenarios: 0.75 },\n      };\n\n      mockGenerativeAIService.generatePredictiveNarrative.mockResolvedValue(mockResponse);\n\n      const result = await generatePredictiveNarrative(mockRiskData, mockOptions);\n\n      expect(mockGenerativeAIService.generatePredictiveNarrative).toHaveBeenCalledWith(mockRiskData, mockOptions);\n      expect(result).toEqual(mockResponse);\n    });\n\n    it('should handle API failures and fallback to mock response', async () => {\n      mockGenerativeAIService.generatePredictiveNarrative.mockImplementation(() => {\n        throw new Error('API Error');\n      });\n\n      const result = await generatePredictiveNarrative(mockRiskData, mockOptions);\n\n      expect(result).toHaveProperty('resumenEjecutivo');\n      expect(result).toHaveProperty('escenarios');\n      expect(result).toHaveProperty('recomendacionesEstrategicas');\n      expect(result).toHaveProperty('indicadoresConfianza');\n      expect(result.provider).toBe('mock');\n      expect(result.success).toBe(true);\n    });\n\n    it('should handle invalid JSON responses gracefully', async () => {\n      mockGenerativeAIService.generatePredictiveNarrative.mockResolvedValue('Invalid JSON response');\n\n      const result = await generatePredictiveNarrative(mockRiskData, mockOptions);\n\n      expect(result.success).toBe(false);\n      expect(result.rawResponse).toBe('Invalid JSON response');\n      expect(result.resumenEjecutivo).toContain('Invalid JSON response');\n    });\n  });\n\n  describe('analyzeRiskCorrelations', () => {\n    const mockRiskIndices = {\n      famineRisk: { value: 25 },\n      climateExtremesRisk: { value: 45 },\n      cryptoVolatilityRisk: { value: 60 },\n    };\n\n    it('should analyze risk correlations successfully', async () => {\n      const mockAnalysis = {\n        correlaciones: ['Fuerte correlación entre riesgo climático y volatilidad cripto'],\n        patrones: ['Patrón de aumento en riesgos interconectados'],\n        implicaciones: ['Necesidad de estrategias integrales'],\n      };\n\n      mockGenerativeAIService.analyzeRiskCorrelations.mockResolvedValue(mockAnalysis);\n\n      const result = await analyzeRiskCorrelations(mockRiskIndices);\n\n      expect(mockGenerativeAIService.analyzeRiskCorrelations).toHaveBeenCalledWith(mockRiskIndices);\n      expect(result).toEqual(mockAnalysis);\n    });\n\n    it('should handle API failures gracefully', async () => {\n      mockGenerativeAIService.analyzeRiskCorrelations.mockImplementation(() => {\n        throw new Error('API Error');\n      });\n\n      const result = await analyzeRiskCorrelations(mockRiskIndices);\n\n      expect(result.correlaciones).toEqual(['Análisis de correlaciones no disponible']);\n      expect(result.patrones).toEqual(['Patrones emergentes requieren análisis de IA']);\n      expect(result.implicaciones).toEqual(['Implementar análisis más detallado cuando IA esté disponible']);\n      expect(result.provider).toBe('error');\n    });\n  });\n\n  describe('switchProvider', () => {\n    it('should switch to the next available provider', () => {\n      mockGenerativeAIService.switchProvider.mockReturnValue('anthropic');\n\n      const result = switchProvider();\n\n      expect(mockGenerativeAIService.switchProvider).toHaveBeenCalled();\n      expect(result).toBe('anthropic');\n    });\n  });\n\n  describe('Integration with Prediction Engine', () => {\n    it('should be callable from prediction engine context', async () => {\n      // This test ensures the service can be imported and used in the prediction engine\n      const mockNarrative = {\n        resumenEjecutivo: 'Integración exitosa con motor de predicción',\n        escenarios: {\n          optimista: { descripcion: 'Mejora continua', probabilidad: 0.4 },\n          moderado: { descripcion: 'Estabilidad', probabilidad: 0.4 },\n          pesimista: { descripcion: 'Desafíos', probabilidad: 0.2 },\n        },\n        recomendacionesEstrategicas: ['Mantener monitoreo continuo'],\n        indicadoresConfianza: { general: 0.85, escenarios: 0.8 },\n      };\n\n      mockGenerativeAIService.generatePredictiveNarrative.mockResolvedValue(mockNarrative);\n\n      const result = await generatePredictiveNarrative({}, {});\n\n      expect(result).toHaveProperty('resumenEjecutivo');\n      expect(result).toHaveProperty('escenarios');\n      expect(result.escenarios).toHaveProperty('optimista');\n      expect(result.escenarios).toHaveProperty('moderado');\n      expect(result.escenarios).toHaveProperty('pesimista');\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}