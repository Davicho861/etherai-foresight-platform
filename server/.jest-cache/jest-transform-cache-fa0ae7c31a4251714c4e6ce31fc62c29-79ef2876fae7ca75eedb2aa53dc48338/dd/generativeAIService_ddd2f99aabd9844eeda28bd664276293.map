{"version":3,"names":["_axios","_interopRequireDefault","require","e","__esModule","default","GENERATIVE_AI_CONFIG","openai","apiKey","process","env","OPENAI_API_KEY","baseURL","model","maxTokens","temperature","anthropic","ANTHROPIC_API_KEY","mock","enabled","responseDelay","activeProvider","switchProvider","providers","Object","keys","filter","p","currentIndex","indexOf","nextIndex","length","console","log","generatePredictiveNarrative","riskData","options","focusAreas","timeHorizon","detailLevel","language","prompt","buildNarrativePrompt","response","callGenerativeAPI","parseNarrativeResponse","error","warn","message","secondError","generateMockNarrative","JSON","stringify","join","config","Error","axios","post","messages","role","content","max_tokens","headers","data","choices","text","parsed","parse","timestamp","Date","toISOString","provider","success","resumenEjecutivo","substring","patronesEmergentes","escenarios","optimista","descripcion","probabilidad","impactos","moderado","pesimista","recomendacionesEstrategicas","indicadoresConfianza","general","rawResponse","Promise","resolve","setTimeout","multiDomainRiskIndex","riskLevel","value","toFixed","analyzeRiskCorrelations","riskIndices","correlaciones","patrones","implicaciones"],"sources":["generativeAIService.js"],"sourcesContent":["/**\n * @fileoverview Generative AI Service for Praevisio AI.\n * This service integrates generative AI capabilities to provide narrative analysis\n * and contextual explanations for risk predictions.\n */\n\nimport axios from 'axios';\n\n// Configuration for generative AI providers\nconst GENERATIVE_AI_CONFIG = {\n  openai: {\n    apiKey: process.env.OPENAI_API_KEY,\n    baseURL: 'https://api.openai.com/v1',\n    model: 'gpt-4o-mini',\n    maxTokens: 1000,\n    temperature: 0.7,\n  },\n  anthropic: {\n    apiKey: process.env.ANTHROPIC_API_KEY,\n    baseURL: 'https://api.anthropic.com/v1',\n    model: 'claude-3-haiku-20240307',\n    maxTokens: 1000,\n    temperature: 0.7,\n  },\n  // Fallback to mock responses if no API keys are available\n  mock: {\n    enabled: true,\n    responseDelay: 500, // ms\n  },\n};\n\n// Current active provider (can be switched based on availability/performance)\nlet activeProvider = 'openai';\n\n/**\n * Switches to the next available generative AI provider.\n * @returns {string} The new active provider.\n */\nfunction switchProvider() {\n  const providers = Object.keys(GENERATIVE_AI_CONFIG).filter(p => p !== 'mock');\n  const currentIndex = providers.indexOf(activeProvider);\n  const nextIndex = (currentIndex + 1) % providers.length;\n  activeProvider = providers[nextIndex];\n  console.log(`[GenerativeAIService] Switched to provider: ${activeProvider}`);\n  return activeProvider;\n}\n\n/**\n * Generates a predictive narrative based on risk indices and data patterns.\n * @param {object} riskData - Current risk indices and related data.\n * @param {object} options - Options for narrative generation.\n * @returns {Promise<object>} Generated narrative with analysis and scenarios.\n */\nasync function generatePredictiveNarrative(riskData, options = {}) {\n  const {\n    focusAreas = ['climate', 'economic', 'social'],\n    timeHorizon = '6months',\n    detailLevel = 'comprehensive',\n    language = 'es',\n  } = options;\n\n  const prompt = buildNarrativePrompt(riskData, { focusAreas, timeHorizon, detailLevel, language });\n\n  try {\n    const response = await callGenerativeAPI(prompt);\n    return parseNarrativeResponse(response);\n  } catch (error) {\n    console.warn(`[GenerativeAIService] Error generating narrative with ${activeProvider}:`, error.message);\n\n    // Try switching provider\n    if (activeProvider !== 'mock') {\n      switchProvider();\n      try {\n        const response = await callGenerativeAPI(prompt);\n        return parseNarrativeResponse(response);\n      } catch (secondError) {\n        console.warn(`[GenerativeAIService] Second provider also failed, using mock response`);\n      }\n    }\n\n    // Fallback to mock response\n    return generateMockNarrative(riskData, options);\n  }\n}\n\n/**\n * Builds a comprehensive prompt for narrative generation.\n * @param {object} riskData - Risk indices and data.\n * @param {object} options - Generation options.\n * @returns {string} The complete prompt.\n */\nfunction buildNarrativePrompt(riskData, options) {\n  const { focusAreas, timeHorizon, detailLevel, language } = options;\n\n  return `Como analista de inteligencia artificial especializado en predicción de riesgos globales, genera un análisis narrativo comprehensivo basado en los siguientes datos de riesgo:\n\nDATOS DE RIESGO ACTUALES:\n${JSON.stringify(riskData, null, 2)}\n\nENFOQUE SOLICITADO:\n- Áreas: ${focusAreas.join(', ')}\n- Horizonte temporal: ${timeHorizon}\n- Nivel de detalle: ${detailLevel}\n- Idioma: ${language === 'es' ? 'Español' : 'Inglés'}\n\nINSTRUCCIONES:\n1. Proporciona un resumen ejecutivo de la situación actual\n2. Identifica patrones emergentes y correlaciones críticas\n3. Genera 3 escenarios hipotéticos (optimista, moderado, pesimista) para los próximos ${timeHorizon}\n4. Evalúa impactos potenciales en cadenas de suministro, estabilidad social y desarrollo sostenible\n5. Recomienda acciones estratégicas basadas en el análisis\n6. Incluye indicadores de confianza para cada predicción\n\nEl análisis debe ser objetivo, basado en datos, y proporcionar insights accionables para toma de decisiones estratégicas.\n\nFORMATO DE RESPUESTA (JSON):\n{\n  \"resumenEjecutivo\": \"string\",\n  \"patronesEmergentes\": [\"string\"],\n  \"escenarios\": {\n    \"optimista\": {\"descripcion\": \"string\", \"probabilidad\": number, \"impactos\": [\"string\"]},\n    \"moderado\": {\"descripcion\": \"string\", \"probabilidad\": number, \"impactos\": [\"string\"]},\n    \"pesimista\": {\"descripcion\": \"string\", \"probabilidad\": number, \"impactos\": [\"string\"]}\n  },\n  \"recomendacionesEstrategicas\": [\"string\"],\n  \"indicadoresConfianza\": {\"general\": number, \"escenarios\": number}\n}`;\n}\n\n/**\n * Calls the active generative AI provider.\n * @param {string} prompt - The prompt to send.\n * @returns {Promise<string>} The API response.\n */\nasync function callGenerativeAPI(prompt) {\n  const config = GENERATIVE_AI_CONFIG[activeProvider];\n\n  if (!config.apiKey && activeProvider !== 'mock') {\n    throw new Error(`API key not configured for provider: ${activeProvider}`);\n  }\n\n  if (activeProvider === 'openai') {\n    const response = await axios.post(`${config.baseURL}/chat/completions`, {\n      model: config.model,\n      messages: [{ role: 'user', content: prompt }],\n      max_tokens: config.maxTokens,\n      temperature: config.temperature,\n    }, {\n      headers: {\n        'Authorization': `Bearer ${config.apiKey}`,\n        'Content-Type': 'application/json',\n      },\n    });\n\n    return response.data.choices[0].message.content;\n  }\n\n  if (activeProvider === 'anthropic') {\n    const response = await axios.post(`${config.baseURL}/messages`, {\n      model: config.model,\n      max_tokens: config.maxTokens,\n      temperature: config.temperature,\n      messages: [{ role: 'user', content: prompt }],\n    }, {\n      headers: {\n        'x-api-key': config.apiKey,\n        'Content-Type': 'application/json',\n        'anthropic-version': '2023-06-01',\n      },\n    });\n\n    return response.data.content[0].text;\n  }\n\n  throw new Error(`Unsupported provider: ${activeProvider}`);\n}\n\n/**\n * Parses the narrative response from the AI provider.\n * @param {string} response - Raw response from the API.\n * @returns {object} Parsed narrative object.\n */\nfunction parseNarrativeResponse(response) {\n  try {\n    // Try to parse as JSON first\n    const parsed = JSON.parse(response);\n    return {\n      ...parsed,\n      timestamp: new Date().toISOString(),\n      provider: activeProvider,\n      success: true,\n    };\n  } catch (error) {\n    // If JSON parsing fails, create a structured response from text\n    console.warn('[GenerativeAIService] Failed to parse JSON response, creating fallback structure');\n    return {\n      resumenEjecutivo: response.substring(0, 500) + '...',\n      patronesEmergentes: ['Análisis generado pero formato no estructurado'],\n      escenarios: {\n        optimista: { descripcion: 'Escenario optimista no disponible', probabilidad: 0.3, impactos: [] },\n        moderado: { descripcion: 'Escenario moderado no disponible', probabilidad: 0.4, impactos: [] },\n        pesimista: { descripcion: 'Escenario pesimista no disponible', probabilidad: 0.3, impactos: [] },\n      },\n      recomendacionesEstrategicas: ['Revisar formato de respuesta de IA generativa'],\n      indicadoresConfianza: { general: 0.5, escenarios: 0.5 },\n      timestamp: new Date().toISOString(),\n      provider: activeProvider,\n      success: false,\n      rawResponse: response,\n    };\n  }\n}\n\n/**\n * Generates a mock narrative response for fallback scenarios.\n * @param {object} riskData - Risk data for mock generation.\n * @param {object} options - Generation options.\n * @returns {Promise<object>} Mock narrative.\n */\nasync function generateMockNarrative(riskData, options) {\n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, GENERATIVE_AI_CONFIG.mock.responseDelay));\n\n  const { multiDomainRiskIndex } = riskData;\n  const riskLevel = multiDomainRiskIndex?.value > 70 ? 'alto' : multiDomainRiskIndex?.value > 40 ? 'medio' : 'bajo';\n\n  return {\n    resumenEjecutivo: `Análisis narrativo simulado: El índice de riesgo multi-dominio actual es ${multiDomainRiskIndex?.value?.toFixed(1) || 'N/A'}, indicando un nivel de riesgo ${riskLevel}.`,\n    patronesEmergentes: [\n      'Correlación entre eventos climáticos extremos y volatilidad económica',\n      'Aumento en riesgos de ciberseguridad en sectores críticos',\n      'Tendencias de resiliencia comunitaria variables por región'\n    ],\n    escenarios: {\n      optimista: {\n        descripcion: 'Estabilización global con reducción de riesgos en todos los dominios',\n        probabilidad: 0.25,\n        impactos: ['Mejora en cadenas de suministro', 'Reducción de volatilidad económica']\n      },\n      moderado: {\n        descripcion: 'Mantención de niveles actuales de riesgo con fluctuaciones regionales',\n        probabilidad: 0.50,\n        impactos: ['Impactos localizados en sectores específicos', 'Oportunidades de adaptación']\n      },\n      pesimista: {\n        descripcion: 'Escalada de riesgos múltiples con eventos disruptivos en cascada',\n        probabilidad: 0.25,\n        impactos: ['Disrupciones mayores en suministro global', 'Inestabilidad social amplificada']\n      },\n    },\n    recomendacionesEstrategicas: [\n      'Implementar monitoreo continuo de indicadores clave',\n      'Desarrollar planes de contingencia multi-dominio',\n      'Fortalecer capacidades de respuesta rápida'\n    ],\n    indicadoresConfianza: { general: 0.7, escenarios: 0.6 },\n    timestamp: new Date().toISOString(),\n    provider: 'mock',\n    success: true,\n  };\n}\n\n/**\n * Analyzes risk correlations using generative AI.\n * @param {object} riskIndices - Current risk indices.\n * @returns {Promise<object>} Correlation analysis.\n */\nasync function analyzeRiskCorrelations(riskIndices) {\n  const prompt = `Analiza las correlaciones entre los siguientes índices de riesgo y proporciona insights sobre patrones emergentes:\n\n${JSON.stringify(riskIndices, null, 2)}\n\nEnfócate en:\n1. Correlaciones fuertes entre diferentes tipos de riesgo\n2. Patrones regionales\n3. Tendencias temporales\n4. Implicaciones para la predicción\n\nProporciona el análisis en formato JSON con campos: correlaciones, patrones, implicaciones.`;\n\n  try {\n    const response = await callGenerativeAPI(prompt);\n    return JSON.parse(response);\n  } catch (error) {\n    return {\n      correlaciones: ['Análisis de correlaciones no disponible'],\n      patrones: ['Patrones emergentes requieren análisis de IA'],\n      implicaciones: ['Implementar análisis más detallado cuando IA esté disponible'],\n      timestamp: new Date().toISOString(),\n      provider: 'error',\n    };\n  }\n}\n\nexport {\n  generatePredictiveNarrative,\n  analyzeRiskCorrelations,\n  switchProvider,\n};"],"mappings":"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","ignoreList":[]}