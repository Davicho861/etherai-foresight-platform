{"version":3,"names":["sms","require","uninstall","sms2","mapSourcePosition","pos","source","line","column","name","wrapCallSite","callSite","Error","prepareStackTrace","err","structuredStackTrace","message","map","func","getFunctionName","file","getFileName","getLineNumber","col","getColumnNumber","join","e","stack","server","global","mswServer","_origConsole","console","noop","log","info","warn","error","__restoreConsole","bind","__silenceConsole","fetch","mockResolvedValue","jest","fn","mockFetch","args","Promise","reject","val","_mockResolvedValue","mockRejectedValue","_mockRejectedValue","Response","Request","nodeFetch","Headers"],"sources":["jest.setup.js"],"sourcesContent":["// Hefesto's Forge: Or치culo de Mocks - REFORGED con MSW\n// El Or치culo intercepta todas las llamadas de red, asegurando que ninguna solicitud real llegue a internet.\n// Proporciona un entorno de pruebas limpio, predecible y r치pido.\n// Disable source-map-support mapping to avoid runtime errors parsing malformed source maps\n// Some dependencies may register source-map-support which can crash when encountering\n// a corrupted or unexpected source map. Uninstall it early in the Jest setup.\ntry {\n   \n  const sms = require('source-map-support');\n  if (sms && typeof sms.uninstall === 'function') sms.uninstall();\n} catch {\n  // ignore if not present\n}\n\n// Defensive patch: if source-map-support is present, override its mapping functions\n// to safe no-ops to avoid crashes when encountering malformed source maps.\ntry {\n   \n  const sms2 = require('source-map-support');\n  if (sms2) {\n    try {\n      if (typeof sms2.mapSourcePosition === 'function') {\n        sms2.mapSourcePosition = (pos) => ({ source: pos.source, line: pos.line, column: pos.column, name: pos.name });\n      }\n      if (typeof sms2.wrapCallSite === 'function') {\n        sms2.wrapCallSite = (callSite) => callSite;\n      }\n    } catch {\n      // ignore\n    }\n  }\n} catch {\n  // ignore if not installed\n}\n\n// Do NOT force FORCE_MOCKS globally here. Individual tests may set\n// process.env.FORCE_MOCKS as needed. Forcing it here caused many\n// tests that expect real responses to always receive mocks.\n\n// Ensure Error.prepareStackTrace is safe during tests: provide a minimal formatter\n// so V8 stack formatting won't call into source-map-support internals.\ntry {\n  Error.prepareStackTrace = (err, structuredStackTrace) => {\n    try {\n      return `${err.name}: ${err.message}\\n` + structuredStackTrace.map((callSite) => {\n        const func = callSite.getFunctionName() || '<anonymous>';\n        const file = callSite.getFileName() || '<unknown>';\n        const line = callSite.getLineNumber() || 0;\n        const col = callSite.getColumnNumber() || 0;\n        return `    at ${func} (${file}:${line}:${col})`;\n      }).join('\\n');\n    } catch (e) {\n      return err.stack || `${err.name}: ${err.message}`;\n    }\n  };\n    } catch {\n      // ignore\n    }\n\n// Importar el Or치culo de Mocks (MSW Server)\nconst { server } = require('./__tests__/mocks/server.js');\n\n// Proporcionar acceso global al servidor para casos especiales\nglobal.mswServer = server;\n\n// Note: per-test cleanup (afterEach) is registered in `jest.setup.backend.js`\n// because `afterEach` is not available when this file runs as a setupFile.\n\n// Replace console methods with no-op wrappers during tests to avoid interleaved logs\n// that can trigger \"Cannot log after tests are done\" or cause lifecycle issues.\n// We keep references to the originals so tests can restore them if needed.\nconst _origConsole = { ...console };\nconst noop = () => {};\nconsole.log = noop;\nconsole.info = noop;\nconsole.warn = noop;\nconsole.error = noop;\n\n// Expose helpers to restore the console if a test needs to see output.\nglobal.__restoreConsole = () => {\n  console.log = _origConsole.log.bind(console);\n  console.info = _origConsole.info.bind(console);\n  console.warn = _origConsole.warn.bind(console);\n  console.error = _origConsole.error.bind(console);\n};\n\n// Expose a helper to temporarily silence console (no-op if already silent)\nglobal.__silenceConsole = () => {\n  console.log = noop;\n  console.info = noop;\n  console.warn = noop;\n  console.error = noop;\n};\n\n// For backward compatibility, log a single startup message via the original console\n// (so maintainers know the mock was installed) but keep runtime output quiet.\n_origConsole.log(\"Hefesto's global fetch mock has been re-forged with proper initialization and is active.\");\n\n// Ensure a global fetch mock exists for tests that call fetch.mockResolvedValue\n// If Node provides a native fetch (node 18+), wrap it; otherwise create a Jest mock.\nif (typeof global.fetch === 'undefined' || typeof global.fetch.mockResolvedValue === 'undefined') {\n  try {\n    // jest may not be defined outside tests; guard access\n     \n    if (typeof jest !== 'undefined' && typeof jest.fn === 'function') {\n      // Ensure fetch is a Jest mock function\n      global.fetch = jest.fn();\n      // Provide a convenient alias used across older tests\n      global.mockFetch = global.fetch;\n    } else {\n      // Fallback: create a minimal mock function with mockResolvedValue API\n      const fn = (...args) => {\n        // default behavior: return a rejected promise to surface unexpected calls\n        return Promise.reject(new Error('global.fetch called in test without explicit mock'));\n      };\n      fn.mockResolvedValue = (val) => { fn._mockResolvedValue = val; return fn; };\n      fn.mockRejectedValue = (err) => { fn._mockRejectedValue = err; return fn; };\n      global.fetch = fn;\n    }\n  } catch {\n    // ignore if we can't define jest mocks in this environment\n  }\n}\n// Defensive: if mockFetch is not set elsewhere, alias it to fetch to support older tests\nif (typeof global.mockFetch === 'undefined') global.mockFetch = global.fetch;\n\n// Ensure global.Response and global.Request exist for tests that construct them\ntry {\n  if (typeof global.Response === 'undefined' || typeof global.Request === 'undefined') {\n    // Use node-fetch exports\n    try {\n      const nodeFetch = require('node-fetch');\n      if (nodeFetch) {\n        global.Response = nodeFetch.Response || global.Response;\n        global.Request = nodeFetch.Request || global.Request;\n        global.Headers = nodeFetch.Headers || global.Headers;\n      }\n    } catch (e) {\n      // ignore if node-fetch not available\n    }\n  }\n} catch (e) {}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;EAEF,MAAMA,GAAG,GAAGC,OAAO,CAAC,oBAAoB,CAAC;EACzC,IAAID,GAAG,IAAI,OAAOA,GAAG,CAACE,SAAS,KAAK,UAAU,EAAEF,GAAG,CAACE,SAAS,CAAC,CAAC;AACjE,CAAC,CAAC,MAAM;EACN;AAAA;;AAGF;AACA;AACA,IAAI;EAEF,MAAMC,IAAI,GAAGF,OAAO,CAAC,oBAAoB,CAAC;EAC1C,IAAIE,IAAI,EAAE;IACR,IAAI;MACF,IAAI,OAAOA,IAAI,CAACC,iBAAiB,KAAK,UAAU,EAAE;QAChDD,IAAI,CAACC,iBAAiB,GAAIC,GAAG,KAAM;UAAEC,MAAM,EAAED,GAAG,CAACC,MAAM;UAAEC,IAAI,EAAEF,GAAG,CAACE,IAAI;UAAEC,MAAM,EAAEH,GAAG,CAACG,MAAM;UAAEC,IAAI,EAAEJ,GAAG,CAACI;QAAK,CAAC,CAAC;MAChH;MACA,IAAI,OAAON,IAAI,CAACO,YAAY,KAAK,UAAU,EAAE;QAC3CP,IAAI,CAACO,YAAY,GAAIC,QAAQ,IAAKA,QAAQ;MAC5C;IACF,CAAC,CAAC,MAAM;MACN;IAAA;EAEJ;AACF,CAAC,CAAC,MAAM;EACN;AAAA;;AAGF;AACA;AACA;;AAEA;AACA;AACA,IAAI;EACFC,KAAK,CAACC,iBAAiB,GAAG,CAACC,GAAG,EAAEC,oBAAoB,KAAK;IACvD,IAAI;MACF,OAAO,GAAGD,GAAG,CAACL,IAAI,KAAKK,GAAG,CAACE,OAAO,IAAI,GAAGD,oBAAoB,CAACE,GAAG,CAAEN,QAAQ,IAAK;QAC9E,MAAMO,IAAI,GAAGP,QAAQ,CAACQ,eAAe,CAAC,CAAC,IAAI,aAAa;QACxD,MAAMC,IAAI,GAAGT,QAAQ,CAACU,WAAW,CAAC,CAAC,IAAI,WAAW;QAClD,MAAMd,IAAI,GAAGI,QAAQ,CAACW,aAAa,CAAC,CAAC,IAAI,CAAC;QAC1C,MAAMC,GAAG,GAAGZ,QAAQ,CAACa,eAAe,CAAC,CAAC,IAAI,CAAC;QAC3C,OAAO,UAAUN,IAAI,KAAKE,IAAI,IAAIb,IAAI,IAAIgB,GAAG,GAAG;MAClD,CAAC,CAAC,CAACE,IAAI,CAAC,IAAI,CAAC;IACf,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV,OAAOZ,GAAG,CAACa,KAAK,IAAI,GAAGb,GAAG,CAACL,IAAI,KAAKK,GAAG,CAACE,OAAO,EAAE;IACnD;EACF,CAAC;AACC,CAAC,CAAC,MAAM;EACN;AAAA;;AAGN;AACA,MAAM;EAAEY;AAAO,CAAC,GAAG3B,OAAO,CAAC,6BAA6B,CAAC;;AAEzD;AACA4B,MAAM,CAACC,SAAS,GAAGF,MAAM;;AAEzB;AACA;;AAEA;AACA;AACA;AACA,MAAMG,YAAY,GAAG;EAAE,GAAGC;AAAQ,CAAC;AACnC,MAAMC,IAAI,GAAGA,CAAA,KAAM,CAAC,CAAC;AACrBD,OAAO,CAACE,GAAG,GAAGD,IAAI;AAClBD,OAAO,CAACG,IAAI,GAAGF,IAAI;AACnBD,OAAO,CAACI,IAAI,GAAGH,IAAI;AACnBD,OAAO,CAACK,KAAK,GAAGJ,IAAI;;AAEpB;AACAJ,MAAM,CAACS,gBAAgB,GAAG,MAAM;EAC9BN,OAAO,CAACE,GAAG,GAAGH,YAAY,CAACG,GAAG,CAACK,IAAI,CAACP,OAAO,CAAC;EAC5CA,OAAO,CAACG,IAAI,GAAGJ,YAAY,CAACI,IAAI,CAACI,IAAI,CAACP,OAAO,CAAC;EAC9CA,OAAO,CAACI,IAAI,GAAGL,YAAY,CAACK,IAAI,CAACG,IAAI,CAACP,OAAO,CAAC;EAC9CA,OAAO,CAACK,KAAK,GAAGN,YAAY,CAACM,KAAK,CAACE,IAAI,CAACP,OAAO,CAAC;AAClD,CAAC;;AAED;AACAH,MAAM,CAACW,gBAAgB,GAAG,MAAM;EAC9BR,OAAO,CAACE,GAAG,GAAGD,IAAI;EAClBD,OAAO,CAACG,IAAI,GAAGF,IAAI;EACnBD,OAAO,CAACI,IAAI,GAAGH,IAAI;EACnBD,OAAO,CAACK,KAAK,GAAGJ,IAAI;AACtB,CAAC;;AAED;AACA;AACAF,YAAY,CAACG,GAAG,CAAC,0FAA0F,CAAC;;AAE5G;AACA;AACA,IAAI,OAAOL,MAAM,CAACY,KAAK,KAAK,WAAW,IAAI,OAAOZ,MAAM,CAACY,KAAK,CAACC,iBAAiB,KAAK,WAAW,EAAE;EAChG,IAAI;IACF;;IAEA,IAAI,OAAOC,IAAI,KAAK,WAAW,IAAI,OAAOA,IAAI,CAACC,EAAE,KAAK,UAAU,EAAE;MAChE;MACAf,MAAM,CAACY,KAAK,GAAGE,IAAI,CAACC,EAAE,CAAC,CAAC;MACxB;MACAf,MAAM,CAACgB,SAAS,GAAGhB,MAAM,CAACY,KAAK;IACjC,CAAC,MAAM;MACL;MACA,MAAMG,EAAE,GAAGA,CAAC,GAAGE,IAAI,KAAK;QACtB;QACA,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIpC,KAAK,CAAC,mDAAmD,CAAC,CAAC;MACvF,CAAC;MACDgC,EAAE,CAACF,iBAAiB,GAAIO,GAAG,IAAK;QAAEL,EAAE,CAACM,kBAAkB,GAAGD,GAAG;QAAE,OAAOL,EAAE;MAAE,CAAC;MAC3EA,EAAE,CAACO,iBAAiB,GAAIrC,GAAG,IAAK;QAAE8B,EAAE,CAACQ,kBAAkB,GAAGtC,GAAG;QAAE,OAAO8B,EAAE;MAAE,CAAC;MAC3Ef,MAAM,CAACY,KAAK,GAAGG,EAAE;IACnB;EACF,CAAC,CAAC,MAAM;IACN;EAAA;AAEJ;AACA;AACA,IAAI,OAAOf,MAAM,CAACgB,SAAS,KAAK,WAAW,EAAEhB,MAAM,CAACgB,SAAS,GAAGhB,MAAM,CAACY,KAAK;;AAE5E;AACA,IAAI;EACF,IAAI,OAAOZ,MAAM,CAACwB,QAAQ,KAAK,WAAW,IAAI,OAAOxB,MAAM,CAACyB,OAAO,KAAK,WAAW,EAAE;IACnF;IACA,IAAI;MACF,MAAMC,SAAS,GAAGtD,OAAO,CAAC,YAAY,CAAC;MACvC,IAAIsD,SAAS,EAAE;QACb1B,MAAM,CAACwB,QAAQ,GAAGE,SAAS,CAACF,QAAQ,IAAIxB,MAAM,CAACwB,QAAQ;QACvDxB,MAAM,CAACyB,OAAO,GAAGC,SAAS,CAACD,OAAO,IAAIzB,MAAM,CAACyB,OAAO;QACpDzB,MAAM,CAAC2B,OAAO,GAAGD,SAAS,CAACC,OAAO,IAAI3B,MAAM,CAAC2B,OAAO;MACtD;IACF,CAAC,CAAC,OAAO9B,CAAC,EAAE;MACV;IAAA;EAEJ;AACF,CAAC,CAAC,OAAOA,CAAC,EAAE,CAAC","ignoreList":[]}