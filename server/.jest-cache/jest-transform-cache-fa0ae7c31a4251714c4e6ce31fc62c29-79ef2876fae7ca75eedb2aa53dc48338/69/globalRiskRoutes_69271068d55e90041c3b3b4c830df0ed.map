{"version":3,"names":["_express","_interopRequireDefault","require","_path","foodSecurityService","_interopRequireWildcard","_cryptoService","climateServiceModule","communityResilienceServiceModule","predictionEngineModule","generativeAIServiceModule","e","__esModule","default","t","WeakMap","r","n","o","i","f","__proto__","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","__dirname","path","resolve","process","cwd","router","express","Router","safeLoad","modulePath","fullPath","modById","resolved","mod","reqErr","specifier","Promise","then","s","importErr","console","error","Error","getServiceInstance","err","req","res","foodService","data","getFoodSecurityIndex","status","json","success","source","message","cryptoIds","query","cryptoList","split","map","id","trim","cryptoService","CryptoServiceModule","serviceData","getCryptoMarketAnalysis","volatilityIndex","undefined","value","unit","topic","timestamp","Date","toISOString","climateService","getClimateExtremesIndex","countries","days","countryList","Array","isArray","c","filter","Boolean","communityService","getCommunityResilienceIndex","Number","avg","globalResilienceAssessment","averageResilience","Math","round","resilienceAnalysis","focusAreas","timeHorizon","detailLevel","language","predictionService","riskData","getRiskIndices","genService","options","a","narrative","generatePredictiveNarrative","_default","exports"],"sources":["globalRiskRoutes.js"],"sourcesContent":["import express from 'express';\nimport path from 'path';\n// Static imports so Jest can mock these modules reliably in tests\nimport * as foodSecurityService from '../services/worldBankService.js';\nimport CryptoServiceModule from '../services/cryptoService.js';\nimport * as climateServiceModule from '../services/climateService.js';\nimport * as communityResilienceServiceModule from '../services/communityResilienceService.js';\nimport * as predictionEngineModule from '../services/predictionEngine.js';\nimport * as generativeAIServiceModule from '../services/generativeAIService.js';\n\n// Resolve a stable __dirname for this module in both ESM and CommonJS\n// test environments. Some test runners (Jest + babel-jest) may not\n// support `import.meta.url` during transformation, which causes\n// \"Cannot use 'import.meta' outside a module\" errors. To avoid that\n// and keep module resolution deterministic, use the repository's\n// `src/routes` folder as base when import.meta is unavailable.\nconst __dirname = path.resolve(process.cwd(), 'src', 'routes');\nconst router = express.Router();\n\n// Helper to dynamically load a module.\n// Prefer CommonJS `require` when available so Jest's module mocks (which\n// commonly patch `require`) are applied. Fallback to dynamic import for\n// true ESM modules or when require isn't available.\nasync function safeLoad(modulePath) {\n  const fullPath = path.resolve(__dirname, modulePath);\n  // Try require first for better compatibility with Jest mocks\n  try {\n    // eslint-disable-next-line global-require, import/no-dynamic-require\n    if (typeof require === 'function') {\n      // Try requiring by the original module path first so Jest's module\n      // mocking (which uses the module id as declared in tests) is applied.\n      try {\n        const modById = require(modulePath);\n        return modById && modById.__esModule ? modById.default || modById : modById;\n      } catch (e) {\n        // If that fails, fall back to absolute resolution\n      }\n      const resolved = require.resolve(fullPath);\n      const mod = require(resolved);\n      return mod && mod.__esModule ? mod.default || mod : mod;\n    }\n  } catch (reqErr) {\n    // Not fatal: fall through to dynamic import\n    // console.debug(`safeLoad require failed for ${modulePath}:`, reqErr.message);\n  }\n\n  // Dynamic import fallback (for ESM-only modules)\n  try {\n    const mod = await import(fullPath);\n    return mod && mod.default ? mod.default : mod;\n  } catch (importErr) {\n    console.error(`Error loading module ${modulePath} via import():`, importErr);\n    throw new Error(`Failed to load module: ${modulePath}`);\n  }\n}\n\n// Helper: given a loaded module, return a usable service object.\nfunction getServiceInstance(mod) {\n  if (!mod) return null;\n  // If module is a constructor (class or function), instantiate it.\n  if (typeof mod === 'function') {\n    try {\n      return new mod();\n    } catch (e) {\n      // If it's a factory function that returns an object when called\n      try {\n        return mod();\n      } catch (err) {\n        return mod;\n      }\n    }\n  }\n  // If module is an object with a default class, instantiate default\n  if (mod && typeof mod === 'object' && mod.default && typeof mod.default === 'function') {\n    try {\n      return new mod.default();\n    } catch (e) {\n      try {\n        return mod.default();\n      } catch (err) {\n        return mod.default || mod;\n      }\n    }\n  }\n  // Otherwise return the module as-is (it may be an object of functions)\n  return mod;\n}\n\n// GET /api/global-risk/food-security \nrouter.get('/food-security', async (req, res) => {\n  try {\n    // Use the statically imported module (tests mock this module)\n    const foodService = getServiceInstance(foodSecurityService) || foodSecurityService;\n    const data = typeof foodService.getFoodSecurityIndex === 'function'\n      ? await foodService.getFoodSecurityIndex()\n      : await (foodService.getFoodSecurityIndex || foodService);\n    \n    res.status(200).json({\n      success: true,\n      source: 'Praevisio-Aion-Simulated-WorldBank',\n      data\n    });\n  } catch (error) {\n    console.error('Error retrieving food security data:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Internal Server Error: Could not retrieve food security data.'\n    });\n  }\n});\n\n// GET /api/global-risk/crypto-volatility\nrouter.get('/crypto-volatility', async (req, res) => {\n  try {\n    const { cryptoIds = 'bitcoin,ethereum' } = req.query;\n    const cryptoList = cryptoIds.split(',').map(id => id.trim());\n    // Use statically imported crypto module so Jest's mockImplementation is used\n    const cryptoService = getServiceInstance(CryptoServiceModule) || CryptoServiceModule;\n    const serviceData = typeof cryptoService.getCryptoMarketAnalysis === 'function'\n      ? await cryptoService.getCryptoMarketAnalysis(cryptoList)\n      : await (cryptoService.getCryptoMarketAnalysis || cryptoService)(cryptoList);\n\n    // Normalize/augment returned service data for backward compatibility\n    if (serviceData && typeof serviceData === 'object') {\n      // If the service provides a volatilityIndex, expose it as `value` to match tests\n      if (serviceData.volatilityIndex !== undefined) {\n        serviceData.value = serviceData.volatilityIndex;\n      }\n      // Add unit and topic defaults if not present\n      serviceData.unit = serviceData.unit || '%';\n      serviceData.topic = serviceData.topic || 'crypto-volatility';\n      // Ensure timestamp exists\n      serviceData.timestamp = serviceData.timestamp || new Date().toISOString();\n    }\n\n    res.status(200).json({\n      success: true,\n      status: 'OK',\n      source: 'Praevisio-Aion-CryptoService',\n      timestamp: new Date().toISOString(),\n      data: serviceData\n    });\n  } catch (error) {\n    console.error('Error retrieving crypto volatility data:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Internal Server Error: Could not retrieve crypto volatility data.'\n    });\n  }\n});\n\n// GET /api/global-risk/climate-extremes\nrouter.get('/climate-extremes', async (req, res) => {\n  try {\n    const climateService = getServiceInstance(climateServiceModule) || climateServiceModule;\n    const serviceData = typeof climateService.getClimateExtremesIndex === 'function'\n      ? await climateService.getClimateExtremesIndex()\n      : await (climateService.getClimateExtremesIndex || climateService);\n\n    res.status(200).json({\n      success: true,\n      source: 'Praevisio-Aion-NASA-POWER-Integration',\n      timestamp: new Date().toISOString(),\n      data: serviceData\n    });\n  } catch (error) {\n    console.error('Error retrieving climate extremes data:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Internal Server Error: Could not retrieve climate extremes data.'\n    });\n  }\n});\n\n// GET /api/global-risk/community-resilience\nrouter.get('/community-resilience', async (req, res) => {\n  try {\n    const { countries = 'COL,PER,ARG', days = 30 } = req.query;\n    const countryList = Array.isArray(countries) ? countries : countries.split(',').map(c => c.trim()).filter(Boolean);\n\n    const communityService = getServiceInstance(communityResilienceServiceModule) || communityResilienceServiceModule;\n    const serviceData = typeof communityService.getCommunityResilienceIndex === 'function'\n      ? await communityService.getCommunityResilienceIndex(countryList, Number(days))\n      : await (communityService.getCommunityResilienceIndex || communityService)(countryList, Number(days));\n\n    // Build a normalized metric value: 100 - averageResilience\n    const avg = serviceData?.globalResilienceAssessment?.averageResilience;\n    const value = typeof avg === 'number' ? Math.round(100 - avg) : undefined;\n\n    const data = {\n      timestamp: serviceData?.timestamp || new Date().toISOString(),\n      topic: 'community-resilience',\n      unit: '%',\n      value,\n      resilienceAnalysis: serviceData?.resilienceAnalysis || {},\n      globalResilienceAssessment: serviceData?.globalResilienceAssessment || {}\n    };\n\n    res.status(200).json({\n      success: true,\n      status: 'OK',\n      source: 'Praevisio-Aion-CommunityResilienceAgent',\n      timestamp: new Date().toISOString(),\n      data\n    });\n  } catch (error) {\n    console.error('Error retrieving community resilience data:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Internal Server Error: Could not retrieve community resilience data.'\n    });\n  }\n});\n\n/**\n * @route GET /api/generative-analysis\n * @description Provides generative AI analysis of risk data with narrative insights.\n * @access Public\n */\nrouter.get('/generative-analysis', async (req, res) => {\n  try {\n    const { focusAreas = ['climate', 'economic', 'social'], timeHorizon = '6months', detailLevel = 'comprehensive', language = 'es' } = req.query;\n\n    const predictionService = getServiceInstance(predictionEngineModule) || predictionEngineModule;\n    const riskData = typeof predictionService.getRiskIndices === 'function'\n      ? await predictionService.getRiskIndices()\n      : await (predictionService.getRiskIndices || predictionService);\n\n    const genService = getServiceInstance(generativeAIServiceModule) || generativeAIServiceModule;\n\n    const options = {\n      focusAreas: Array.isArray(focusAreas) ? focusAreas : focusAreas.split(',').map(a => a.trim()),\n      timeHorizon,\n      detailLevel,\n      language\n    };\n\n    const narrative = typeof genService.generatePredictiveNarrative === 'function'\n      ? await genService.generatePredictiveNarrative(riskData, options)\n      : await (genService.generatePredictiveNarrative || genService)(riskData, options);\n\n    res.status(200).json({\n      success: true,\n      status: 'OK',\n      source: 'Praevisio-Aion-GenerativeAI',\n      timestamp: new Date().toISOString(),\n      data: narrative\n    });\n  } catch (error) {\n    console.error('Error generating AI analysis:', error);\n    res.status(500).json({\n      success: false,\n      message: 'Internal Server Error: Could not generate AI analysis.'\n    });\n  }\n});\n\nexport default router;\n"],"mappings":"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","ignoreList":[]}