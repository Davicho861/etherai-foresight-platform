{"version":3,"names":["_server","require","express","request","describe","beforeAll","server","listen","afterAll","close","beforeEach","jest","resetModules","process","env","NODE_ENV","PRAEVISIO_BEARER_TOKEN","afterEach","clearAllMocks","test","doMock","validateToken","fn","mockResolvedValue","router","default","app","use","res","get","expect","status","toBe","body","toHaveProperty","mockSubscribe","end","e","mockUnsubscribe","mockGetState","mockReturnValue","hello","subscribe","unsubscribe","getState","cookieParser","set","headers","toMatch","text","toHaveBeenCalled","ok","query","token","opts","req","next","now","Date","mocked","expiresAt","generateToken","json","post","send","ttl","toBeDefined","mockRejectedValue","Error"],"sources":["eternalVigilance.routes.test.js"],"sourcesContent":["import { server } from '../mocks/server.js';\nconst express = require('express')\nconst request = require('supertest')\n\ndescribe('eternalVigilance routes - stream and token', () => {\n  beforeAll(() => {\n    server.listen();\n  });\n\n  afterAll(() => {\n    server.close();\n  });\n\n  beforeEach(() => {\n    jest.resetModules()\n    process.env.NODE_ENV = 'test'\n    // ensure predictable default bearer token unless overridden in test\n    process.env.PRAEVISIO_BEARER_TOKEN = process.env.PRAEVISIO_BEARER_TOKEN || 'demo-token'\n  })\n\n  afterEach(() => {\n    delete process.env.PRAEVISIO_BEARER_TOKEN\n    jest.clearAllMocks()\n  })\n\n  test('GET /stream returns 401 when no token provided or invalid', async () => {\n    // mock sseTokenService.validateToken -> false\n    jest.doMock('../../src/sseTokenService.js', () => ({\n      validateToken: jest.fn().mockResolvedValue(false)\n    }))\n\n    const router = require('../../src/routes/eternalVigilanceStream.js').default || require('../../src/routes/eternalVigilanceStream.js')\n    const app = express()\n    app.use('/api/eternal-vigilance', router)\n\n    const res = await request(app).get('/api/eternal-vigilance/stream')\n    expect(res.status).toBe(401)\n    expect(res.body).toHaveProperty('error')\n  })\n\n  test('GET /stream allows static token via cookie and writes initial SSE state', async () => {\n    // mock vigilance service\n    // make subscribe end the response immediately to avoid leaving SSE open\n    const mockSubscribe = jest.fn((res) => {\n      try { res.end() } catch (e) { /* ignore */ }\n    })\n    const mockUnsubscribe = jest.fn()\n    const mockGetState = jest.fn().mockReturnValue({ hello: 'world' })\n    jest.doMock('../../src/eternalVigilanceService.js', () => ({\n      subscribe: mockSubscribe,\n      unsubscribe: mockUnsubscribe,\n      getState: mockGetState\n    }))\n    // mock sseTokenService.validateToken -> false to force static check path\n    jest.doMock('../../src/sseTokenService.js', () => ({\n      validateToken: jest.fn().mockResolvedValue(false)\n    }))\n\n    // ensure static token\n    process.env.PRAEVISIO_BEARER_TOKEN = 'STATIC-TOKEN'\n\n  const router = require('../../src/routes/eternalVigilanceStream.js').default || require('../../src/routes/eternalVigilanceStream.js')\n  const cookieParser = require('cookie-parser')\n  const app = express()\n  app.use(cookieParser())\n  app.use('/api/eternal-vigilance', router)\n\n    const res = await request(app)\n      .get('/api/eternal-vigilance/stream')\n      .set('Cookie', 'praevisio_sse_token=STATIC-TOKEN')\n\n    expect(res.status).toBe(200)\n    expect(res.headers['content-type']).toMatch(/text\\/event-stream/)\n    // initial SSE data includes event:init and the JSON state\n    expect(res.text).toMatch(/\"event\":\"init\"/)\n    expect(mockSubscribe).toHaveBeenCalled()\n  })\n\n  test('GET /stream allows temporary tokens validated by sseTokenService', async () => {\n    const mockSubscribe = jest.fn((res) => { try { res.end() } catch (e) {} })\n    const mockGetState = jest.fn().mockReturnValue({ ok: true })\n    jest.doMock('../../src/eternalVigilanceService.js', () => ({\n      subscribe: mockSubscribe,\n      unsubscribe: jest.fn(),\n      getState: mockGetState\n    }))\n\n    // mock validateToken -> true\n    jest.doMock('../../src/sseTokenService.js', () => ({\n      validateToken: jest.fn().mockResolvedValue(true)\n    }))\n\n  const router = require('../../src/routes/eternalVigilanceStream.js').default || require('../../src/routes/eternalVigilanceStream.js')\n  const app = express()\n  app.use(require('cookie-parser')())\n  app.use('/api/eternal-vigilance', router)\n\n    const res = await request(app)\n      .get('/api/eternal-vigilance/stream')\n      .query({ token: 'TEMP-TOKEN' })\n\n    expect(res.status).toBe(200)\n    expect(res.headers['content-type']).toMatch(/text\\/event-stream/)\n    expect(res.text).toMatch(/\"event\":\"init\"/)\n    expect(mockSubscribe).toHaveBeenCalled()\n  })\n\n  test('POST /token returns token, sets cookie on success', async () => {\n    // mock express-rate-limit to bypass limiter middleware\n    jest.doMock('express-rate-limit', () => (opts) => (req, res, next) => next())\n\n    const now = Date.now()\n    const mocked = { token: 'GEN-TOKEN', expiresAt: now + 60000 }\n    jest.doMock('../../src/sseTokenService.js', () => ({\n      generateToken: jest.fn().mockResolvedValue(mocked)\n    }))\n\n    const router = require('../../src/routes/eternalVigilanceToken.js').default || require('../../src/routes/eternalVigilanceToken.js')\n    const app = express()\n    app.use(express.json())\n    app.use('/api/eternal-vigilance', router)\n\n    const res = await request(app)\n      .post('/api/eternal-vigilance/token')\n      .send({ ttl: 30 })\n\n    expect(res.status).toBe(200)\n    expect(res.body).toHaveProperty('token', 'GEN-TOKEN')\n    expect(res.body).toHaveProperty('expiresAt')\n    // cookie header should be set\n    expect(res.headers['set-cookie']).toBeDefined()\n    expect(res.headers['set-cookie'][0]).toMatch(/praevisio_sse_token=GEN-TOKEN/)\n  })\n\n  test('POST /token returns 500 when generateToken throws', async () => {\n    jest.doMock('express-rate-limit', () => (opts) => (req, res, next) => next())\n    jest.doMock('../../src/sseTokenService.js', () => ({\n      generateToken: jest.fn().mockRejectedValue(new Error('boom'))\n    }))\n\n    const router = require('../../src/routes/eternalVigilanceToken.js').default || require('../../src/routes/eternalVigilanceToken.js')\n    const app = express()\n    app.use(express.json())\n    app.use('/api/eternal-vigilance', router)\n\n    const res = await request(app)\n      .post('/api/eternal-vigilance/token')\n      .send({ ttl: 30 })\n\n    expect(res.status).toBe(500)\n    expect(res.body).toHaveProperty('error')\n  })\n})\n"],"mappings":"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","ignoreList":[]}