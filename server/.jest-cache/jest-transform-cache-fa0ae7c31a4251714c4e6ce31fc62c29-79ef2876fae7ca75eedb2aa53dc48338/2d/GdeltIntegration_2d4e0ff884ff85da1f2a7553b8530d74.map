{"version":3,"names":["_resilience","require","_safeFetch","_interopRequireDefault","_forceMocks","e","__esModule","default","cov_8toah9dr5","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","GdeltIntegration","constructor","native","process","env","NATIVE_DEV_MODE","FORCE_MOCKS","gdeltMockPort","GDELT_MOCK_PORT","baseUrl","TEST_MODE","console","log","isTest","NODE_ENV","circuitBreaker","CircuitBreaker","getSocialEvents","country","startDate","endDate","forceMocksEnabled","getMockSocialEvents","result","execute","CI","retries","baseDelay","maxDelay","retryWithBackoff","query","iso3ToIso2","iso3","map","COL","PER","BRA","MEX","ARG","CHL","c","String","toUpperCase","slice","countryFilter","startDateTime","replace","endDateTime","url","encodeURIComponent","data","safeFetch","headers","Accept","timeout","err","message","includes","Error","events","articles","eventCount","length","intensity","forEach","article","themes","split","period","socialIntensity","isMock","error","mockEvents","id","date","title","event","note","_default","exports"],"sources":["GdeltIntegration.js"],"sourcesContent":["import { CircuitBreaker, retryWithBackoff, fetchWithTimeout, isJsonResponse } from '../utils/resilience.js';\nimport safeFetch from '../lib/safeFetch.js';\nimport { forceMocksEnabled } from '../lib/force-mocks.js';\n\nclass GdeltIntegration {\n  constructor() {\n    const native = process.env.NATIVE_DEV_MODE === 'true' || process.env.FORCE_MOCKS === 'true';\n    const gdeltMockPort = process.env.GDELT_MOCK_PORT || 4020;\n    this.baseUrl = native\n      ? `http://localhost:${gdeltMockPort}/gdelt/events`\n      : (process.env.TEST_MODE === 'true'\n        ? 'http://mock-api-server:3001/gdelt' // internal mock server used in CI\n        : 'https://api.gdeltproject.org/api/v2/doc/doc');\n    // Debug: log which baseUrl is being used to help troubleshoot native dev mode\n\n    console.log(`[GdeltIntegration] NATIVE_DEV_MODE=${process.env.NATIVE_DEV_MODE}; using baseUrl=${this.baseUrl}`);\n    // Use shorter circuit breaker window in tests to avoid long waits/logs\n    const isTest = process.env.NODE_ENV === 'test' || process.env.TEST_MODE === 'true';\n    this.circuitBreaker = new CircuitBreaker(isTest ? 1 : 5, isTest ? 1000 : 600000); // failures, recovery ms\n  }\n\n  async getSocialEvents(country, startDate, endDate) {\n    // Check if FORCE_MOCKS is enabled for testing\n    if (forceMocksEnabled()) {\n      return this.getMockSocialEvents(country, startDate, endDate);\n    }\n\n    // PRAEVISIO ELITE EXPERIENCE: ZERO MOCKS ALLOWED\n    // La belleza sin verdad es una ilusión. Los datos sin explicación son ruido.\n    // Esta integración siempre intenta obtener datos reales, nunca usa mocks.\n\n    try {\n      const result = await this.circuitBreaker.execute(async () => {\n        // Reduce retries/delays when running tests to keep test suites fast and deterministic\n        const isTest = process.env.NODE_ENV === 'test' || process.env.TEST_MODE === 'true' || process.env.CI === 'true';\n        const retries = isTest ? 1 : 3;\n        const baseDelay = isTest ? 50 : 5000; // ms\n        const maxDelay = isTest ? 200 : 30000; // ms\n\n        return await retryWithBackoff(async () => {\n          // GDELT API query for social unrest events\n          // Using keywords like protest, riot, etc.\n          const query = `(protest OR riot OR strike OR demonstration)`;\n          // GDELT expects two-letter country codes in many queries; map common ISO3 -> ISO2\n          const iso3ToIso2 = (iso3) => {\n            if (!iso3) return '';\n            const map = {\n              COL: 'CO', PER: 'PE', BRA: 'BR', MEX: 'MX', ARG: 'AR', CHL: 'CL'\n            };\n            const c = String(iso3).toUpperCase();\n            return map[c] || c.slice(0, 2);\n          };\n          const countryFilter = `sourcecountry:${iso3ToIso2(country)}`;\n\n          const startDateTime = startDate.replace(/-/g, '') + '000000';\n          const endDateTime = endDate.replace(/-/g, '') + '235959';\n\n          const url = `${this.baseUrl}?query=${encodeURIComponent(`${query} ${countryFilter}`)}&startdatetime=${startDateTime}&enddatetime=${endDateTime}&mode=artlist&format=json&maxrecords=250`;\n\n          // Use safeFetch to get parsed JSON with retries and timeout. Add Accept header to favor JSON responses.\n          let data;\n          try {\n            data = await safeFetch(url, { headers: { 'User-Agent': 'Praevisio/1.0 (+https://praevisio.local)', Accept: 'application/json' } }, { timeout: 20000, retries });\n          } catch (err) {\n            // convert known cases into expressive errors for retry logic\n            if (err.message && err.message.includes('429')) {\n              throw new Error(`GDELT API rate limit exceeded: ${err.message}`);\n            }\n            throw err;\n          }\n\n          // Validate data structure\n          if (!data || typeof data !== 'object') {\n            throw new Error('GDELT API returned invalid data structure');\n          }\n\n          // Process articles to count events\n          const events = data.articles || [];\n          const eventCount = events.length;\n\n          // Calculate intensity based on number of articles and themes\n          let intensity = 0;\n          events.forEach(article => {\n            if (article.themes) {\n              const themes = article.themes.split(';');\n              if (themes.includes('PROTEST')) intensity += 2;\n              if (themes.includes('RIOT')) intensity += 3;\n              if (themes.includes('STRIKE')) intensity += 1.5;\n              if (themes.includes('DEMONSTRATION')) intensity += 1;\n            }\n          });\n\n          return {\n            country,\n            period: { start: startDate, end: endDate },\n            eventCount,\n            socialIntensity: intensity,\n            articles: events.slice(0, 10), // Top 10 articles\n            isMock: false\n          };\n        }, retries, baseDelay, maxDelay); // configurable retries/delays (shorter in tests)\n      });\n\n      return result;\n\n    } catch (error) {\n      console.log(`GDELT API failed for ${country} (${startDate}-${endDate}): ${error.message}.`);\n\n      // Check if FORCE_MOCKS is enabled for fallback in tests\n      if (forceMocksEnabled()) {\n        return this.getMockSocialEvents(country, startDate, endDate);\n      }\n\n      // PRAEVISIO ELITE EXPERIENCE: ZERO MOCKS ALLOWED\n      // Si falla la API real, propagar el error - no usar mocks\n      throw new Error(`GDELT API failed for ${country} (${startDate}-${endDate}): ${error && error.message ? error.message : 'Unknown error'}`);\n    }\n  }\n\n  // High-fidelity mock data for fallback when API fails\n  getMockSocialEvents(country, startDate, endDate) {\n    const mockEvents = [\n      {\n        id: 'mock-event-1',\n        date: startDate,\n        country: country,\n        type: 'protest',\n        themes: 'PROTEST;DEMONSTRATION',\n        title: 'Mock Social Protest Event',\n        url: 'https://example.com/mock-event-1'\n      },\n      {\n        id: 'mock-event-2',\n        date: endDate,\n        country: country,\n        type: 'strike',\n        themes: 'STRIKE;LABOR',\n        title: 'Mock Labor Strike Event',\n        url: 'https://example.com/mock-event-2'\n      }\n    ];\n\n    // Calculate intensity based on mock events\n    let intensity = 0;\n    mockEvents.forEach(event => {\n      if (event.themes) {\n        const themes = event.themes.split(';');\n        if (themes.includes('PROTEST')) intensity += 2;\n        if (themes.includes('RIOT')) intensity += 3;\n        if (themes.includes('STRIKE')) intensity += 1.5;\n        if (themes.includes('DEMONSTRATION')) intensity += 1;\n      }\n    });\n\n    return {\n      country,\n      period: { start: startDate, end: endDate },\n      eventCount: mockEvents.length,\n      socialIntensity: intensity,\n      articles: mockEvents.slice(0, 10),\n      isMock: true,\n      note: 'High-fidelity mock data - API unavailable'\n    };\n  }\n}\n\nexport default GdeltIntegration;"],"mappings":"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","ignoreList":[]}