version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: etherai_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: etherai_grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboard.json:/var/lib/grafana/dashboards/apotheosis.json
    networks:
      - monitoring
    depends_on:
      - prometheus

  etherai_server:
    build:
      context: .
      dockerfile: Dockerfile.multi
    container_name: etherai_server
    ports:
      - "4000:4000"
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DB_MOCK=true
      - METRICS_PORT=3000
      - CLUSTER_MODE=true
    networks:
      - monitoring
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:

networks:
  monitoring:
    driver: bridge