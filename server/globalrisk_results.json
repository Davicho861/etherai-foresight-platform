{"numFailedTestSuites":3,"numFailedTests":14,"numPassedTestSuites":0,"numPassedTests":10,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":3,"numTotalTests":24,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1760406598995,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Global Risk Routes","GET /api/global-risk/crypto-volatility"],"duration":32,"failureDetails":[{"matcherResult":{"message":"expect(received).toHaveProperty(path, value)\n\nExpected path: \"data\"\n\n- Expected value  - 18\n+ Received value  +  4\n\n  Object {\n-   \"analysis\": Object {\n-     \"averageVolatility\": 1.85,\n-     \"riskAssessment\": \"Moderate\",\n-     \"totalCryptos\": 2,\n-   },\n-   \"marketData\": Array [\n-     Object {\n-       \"id\": \"bitcoin\",\n-       \"price_change_percentage_24h\": -2.5,\n-     },\n-     Object {\n-       \"id\": \"ethereum\",\n-       \"price_change_percentage_24h\": 1.2,\n-     },\n-   ],\n-   \"source\": \"CryptoService\",\n-   \"timestamp\": \"2025-10-12T17:00:00.000Z\",\n-   \"volatilityIndex\": 35,\n+   \"timestamp\": \"2025-10-14T01:49:59.613Z\",\n+   \"topic\": \"crypto-volatility\",\n+   \"unit\": \"%\",\n+   \"value\": 48,\n  }","pass":false}}],"failureMessages":["Error: expect(received).toHaveProperty(path, value)\n\nExpected path: \"data\"\n\n- Expected value  - 18\n+ Received value  +  4\n\n  Object {\n-   \"analysis\": Object {\n-     \"averageVolatility\": 1.85,\n-     \"riskAssessment\": \"Moderate\",\n-     \"totalCryptos\": 2,\n-   },\n-   \"marketData\": Array [\n-     Object {\n-       \"id\": \"bitcoin\",\n-       \"price_change_percentage_24h\": -2.5,\n-     },\n-     Object {\n-       \"id\": \"ethereum\",\n-       \"price_change_percentage_24h\": 1.2,\n-     },\n-   ],\n-   \"source\": \"CryptoService\",\n-   \"timestamp\": \"2025-10-12T17:00:00.000Z\",\n-   \"volatilityIndex\": 35,\n+   \"timestamp\": \"2025-10-14T01:49:59.613Z\",\n+   \"topic\": \"crypto-volatility\",\n+   \"unit\": \"%\",\n+   \"value\": 48,\n  }\n    at toHaveProperty (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:59:29)\n    at Generator.call (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:2:1)\n    at Generator._invoke [as next] (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:2:1)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Global Risk Routes GET /api/global-risk/crypto-volatility should return crypto volatility data successfully","invocations":1,"location":{"column":5,"line":34},"numPassingAsserts":3,"retryReasons":[],"status":"failed","title":"should return crypto volatility data successfully"},{"ancestorTitles":["Global Risk Routes","GET /api/global-risk/crypto-volatility"],"duration":6,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: [\"solana\", \"cardano\"]\n\nNumber of calls: 0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: [\"solana\", \"cardano\"]\n\nNumber of calls: 0\n    at toHaveBeenCalledWith (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:82:57)\n    at Generator.call (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:2:1)\n    at Generator._invoke [as next] (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:2:1)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Global Risk Routes GET /api/global-risk/crypto-volatility should handle custom crypto IDs parameter","invocations":1,"location":{"column":5,"line":63},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle custom crypto IDs parameter"},{"ancestorTitles":["Global Risk Routes","GET /api/global-risk/crypto-volatility"],"duration":4,"failureDetails":[{}],"failureMessages":["Error: expected 500 \"Internal Server Error\", got 200 \"OK\"\n    at expect (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:90:10)\n    at Generator.call (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:2:1)\n    at Generator._invoke [as next] (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:2:1)\n    at _next (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:2:1)\n    at new Promise (<anonymous>)\n    at Object.<anonymous> (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:2:1)\n    at Promise.then.completed (/home/davicho/etherai-foresight-platform-main/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/davicho/etherai-foresight-platform-main/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/davicho/etherai-foresight-platform-main/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/davicho/etherai-foresight-platform-main/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/davicho/etherai-foresight-platform-main/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/davicho/etherai-foresight-platform-main/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/davicho/etherai-foresight-platform-main/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/davicho/etherai-foresight-platform-main/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/davicho/etherai-foresight-platform-main/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/davicho/etherai-foresight-platform-main/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/davicho/etherai-foresight-platform-main/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/davicho/etherai-foresight-platform-main/node_modules/jest-runner/build/runTest.js:444:34)\n----\n    at Test._assertStatus (/home/davicho/etherai-foresight-platform-main/node_modules/supertest/lib/test.js:252:14)\n    at /home/davicho/etherai-foresight-platform-main/node_modules/supertest/lib/test.js:308:13\n    at Test._assertFunction (/home/davicho/etherai-foresight-platform-main/node_modules/supertest/lib/test.js:285:13)\n    at Test.assert (/home/davicho/etherai-foresight-platform-main/node_modules/supertest/lib/test.js:164:23)\n    at Server.localAssert (/home/davicho/etherai-foresight-platform-main/node_modules/supertest/lib/test.js:120:14)\n    at Object.onceWrapper (node:events:638:28)\n    at Server.emit (node:events:524:28)\n    at emitCloseNT (node:net:2344:8)\n    at processTicksAndRejections (node:internal/process/task_queues:81:21)"],"fullName":"Global Risk Routes GET /api/global-risk/crypto-volatility should handle service errors gracefully","invocations":1,"location":{"column":5,"line":85},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle service errors gracefully"},{"ancestorTitles":["Global Risk Routes","GET /api/global-risk/crypto-volatility"],"duration":4,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: [\"bitcoin\", \"ethereum\"]\n\nNumber of calls: 0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: [\"bitcoin\", \"ethereum\"]\n\nNumber of calls: 0\n    at toHaveBeenCalledWith (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:115:57)\n    at Generator.call (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:2:1)\n    at Generator._invoke [as next] (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js:2:1)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Global Risk Routes GET /api/global-risk/crypto-volatility should use default crypto IDs when none provided","invocations":1,"location":{"column":5,"line":96},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should use default crypto IDs when none provided"}],"endTime":1760406599647,"message":"  ● Global Risk Routes › GET /api/global-risk/crypto-volatility › should return crypto volatility data successfully\n\n    expect(received).toHaveProperty(path, value)\n\n    Expected path: \"data\"\n\n    - Expected value  - 18\n    + Received value  +  4\n\n      Object {\n    -   \"analysis\": Object {\n    -     \"averageVolatility\": 1.85,\n    -     \"riskAssessment\": \"Moderate\",\n    -     \"totalCryptos\": 2,\n    -   },\n    -   \"marketData\": Array [\n    -     Object {\n    -       \"id\": \"bitcoin\",\n    -       \"price_change_percentage_24h\": -2.5,\n    -     },\n    -     Object {\n    -       \"id\": \"ethereum\",\n    -       \"price_change_percentage_24h\": 1.2,\n    -     },\n    -   ],\n    -   \"source\": \"CryptoService\",\n    -   \"timestamp\": \"2025-10-12T17:00:00.000Z\",\n    -   \"volatilityIndex\": 35,\n    +   \"timestamp\": \"2025-10-14T01:49:59.613Z\",\n    +   \"topic\": \"crypto-volatility\",\n    +   \"unit\": \"%\",\n    +   \"value\": 48,\n      }\n\n      57 |       expect(response.body).toHaveProperty('source', 'Praevisio-Aion-CryptoService');\n      58 |       expect(response.body).toHaveProperty('timestamp');\n    > 59 |       expect(response.body).toHaveProperty('data', mockCryptoData);\n         |                             ^\n      60 |       expect(mockCryptoService.getCryptoMarketAnalysis).toHaveBeenCalledWith(['bitcoin', 'ethereum']);\n      61 |     });\n      62 |\n\n      at toHaveProperty (__tests__/routes/globalRiskRoutes.test.js:59:29)\n      at Generator.call (__tests__/routes/globalRiskRoutes.test.js:2:1)\n      at Generator._invoke [as next] (__tests__/routes/globalRiskRoutes.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRiskRoutes.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRiskRoutes.test.js:2:1)\n\n  ● Global Risk Routes › GET /api/global-risk/crypto-volatility › should handle custom crypto IDs parameter\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: [\"solana\", \"cardano\"]\n\n    Number of calls: 0\n\n      80 |         .expect(200);\n      81 |\n    > 82 |       expect(mockCryptoService.getCryptoMarketAnalysis).toHaveBeenCalledWith(['solana', 'cardano']);\n         |                                                         ^\n      83 |     });\n      84 |\n      85 |     test('should handle service errors gracefully', async () => {\n\n      at toHaveBeenCalledWith (__tests__/routes/globalRiskRoutes.test.js:82:57)\n      at Generator.call (__tests__/routes/globalRiskRoutes.test.js:2:1)\n      at Generator._invoke [as next] (__tests__/routes/globalRiskRoutes.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRiskRoutes.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRiskRoutes.test.js:2:1)\n\n  ● Global Risk Routes › GET /api/global-risk/crypto-volatility › should handle service errors gracefully\n\n    expected 500 \"Internal Server Error\", got 200 \"OK\"\n\n      88 |       const response = await request(app)\n      89 |         .get('/api/global-risk/crypto-volatility')\n    > 90 |         .expect(500);\n         |          ^\n      91 |\n      92 |       expect(response.body).toHaveProperty('success', false);\n      93 |       expect(response.body).toHaveProperty('message', 'Internal Server Error: Could not retrieve crypto volatility data.');\n\n      at expect (__tests__/routes/globalRiskRoutes.test.js:90:10)\n      at Generator.call (__tests__/routes/globalRiskRoutes.test.js:2:1)\n      at Generator._invoke [as next] (__tests__/routes/globalRiskRoutes.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRiskRoutes.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRiskRoutes.test.js:2:1)\n      at _next (__tests__/routes/globalRiskRoutes.test.js:2:1)\n      at Object.<anonymous> (__tests__/routes/globalRiskRoutes.test.js:2:1)\n      ----\n      at Test._assertStatus (../node_modules/supertest/lib/test.js:252:14)\n      at ../node_modules/supertest/lib/test.js:308:13\n      at Test._assertFunction (../node_modules/supertest/lib/test.js:285:13)\n      at Test.assert (../node_modules/supertest/lib/test.js:164:23)\n      at Server.localAssert (../node_modules/supertest/lib/test.js:120:14)\n\n  ● Global Risk Routes › GET /api/global-risk/crypto-volatility › should use default crypto IDs when none provided\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: [\"bitcoin\", \"ethereum\"]\n\n    Number of calls: 0\n\n      113 |         .expect(200);\n      114 |\n    > 115 |       expect(mockCryptoService.getCryptoMarketAnalysis).toHaveBeenCalledWith(['bitcoin', 'ethereum']);\n          |                                                         ^\n      116 |     });\n      117 |   });\n      118 | });\n\n      at toHaveBeenCalledWith (__tests__/routes/globalRiskRoutes.test.js:115:57)\n      at Generator.call (__tests__/routes/globalRiskRoutes.test.js:2:1)\n      at Generator._invoke [as next] (__tests__/routes/globalRiskRoutes.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRiskRoutes.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRiskRoutes.test.js:2:1)\n","name":"/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.test.js","startTime":1760406599016,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Global Risk Routes - Expansion Tests","GET /api/global-risk/crypto-volatility - Advanced Scenarios"],"duration":15,"failureDetails":[{"matcherResult":{"actual":71,"expected":65,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 65\nReceived: 71","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 65\nReceived: 71\n    at toBe (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:54:40)\n    at Generator.call (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at Generator._invoke [as next] (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Global Risk Routes - Expansion Tests GET /api/global-risk/crypto-volatility - Advanced Scenarios should handle large cryptocurrency portfolios","invocations":1,"location":{"column":5,"line":34},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle large cryptocurrency portfolios"},{"ancestorTitles":["Global Risk Routes - Expansion Tests","GET /api/global-risk/crypto-volatility - Advanced Scenarios"],"duration":5,"failureDetails":[{"matcherResult":{"actual":61,"expected":95,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 95\nReceived: 61","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 95\nReceived: 61\n    at toBe (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:81:40)\n    at Generator.call (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at Generator._invoke [as next] (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Global Risk Routes - Expansion Tests GET /api/global-risk/crypto-volatility - Advanced Scenarios should handle extreme volatility scenarios","invocations":1,"location":{"column":5,"line":59},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle extreme volatility scenarios"},{"ancestorTitles":["Global Risk Routes - Expansion Tests","GET /api/global-risk/crypto-volatility - Advanced Scenarios"],"duration":6,"failureDetails":[{"matcherResult":{"actual":99,"expected":15,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 15\nReceived: 99","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 15\nReceived: 99\n    at toBe (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:107:40)\n    at Generator.call (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at Generator._invoke [as next] (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Global Risk Routes - Expansion Tests GET /api/global-risk/crypto-volatility - Advanced Scenarios should provide stable low-volatility responses","invocations":1,"location":{"column":5,"line":85},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should provide stable low-volatility responses"},{"ancestorTitles":["Global Risk Routes - Expansion Tests","GET /api/global-risk/crypto-volatility - Advanced Scenarios"],"duration":4,"failureDetails":[{"matcherResult":{"actual":88,"expected":42,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 42\nReceived: 88","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 42\nReceived: 88\n    at toBe (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:130:40)\n    at Generator.call (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at Generator._invoke [as next] (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Global Risk Routes - Expansion Tests GET /api/global-risk/crypto-volatility - Advanced Scenarios should handle single cryptocurrency analysis","invocations":1,"location":{"column":5,"line":111},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle single cryptocurrency analysis"},{"ancestorTitles":["Global Risk Routes - Expansion Tests","GET /api/global-risk/community-resilience - Advanced Scenarios"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"Global Risk Routes - Expansion Tests GET /api/global-risk/community-resilience - Advanced Scenarios should handle multi-country LATAM analysis","invocations":1,"location":{"column":5,"line":136},"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle multi-country LATAM analysis"},{"ancestorTitles":["Global Risk Routes - Expansion Tests","GET /api/global-risk/community-resilience - Advanced Scenarios"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Global Risk Routes - Expansion Tests GET /api/global-risk/community-resilience - Advanced Scenarios should handle extended analysis periods","invocations":1,"location":{"column":5,"line":169},"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle extended analysis periods"},{"ancestorTitles":["Global Risk Routes - Expansion Tests","GET /api/global-risk/community-resilience - Advanced Scenarios"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Global Risk Routes - Expansion Tests GET /api/global-risk/community-resilience - Advanced Scenarios should handle high resilience scenarios","invocations":1,"location":{"column":5,"line":197},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle high resilience scenarios"},{"ancestorTitles":["Global Risk Routes - Expansion Tests","Error Handling and Resilience - Expansion"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Global Risk Routes - Expansion Tests Error Handling and Resilience - Expansion should provide fallback data during crypto service outages","invocations":1,"location":{"column":5,"line":226},"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should provide fallback data during crypto service outages"},{"ancestorTitles":["Global Risk Routes - Expansion Tests","Error Handling and Resilience - Expansion"],"duration":4,"failureDetails":[{}],"failureMessages":["Error: expected 200 \"OK\", got 500 \"Internal Server Error\"\n    at expect (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:247:10)\n    at Generator.call (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at Generator._invoke [as next] (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at _next (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at new Promise (<anonymous>)\n    at Object.<anonymous> (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at Promise.then.completed (/home/davicho/etherai-foresight-platform-main/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/davicho/etherai-foresight-platform-main/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/davicho/etherai-foresight-platform-main/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/davicho/etherai-foresight-platform-main/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/davicho/etherai-foresight-platform-main/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/davicho/etherai-foresight-platform-main/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/davicho/etherai-foresight-platform-main/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/davicho/etherai-foresight-platform-main/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/davicho/etherai-foresight-platform-main/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/davicho/etherai-foresight-platform-main/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/davicho/etherai-foresight-platform-main/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/davicho/etherai-foresight-platform-main/node_modules/jest-runner/build/runTest.js:444:34)\n----\n    at Test._assertStatus (/home/davicho/etherai-foresight-platform-main/node_modules/supertest/lib/test.js:252:14)\n    at /home/davicho/etherai-foresight-platform-main/node_modules/supertest/lib/test.js:308:13\n    at Test._assertFunction (/home/davicho/etherai-foresight-platform-main/node_modules/supertest/lib/test.js:285:13)\n    at Test.assert (/home/davicho/etherai-foresight-platform-main/node_modules/supertest/lib/test.js:164:23)\n    at Server.localAssert (/home/davicho/etherai-foresight-platform-main/node_modules/supertest/lib/test.js:120:14)\n    at Object.onceWrapper (node:events:638:28)\n    at Server.emit (node:events:524:28)\n    at emitCloseNT (node:net:2344:8)\n    at processTicksAndRejections (node:internal/process/task_queues:81:21)"],"fullName":"Global Risk Routes - Expansion Tests Error Handling and Resilience - Expansion should maintain service availability during community resilience failures","invocations":1,"location":{"column":5,"line":239},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should maintain service availability during community resilience failures"},{"ancestorTitles":["Global Risk Routes - Expansion Tests","Error Handling and Resilience - Expansion"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Global Risk Routes - Expansion Tests Error Handling and Resilience - Expansion should handle malformed query parameters gracefully","invocations":1,"location":{"column":5,"line":254},"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle malformed query parameters gracefully"},{"ancestorTitles":["Global Risk Routes - Expansion Tests","Error Handling and Resilience - Expansion"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Global Risk Routes - Expansion Tests Error Handling and Resilience - Expansion should handle invalid country codes in community resilience","invocations":1,"location":{"column":5,"line":263},"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle invalid country codes in community resilience"},{"ancestorTitles":["Global Risk Routes - Expansion Tests","Performance and Scalability - Expansion"],"duration":16,"failureDetails":[{"matcherResult":{"actual":54,"expected":35,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 35\nReceived: 54","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 35\nReceived: 54\n    at toBe (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:308:42)\n    at Array.forEach (<anonymous>)\n    at forEach (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:306:17)\n    at Generator.call (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at Generator._invoke [as next] (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Global Risk Routes - Expansion Tests Performance and Scalability - Expansion should handle rapid consecutive requests","invocations":1,"location":{"column":5,"line":288},"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should handle rapid consecutive requests"},{"ancestorTitles":["Global Risk Routes - Expansion Tests","Performance and Scalability - Expansion"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"Global Risk Routes - Expansion Tests Performance and Scalability - Expansion should maintain response format consistency across different scenarios","invocations":1,"location":{"column":5,"line":312},"numPassingAsserts":18,"retryReasons":[],"status":"passed","title":"should maintain response format consistency across different scenarios"}],"endTime":1760406599814,"message":"  ● Global Risk Routes - Expansion Tests › GET /api/global-risk/crypto-volatility - Advanced Scenarios › should handle large cryptocurrency portfolios\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 65\n    Received: 71\n\n      52 |         .expect(200);\n      53 |\n    > 54 |       expect(response.body.data.value).toBe(65);\n         |                                        ^\n      55 |       expect(response.body.data.unit).toBe('%');\n      56 |       expect(mockCryptoService.getCryptoMarketAnalysis).toHaveBeenCalledWith(cryptoIds);\n      57 |     });\n\n      at toBe (__tests__/routes/globalRiskRoutes.expansion.test.js:54:40)\n      at Generator.call (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n      at Generator._invoke [as next] (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n\n  ● Global Risk Routes - Expansion Tests › GET /api/global-risk/crypto-volatility - Advanced Scenarios › should handle extreme volatility scenarios\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 95\n    Received: 61\n\n      79 |         .expect(200);\n      80 |\n    > 81 |       expect(response.body.data.value).toBe(95);\n         |                                        ^\n      82 |       expect(response.body.data.topic).toBe('crypto-volatility');\n      83 |     });\n      84 |\n\n      at toBe (__tests__/routes/globalRiskRoutes.expansion.test.js:81:40)\n      at Generator.call (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n      at Generator._invoke [as next] (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n\n  ● Global Risk Routes - Expansion Tests › GET /api/global-risk/crypto-volatility - Advanced Scenarios › should provide stable low-volatility responses\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 15\n    Received: 99\n\n      105 |         .expect(200);\n      106 |\n    > 107 |       expect(response.body.data.value).toBe(15);\n          |                                        ^\n      108 |       expect(response.body.data.unit).toBe('%');\n      109 |     });\n      110 |\n\n      at toBe (__tests__/routes/globalRiskRoutes.expansion.test.js:107:40)\n      at Generator.call (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n      at Generator._invoke [as next] (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n\n  ● Global Risk Routes - Expansion Tests › GET /api/global-risk/crypto-volatility - Advanced Scenarios › should handle single cryptocurrency analysis\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 42\n    Received: 88\n\n      128 |         .expect(200);\n      129 |\n    > 130 |       expect(response.body.data.value).toBe(42);\n          |                                        ^\n      131 |       expect(mockCryptoService.getCryptoMarketAnalysis).toHaveBeenCalledWith(['solana']);\n      132 |     });\n      133 |   });\n\n      at toBe (__tests__/routes/globalRiskRoutes.expansion.test.js:130:40)\n      at Generator.call (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n      at Generator._invoke [as next] (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n\n  ● Global Risk Routes - Expansion Tests › Error Handling and Resilience - Expansion › should maintain service availability during community resilience failures\n\n    expected 200 \"OK\", got 500 \"Internal Server Error\"\n\n      245 |       const response = await request(app)\n      246 |         .get('/api/global-risk/community-resilience?countries=COL')\n    > 247 |         .expect(200);\n          |          ^\n      248 |\n      249 |       expect(response.body.data.value).toBeGreaterThanOrEqual(20);\n      250 |       expect(response.body.data.value).toBeLessThanOrEqual(40);\n\n      at expect (__tests__/routes/globalRiskRoutes.expansion.test.js:247:10)\n      at Generator.call (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n      at Generator._invoke [as next] (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n      at _next (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n      at Object.<anonymous> (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n      ----\n      at Test._assertStatus (../node_modules/supertest/lib/test.js:252:14)\n      at ../node_modules/supertest/lib/test.js:308:13\n      at Test._assertFunction (../node_modules/supertest/lib/test.js:285:13)\n      at Test.assert (../node_modules/supertest/lib/test.js:164:23)\n      at Server.localAssert (../node_modules/supertest/lib/test.js:120:14)\n\n  ● Global Risk Routes - Expansion Tests › Performance and Scalability - Expansion › should handle rapid consecutive requests\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 35\n    Received: 54\n\n      306 |       responses.forEach(response => {\n      307 |         expect(response.status).toBe(200);\n    > 308 |         expect(response.body.data.value).toBe(35);\n          |                                          ^\n      309 |       });\n      310 |     });\n      311 |\n\n      at toBe (__tests__/routes/globalRiskRoutes.expansion.test.js:308:42)\n          at Array.forEach (<anonymous>)\n      at forEach (__tests__/routes/globalRiskRoutes.expansion.test.js:306:17)\n      at Generator.call (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n      at Generator._invoke [as next] (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRiskRoutes.expansion.test.js:2:1)\n","name":"/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRiskRoutes.expansion.test.js","startTime":1760406599657,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Global Risk Routes","GET /api/global-risk/food-security"],"duration":10,"failureDetails":[{"matcherResult":{"actual":{"countries":["COL","PER","ARG","BRA","CHL","ECU"]},"expected":{"countries":["COL","PER","ARG"],"year":2024,"source":"World Bank API - SN.ITK.DEFC.ZS","data":{"COL":{"value":5.2,"year":"2024","country":"Colombia"},"PER":{"value":7.1,"year":"2024","country":"Peru"},"ARG":{"value":4.8,"year":"2024","country":"Argentina"}},"globalAverage":5.7},"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 20\n+ Received  +  3\n\n  Object {\n    \"countries\": Array [\n      \"COL\",\n      \"PER\",\n      \"ARG\",\n+     \"BRA\",\n+     \"CHL\",\n+     \"ECU\",\n    ],\n-   \"data\": Object {\n-     \"ARG\": Object {\n-       \"country\": \"Argentina\",\n-       \"value\": 4.8,\n-       \"year\": \"2024\",\n-     },\n-     \"COL\": Object {\n-       \"country\": \"Colombia\",\n-       \"value\": 5.2,\n-       \"year\": \"2024\",\n-     },\n-     \"PER\": Object {\n-       \"country\": \"Peru\",\n-       \"value\": 7.1,\n-       \"year\": \"2024\",\n-     },\n-   },\n-   \"globalAverage\": 5.7,\n-   \"source\": \"World Bank API - SN.ITK.DEFC.ZS\",\n-   \"year\": 2024,\n  }","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 20\n+ Received  +  3\n\n  Object {\n    \"countries\": Array [\n      \"COL\",\n      \"PER\",\n      \"ARG\",\n+     \"BRA\",\n+     \"CHL\",\n+     \"ECU\",\n    ],\n-   \"data\": Object {\n-     \"ARG\": Object {\n-       \"country\": \"Argentina\",\n-       \"value\": 4.8,\n-       \"year\": \"2024\",\n-     },\n-     \"COL\": Object {\n-       \"country\": \"Colombia\",\n-       \"value\": 5.2,\n-       \"year\": \"2024\",\n-     },\n-     \"PER\": Object {\n-       \"country\": \"Peru\",\n-       \"value\": 7.1,\n-       \"year\": \"2024\",\n-     },\n-   },\n-   \"globalAverage\": 5.7,\n-   \"source\": \"World Bank API - SN.ITK.DEFC.ZS\",\n-   \"year\": 2024,\n  }\n    at toEqual (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRisk.test.js:48:32)\n    at Generator.call (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRisk.test.js:2:1)\n    at Generator._invoke [as next] (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRisk.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRisk.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRisk.test.js:2:1)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Global Risk Routes GET /api/global-risk/food-security should return a 200 OK status and the food security data for LATAM countries","invocations":1,"location":{"column":3,"line":28},"numPassingAsserts":3,"retryReasons":[],"status":"failed","title":"should return a 200 OK status and the food security data for LATAM countries"},{"ancestorTitles":["Global Risk Routes","GET /api/global-risk/food-security"],"duration":4,"failureDetails":[{"matcherResult":{"actual":200,"expected":500,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 500\nReceived: 200","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 500\nReceived: 200\n    at toBe (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRisk.test.js:58:29)\n    at Generator.call (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRisk.test.js:2:1)\n    at Generator._invoke [as next] (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRisk.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRisk.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRisk.test.js:2:1)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Global Risk Routes GET /api/global-risk/food-security should handle errors and return a 500 status","invocations":1,"location":{"column":3,"line":52},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle errors and return a 500 status"},{"ancestorTitles":["Global Risk Routes","GET /api/global-risk/climate-extremes"],"duration":4,"failureDetails":[{"matcherResult":{"actual":{"extremes":[]},"expected":[{"country":"Colombia","countryCode":"COL","avgMaxTemp":28.5,"avgMinTemp":18.2,"totalPrecipitation":150.3,"avgHumidity":75.2,"extremeEvents":3,"riskLevel":"medium","period":"Last 30 days","timestamp":"2025-10-10T18:00:00.000Z"},{"country":"Peru","countryCode":"PER","avgMaxTemp":25.8,"avgMinTemp":15.6,"totalPrecipitation":85.7,"avgHumidity":68.9,"extremeEvents":2,"riskLevel":"low","period":"Last 30 days","timestamp":"2025-10-10T18:00:00.000Z"}],"message":"expect(received).toEqual(expected) // deep equality\n\nExpected: [{\"avgHumidity\": 75.2, \"avgMaxTemp\": 28.5, \"avgMinTemp\": 18.2, \"country\": \"Colombia\", \"countryCode\": \"COL\", \"extremeEvents\": 3, \"period\": \"Last 30 days\", \"riskLevel\": \"medium\", \"timestamp\": \"2025-10-10T18:00:00.000Z\", \"totalPrecipitation\": 150.3}, {\"avgHumidity\": 68.9, \"avgMaxTemp\": 25.8, \"avgMinTemp\": 15.6, \"country\": \"Peru\", \"countryCode\": \"PER\", \"extremeEvents\": 2, \"period\": \"Last 30 days\", \"riskLevel\": \"low\", \"timestamp\": \"2025-10-10T18:00:00.000Z\", \"totalPrecipitation\": 85.7}]\nReceived: {\"extremes\": []}","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\nExpected: [{\"avgHumidity\": 75.2, \"avgMaxTemp\": 28.5, \"avgMinTemp\": 18.2, \"country\": \"Colombia\", \"countryCode\": \"COL\", \"extremeEvents\": 3, \"period\": \"Last 30 days\", \"riskLevel\": \"medium\", \"timestamp\": \"2025-10-10T18:00:00.000Z\", \"totalPrecipitation\": 150.3}, {\"avgHumidity\": 68.9, \"avgMaxTemp\": 25.8, \"avgMinTemp\": 15.6, \"country\": \"Peru\", \"countryCode\": \"PER\", \"extremeEvents\": 2, \"period\": \"Last 30 days\", \"riskLevel\": \"low\", \"timestamp\": \"2025-10-10T18:00:00.000Z\", \"totalPrecipitation\": 85.7}]\nReceived: {\"extremes\": []}\n    at toEqual (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRisk.test.js:100:32)\n    at Generator.call (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRisk.test.js:2:1)\n    at Generator._invoke [as next] (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRisk.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRisk.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRisk.test.js:2:1)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Global Risk Routes GET /api/global-risk/climate-extremes should return a 200 OK status and the climate extremes data for LATAM countries","invocations":1,"location":{"column":3,"line":65},"numPassingAsserts":3,"retryReasons":[],"status":"failed","title":"should return a 200 OK status and the climate extremes data for LATAM countries"},{"ancestorTitles":["Global Risk Routes","GET /api/global-risk/climate-extremes"],"duration":7,"failureDetails":[{"matcherResult":{"actual":200,"expected":500,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 500\nReceived: 200","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 500\nReceived: 200\n    at toBe (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRisk.test.js:110:29)\n    at Generator.call (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRisk.test.js:2:1)\n    at Generator._invoke [as next] (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRisk.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRisk.test.js:2:1)\n    at asyncGeneratorStep (/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRisk.test.js:2:1)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Global Risk Routes GET /api/global-risk/climate-extremes should handle errors and return a 500 status","invocations":1,"location":{"column":3,"line":104},"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should handle errors and return a 500 status"},{"ancestorTitles":["GET /api/global-risk/community-resilience"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"GET /api/global-risk/community-resilience should return a 200 OK status and the community resilience data for LATAM countries","invocations":1,"location":{"column":3,"line":118},"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should return a 200 OK status and the community resilience data for LATAM countries"},{"ancestorTitles":["GET /api/global-risk/community-resilience"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"GET /api/global-risk/community-resilience should accept custom countries and days parameters","invocations":1,"location":{"column":3,"line":146},"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should accept custom countries and days parameters"},{"ancestorTitles":["GET /api/global-risk/community-resilience"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"GET /api/global-risk/community-resilience should handle errors and return a 500 status","invocations":1,"location":{"column":3,"line":169},"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle errors and return a 500 status"}],"endTime":1760406599909,"message":"  ● Global Risk Routes › GET /api/global-risk/food-security › should return a 200 OK status and the food security data for LATAM countries\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 20\n    + Received  +  3\n\n      Object {\n        \"countries\": Array [\n          \"COL\",\n          \"PER\",\n          \"ARG\",\n    +     \"BRA\",\n    +     \"CHL\",\n    +     \"ECU\",\n        ],\n    -   \"data\": Object {\n    -     \"ARG\": Object {\n    -       \"country\": \"Argentina\",\n    -       \"value\": 4.8,\n    -       \"year\": \"2024\",\n    -     },\n    -     \"COL\": Object {\n    -       \"country\": \"Colombia\",\n    -       \"value\": 5.2,\n    -       \"year\": \"2024\",\n    -     },\n    -     \"PER\": Object {\n    -       \"country\": \"Peru\",\n    -       \"value\": 7.1,\n    -       \"year\": \"2024\",\n    -     },\n    -   },\n    -   \"globalAverage\": 5.7,\n    -   \"source\": \"World Bank API - SN.ITK.DEFC.ZS\",\n    -   \"year\": 2024,\n      }\n\n      46 |     expect(response.body.success).toBe(true);\n      47 |     expect(response.body.source).toBe('Praevisio-Aion-Simulated-WorldBank');\n    > 48 |     expect(response.body.data).toEqual(mockData);\n         |                                ^\n      49 |     expect(getFoodSecurityIndex).toHaveBeenCalledTimes(1);\n      50 |   });\n      51 |\n\n      at toEqual (__tests__/routes/globalRisk.test.js:48:32)\n      at Generator.call (__tests__/routes/globalRisk.test.js:2:1)\n      at Generator._invoke [as next] (__tests__/routes/globalRisk.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRisk.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRisk.test.js:2:1)\n\n  ● Global Risk Routes › GET /api/global-risk/food-security › should handle errors and return a 500 status\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 500\n    Received: 200\n\n      56 |     const response = await request(app).get('/api/global-risk/food-security');\n      57 |\n    > 58 |     expect(response.status).toBe(500);\n         |                             ^\n      59 |     expect(response.body.success).toBe(false);\n      60 |     expect(response.body.message).toContain('Could not retrieve food security data.');\n      61 |   });\n\n      at toBe (__tests__/routes/globalRisk.test.js:58:29)\n      at Generator.call (__tests__/routes/globalRisk.test.js:2:1)\n      at Generator._invoke [as next] (__tests__/routes/globalRisk.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRisk.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRisk.test.js:2:1)\n\n  ● Global Risk Routes › GET /api/global-risk/climate-extremes › should return a 200 OK status and the climate extremes data for LATAM countries\n\n    expect(received).toEqual(expected) // deep equality\n\n    Expected: [{\"avgHumidity\": 75.2, \"avgMaxTemp\": 28.5, \"avgMinTemp\": 18.2, \"country\": \"Colombia\", \"countryCode\": \"COL\", \"extremeEvents\": 3, \"period\": \"Last 30 days\", \"riskLevel\": \"medium\", \"timestamp\": \"2025-10-10T18:00:00.000Z\", \"totalPrecipitation\": 150.3}, {\"avgHumidity\": 68.9, \"avgMaxTemp\": 25.8, \"avgMinTemp\": 15.6, \"country\": \"Peru\", \"countryCode\": \"PER\", \"extremeEvents\": 2, \"period\": \"Last 30 days\", \"riskLevel\": \"low\", \"timestamp\": \"2025-10-10T18:00:00.000Z\", \"totalPrecipitation\": 85.7}]\n    Received: {\"extremes\": []}\n\n       98 |     expect(response.body.success).toBe(true);\n       99 |     expect(response.body.source).toBe('Praevisio-Aion-NASA-POWER-Integration');\n    > 100 |     expect(response.body.data).toEqual(mockData);\n          |                                ^\n      101 |     expect(getClimateExtremesIndex).toHaveBeenCalledTimes(1);\n      102 |   });\n      103 |\n\n      at toEqual (__tests__/routes/globalRisk.test.js:100:32)\n      at Generator.call (__tests__/routes/globalRisk.test.js:2:1)\n      at Generator._invoke [as next] (__tests__/routes/globalRisk.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRisk.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRisk.test.js:2:1)\n\n  ● Global Risk Routes › GET /api/global-risk/climate-extremes › should handle errors and return a 500 status\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 500\n    Received: 200\n\n      108 |     const response = await request(app).get('/api/global-risk/climate-extremes');\n      109 |\n    > 110 |     expect(response.status).toBe(500);\n          |                             ^\n      111 |     expect(response.body.success).toBe(false);\n      112 |     expect(response.body.message).toContain('Could not retrieve climate extremes data.');\n      113 |   });\n\n      at toBe (__tests__/routes/globalRisk.test.js:110:29)\n      at Generator.call (__tests__/routes/globalRisk.test.js:2:1)\n      at Generator._invoke [as next] (__tests__/routes/globalRisk.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRisk.test.js:2:1)\n      at asyncGeneratorStep (__tests__/routes/globalRisk.test.js:2:1)\n","name":"/home/davicho/etherai-foresight-platform-main/server/__tests__/routes/globalRisk.test.js","startTime":1760406599815,"status":"failed","summary":""}],"wasInterrupted":false}
